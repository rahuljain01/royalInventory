[{"/Users/rahuljain/Downloads/royalInventory/src/pages/PurchaseOrder.js":"1","/Users/rahuljain/Downloads/royalInventory/src/pages/AddItemModel.js":"2","/Users/rahuljain/Downloads/royalInventory/src/reportWebVitals.js":"3","/Users/rahuljain/Downloads/royalInventory/src/pages/InvoicesList.js":"4","/Users/rahuljain/Downloads/royalInventory/src/pages/Popup.js":"5","/Users/rahuljain/Downloads/royalInventory/src/index.js":"6","/Users/rahuljain/Downloads/royalInventory/src/pages/AddCustomer.js":"7","/Users/rahuljain/Downloads/royalInventory/src/components/ItemListDropdown.js":"8","/Users/rahuljain/Downloads/royalInventory/src/pages/CreateInvoice.js":"9","/Users/rahuljain/Downloads/royalInventory/src/components/SidebarData.js":"10","/Users/rahuljain/Downloads/royalInventory/src/components/RCreatable.js":"11","/Users/rahuljain/Downloads/royalInventory/src/config/Config.js":"12","/Users/rahuljain/Downloads/royalInventory/src/components/ListItem.js":"13","/Users/rahuljain/Downloads/royalInventory/src/App.js":"14","/Users/rahuljain/Downloads/royalInventory/src/pages/Reports.js":"15","/Users/rahuljain/Downloads/royalInventory/src/pages/ItemView.js":"16","/Users/rahuljain/Downloads/royalInventory/src/pages/AddItem/AddItem.js":"17","/Users/rahuljain/Downloads/royalInventory/src/components/Sidebar.js":"18","/Users/rahuljain/Downloads/royalInventory/src/components/FileUpload.js":"19","/Users/rahuljain/Downloads/royalInventory/src/components/SubMenu.js":"20","/Users/rahuljain/Downloads/royalInventory/src/helper/ApiHelper.js":"21","/Users/rahuljain/Downloads/royalInventory/src/components/Card/Card.js":"22","/Users/rahuljain/Downloads/royalInventory/src/pages/Team.js":"23","/Users/rahuljain/Downloads/royalInventory/src/components/Invoice/InvoiceItem.js":"24","/Users/rahuljain/Downloads/royalInventory/src/components/Table/Table.js":"25","/Users/rahuljain/Downloads/royalInventory/src/components/Table/TableRow.js":"26","/Users/rahuljain/Downloads/royalInventory/src/pages/PdfInvoice.js":"27","/Users/rahuljain/Downloads/royalInventory/src/components/CtaButton/CtaButton.js":"28","/Users/rahuljain/Downloads/royalInventory/src/pages/AddStaff/AddStaff.js":"29","/Users/rahuljain/Downloads/royalInventory/src/components/DateInput/DateInput.js":"30","/Users/rahuljain/Downloads/royalInventory/src/components/FilterButton/FilterButton.js":"31","/Users/rahuljain/Downloads/royalInventory/src/components/PageTitleContainer/PageTitleContainer.js":"32","/Users/rahuljain/Downloads/royalInventory/src/pages/CustomerList/CustomerList.js":"33","/Users/rahuljain/Downloads/royalInventory/src/pages/PurchaseList/PurchaseList.js":"34","/Users/rahuljain/Downloads/royalInventory/src/pages/AddVendor/AddVendor.js":"35","/Users/rahuljain/Downloads/royalInventory/src/pages/VendorList/VendorList.js":"36","/Users/rahuljain/Downloads/royalInventory/src/pages/AddStore/AddStore.js":"37","/Users/rahuljain/Downloads/royalInventory/src/pages/StoreList/StoreList.js":"38","/Users/rahuljain/Downloads/royalInventory/src/pages/BrandList/BrandList.js":"39","/Users/rahuljain/Downloads/royalInventory/src/pages/CategoryList/CategoryList.js":"40","/Users/rahuljain/Downloads/royalInventory/src/components/Alert/AlertPopup.js":"41","/Users/rahuljain/Downloads/royalInventory/src/components/Button/LinkButton/LinkButton.js":"42"},{"size":17002,"mtime":1627925733534,"results":"43","hashOfConfig":"44"},{"size":651,"mtime":1623096856434,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1606676707000,"results":"46","hashOfConfig":"44"},{"size":5742,"mtime":1628259601079,"results":"47","hashOfConfig":"44"},{"size":1101,"mtime":1623096873573,"results":"48","hashOfConfig":"44"},{"size":523,"mtime":1629573828590,"results":"49","hashOfConfig":"44"},{"size":5367,"mtime":1629378903655,"results":"50","hashOfConfig":"44"},{"size":2431,"mtime":1620234327287,"results":"51","hashOfConfig":"44"},{"size":19544,"mtime":1629482950334,"results":"52","hashOfConfig":"44"},{"size":2809,"mtime":1628007690123,"results":"53","hashOfConfig":"44"},{"size":1100,"mtime":1627888961545,"results":"54","hashOfConfig":"44"},{"size":89,"mtime":1626536962743,"results":"55","hashOfConfig":"44"},{"size":1001,"mtime":1624981595893,"results":"56","hashOfConfig":"44"},{"size":2517,"mtime":1628007711234,"results":"57","hashOfConfig":"44"},{"size":525,"mtime":1606676707000,"results":"58","hashOfConfig":"44"},{"size":1815,"mtime":1626539430415,"results":"59","hashOfConfig":"44"},{"size":10887,"mtime":1629654568176,"results":"60","hashOfConfig":"44"},{"size":2135,"mtime":1623614180954,"results":"61","hashOfConfig":"44"},{"size":2004,"mtime":1619288986820,"results":"62","hashOfConfig":"44"},{"size":1591,"mtime":1606676707000,"results":"63","hashOfConfig":"44"},{"size":1554,"mtime":1629026458432,"results":"64","hashOfConfig":"44"},{"size":144,"mtime":1623686645503,"results":"65","hashOfConfig":"44"},{"size":148,"mtime":1606676707000,"results":"66","hashOfConfig":"44"},{"size":1250,"mtime":1624131940767,"results":"67","hashOfConfig":"44"},{"size":603,"mtime":1624360924100,"results":"68","hashOfConfig":"44"},{"size":655,"mtime":1627471470829,"results":"69","hashOfConfig":"44"},{"size":11618,"mtime":1629051318599,"results":"70","hashOfConfig":"44"},{"size":216,"mtime":1626804545008,"results":"71","hashOfConfig":"44"},{"size":3537,"mtime":1629482739652,"results":"72","hashOfConfig":"44"},{"size":300,"mtime":1626009030610,"results":"73","hashOfConfig":"44"},{"size":289,"mtime":1626167788746,"results":"74","hashOfConfig":"44"},{"size":226,"mtime":1626344096094,"results":"75","hashOfConfig":"44"},{"size":2758,"mtime":1629710248730,"results":"76","hashOfConfig":"44"},{"size":5623,"mtime":1627842639372,"results":"77","hashOfConfig":"44"},{"size":4375,"mtime":1628002229492,"results":"78","hashOfConfig":"44"},{"size":2791,"mtime":1629710336587,"results":"79","hashOfConfig":"44"},{"size":3138,"mtime":1629481657260,"results":"80","hashOfConfig":"44"},{"size":2679,"mtime":1629710324596,"results":"81","hashOfConfig":"44"},{"size":2675,"mtime":1628263412065,"results":"82","hashOfConfig":"44"},{"size":2713,"mtime":1629710284893,"results":"83","hashOfConfig":"44"},{"size":218,"mtime":1628265391519,"results":"84","hashOfConfig":"44"},{"size":200,"mtime":1626174013889,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},"zao9y",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"107"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"111"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rahuljain/Downloads/royalInventory/src/pages/PurchaseOrder.js",["200","201","202","203","204","205","206","207","208","209","210","211","212","213"],"import React, { useEffect } from \"react\";\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport AddCustomer from \"./AddCustomer\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport ItemListDropdown from \"../components/ItemListDropdown\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport \"../components/Icons.css\";\nimport AddItemModal from \"./AddItemModel\";\nimport PopUp from \"./Popup\";\nimport Card from \"../components/Card/Card\";\nimport './PurchaseOrder.css'\nimport PageTitleContainer from \"../components/PageTitleContainer/PageTitleContainer\";\nimport RCreatable from \"../components/RCreatable\";\nimport { getCall, postCall } from \"../helper/ApiHelper\";\nimport { config } from \"../config/Config\";\n\nconst StyledDiv = styled.div`\n  margin-left: 40rem;\n  margin-bottom: 2rem;\n  font-size: 1rem;\n  height: 80px;\n  justify-content: flex-start;\n`;\n\nconst companies = [\n  { text: \"Kurl On\", value: 1 },\n  { text: \"Good luck\", value: 2 },\n  { text: \"Arora furnishers\", value: 3 },\n  { text: \"Ideal Furniture\", value: 4 },\n];\nconst fullWidthTextFieldStyle = {\n  margin: \"1rem 0 1rem 0rem\",\n  width: \"80%\",\n  height: \"40px\",\n  border: \"1px solid\",\n};\n\nfunction ConvertItemsDataToDropdownData(items) {\n  var dropdownItem = [];\n  items.map((item, i) => {\n    dropdownItem.push({\n      image: item.imageUrl,\n      text: item.itemName,\n      value: item.itemName,\n    });\n  });\n  return dropdownItem;\n}\n\nfunction ConvertWarehouseDataToDropdownData(warehouses) {\n  var dropdownItem = [];\n  warehouses.map((warehouse, i) => {\n    dropdownItem.push({\n      value: warehouse.storeId,\n      label: warehouse.address,\n    });\n  });\n  return dropdownItem;\n}\n\nfunction ConvertVendorsDataToDropdownData(vendors) {\n  var dropdownItem = [];\n  vendors.map((vendor, i) => {\n    dropdownItem.push({\n      value: vendor.vendorId,\n      text: vendor.vendorName,\n    });\n  });\n  return dropdownItem;\n}\n\nconst ConvertDateToDisplayFormat = (date) => {\n  let givenDate = new Date(date)\n  return givenDate.toISOString().substr(0, 10);\n}\n\nfunction PurchaseOrder(props) {\n  let initialValues = props.location.state ? {\n    vendorId: props.location.state.vendorId,\n    vendor:props.location.state.vendor,\n    purchaseItem: props.location.state.purchaseItem,\n    purchaseDate: ConvertDateToDisplayFormat(props.location.state.purchaseDate),\n    isGstApplicable: props.location.state.isGst,\n    taxPaid: 1000,\n  }:{\n    vendorId: \"\",\n    vendor:{},\n    purchaseItem: [{ itemName: \"\", quantity: \"\", storeId:\"\", costPrice:\"\" }],\n    purchaseDate: \"\",\n    isGstApplicable: 1,\n    taxPaid: 0,\n  };\n\n  let isEditing = props.location.state ? true : false;\n\n  let history = useHistory();\n  let [shouldShowPopup, setShouldShowPopup] = useState(false);\n\n  const [warehouse, setWarehouse] = useState([]);\n  const [items, setItems] = useState([]);\n  const [vendors, setVendors] = useState([]);\n\n  useEffect(() => {\n    getItems()\n    getWarehouse()\n    getVendors()\n  }, []);\n\n  function addItem(e, values, setValues) {\n    const purchaseItem = [...values.purchaseItem];\n    purchaseItem.push({ itemName: \"\", quantity: \"\", storeId:\"\", costPrice:\"\"  });\n\n    setValues({ ...values, purchaseItem });\n  }\n\n\n\n  function onSubmit(fields) {\n    // display form field values on success\n    \n    let amount = fields.purchaseItem.reduce((accumulator, currentValue) => { return accumulator + (currentValue.costPrice * currentValue.quantity) }, 0);\n    console.log(amount)\n    fields[\"amount\"] = amount\n    alert(JSON.stringify(fields, null, 4));\n\n      if (fields['isGstApplicable']) {\n        fields[\"isGst\"] = 1\n      } else {\n        fields[\"isGst\"] = 0\n      }\n\n    delete fields['vendor']\n\n    postCall('purchases', fields).then(function (responseArr) {\n      console.log('SUCCESS!!');\n    })\n    .catch(function (reason) {\n      console.log('FAILURE!!');\n      alert(reason)\n    });\n    \n  }\n\n  function onItemDropDownChange(index, values, setValues, selectedItem) {\n    const purchaseItem = [...values.purchaseItem];\n    purchaseItem[index].itemName = selectedItem;\n\n    setValues({ ...values, purchaseItem });\n  }\n\n  function onWarehouseDropDownChange(index, values, setValues, selectedWarehouse) {\n    const purchaseItem = [...values.purchaseItem];\n    purchaseItem[index].storeId = selectedWarehouse;\n\n    setValues({ ...values, purchaseItem });\n  }\n\n  function onCompanyDropDownChange(values, setValues, selectedItem) {\n    let vendorId = values.vendorId;\n\n    vendorId = selectedItem\n    setValues({ ...values, vendorId });\n  }\n\n  const getItems = () => {\n    getCall('items').then(function (responseArr) {\n      setItems(responseArr)\n      console.log('SUCCESS!!');\n    })\n    .catch(function (reason) {\n      console.log('FAILURE!!');\n      alert(reason)\n    });\n  }\n\n  const getVendors = () => {\n    getCall('vendors').then(function (responseArr) {\n      setVendors(responseArr)\n      console.log('SUCCESS!!');\n    })\n    .catch(function (reason) {\n      console.log('FAILURE!!');\n      alert(reason)\n    });\n  }\n\n  const getWarehouse = () => {\n    getCall('stores').then(function (responseArr) {\n      setWarehouse(responseArr)\n      console.log('SUCCESS!!');\n    })\n    .catch(function (reason) {\n      console.log('FAILURE!!');\n      alert(reason)\n    });\n  }\n\n  function removeItem(index, values, setValues) {\n    const purchaseItem = [...values.purchaseItem];\n    purchaseItem.splice(index, 1);\n\n    setValues({ ...values, purchaseItem });\n  }\n\n  return (\n    <PageTitleContainer title='Create Purchase Order'>\n    <Card className='purchase-container'>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        enableReinitialize={true}\n      >\n        {({ errors, values, touched, setValues, setFieldValue }) => (\n          <Form>\n            <div>\n              <div style={{\n                        display: \"flex\",\n                        justifyContent: 'flex-start',\n                        alignItems: 'center',\n                      }}>\n                    <label\n                      style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        margin: \"1rem 1rem 1rem 0rem\",\n                        width: \"100px\",\n                        height: \"40px\",\n                        verticalAlign: 'middle'\n                      }}\n                    >\n                      Select Company\n                    </label>\n                    <Dropdown\n                      name=\"vendorId\"\n                      fluid\n                      search\n                      selection\n                      options={ConvertVendorsDataToDropdownData(vendors)}\n                      style={fullWidthTextFieldStyle}\n                      onChange={(event, data) => {\n                        onCompanyDropDownChange(values, setValues, data.value);\n                      }}\n                      defaultValue={{value:values.vendor.vendorId, text:values.vendor.vendorName}}\n                    />\n              </div>\n\n              <div className=\"card-body border-bottom\">\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label\n                      style={{\n                        margin: \"1rem 0 1rem 0rem\",\n                        width: \"100px\",\n                        height: \"40px\",\n                      }}\n                    >\n                      Purchase Date\n                    </label>\n                    <Field\n                      name=\"purchaseDate\"\n                      type=\"date\"\n                      style={{\n                        margin: \"1rem 0 1rem 2rem\",\n                        width: \"300px\",\n                        height: \"40px\",\n                        borderWidth: \"1px solid\",\n                      }}\n                    ></Field>\n                  </div>\n                </div>\n              </div>\n              <div className='purchase-form-group-container-div'>\n                <label className='gst-label'>\n                  <Field\n                    type=\"checkbox\"\n                    name=\"checked\"\n                    value=\"isGstApplicable\"\n                    checked={values.isGstApplicable == 1}\n                    style={{ width: \"20px\", height: \"20px\", marginRight: '10px' }}\n                    onChange={event =>\n                      setFieldValue(\"isGstApplicable\", !values.isGstApplicable)\n                    }\n                  />\n                  Is GST Applied\n                </label>\n              </div>\n              <FieldArray name=\"items\">\n                {() =>\n                  values.purchaseItem.map((item, i) => {\n                    const ticketErrors =\n                      (errors.items?.length && errors.items[i]) || {};\n                    const ticketTouched =\n                      (touched.items?.length && touched.items[i]) || {};\n                    return (\n                      <div key={i} className=\"list-group list-group-flush\">\n                        <div className=\"list-group-item\">\n                          <h5\n                            className=\"card-title\"\n                            style={{\n                              margin: \"1rem 0 1rem 0rem\",\n                              width: \"100%\",\n                              height: \"40px\",\n                            }}\n                          >\n                            Item {i + 1}\n                          </h5>\n                          <div style={{\n                            width: \"100%\",\n                            display:'flex',\n                            \n                          }}>\n                        <div\n                          className=\"form-group col-6\"\n                          style={{\n                            margin: \"1rem 0 1rem 0rem\",\n                            width: \"90%\",\n                            display:'flex',\n                            flexDirection:'column',\n                            \n                          }}\n                        >\n                          <div style={{ width: \"100%\",display:'flex'}}>\n                            <div style={{ width: \"55%\", float: \"left\" }}>\n                            <Dropdown\n                              name={`purchaseItem.${i}.name`}\n                              placeholder=\"Select Item\"\n                              fluid\n                              search\n                              selection\n                              options={ConvertItemsDataToDropdownData(items)}\n                              onChange={(event, data) => {\n                                onItemDropDownChange(\n                                  i,\n                                  values,\n                                  setValues,\n                                  data.value\n                                );\n                              }}\n                              defaultValue={item.itemName}\n                            />\n                            <ErrorMessage\n                              name={`purchaseItem.${i}.name`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div>\n                            <div style={{ width: \"45%\" }}>\n                            <label style={{ margin: \"0rem 1rem 0rem 1rem\", width:'30%' }}>\n                              Quantity\n                            </label>\n                            <Field\n                              name={`purchaseItem.${i}.quantity`}\n                              type=\"text\"\n                              style={{ height: \"40px\", width:'70%'  }}\n                            />\n                            <ErrorMessage\n                              name={`purchaseItem.${i}.quantity`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div>\n                          </div>\n                          <div style={{display:'flex', marginTop:'20px'}}>\n                            <div style={{width:'45%'}}>\n                            <label style={{width:'30%', marginRight:'10px'}}>\n                              Cost Price\n                            </label>\n                            <Field\n                              name={`purchaseItem.${i}.costPrice`}\n                              type=\"number\"\n                              style={{ height: \"40px\", width:'70%' }}\n                            />\n                            <ErrorMessage\n                              name={`purchaseItem.${i}.costPrice`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div>\n                            <div  style={{width:'55%', display:'flex', alignItems:'center'}}>\n                              <label  style={{width:'30%'}}>Warehouse:</label>\n                              <RCreatable\n                                name={`items.${i}.storeId`}\n                                onChange={(event, data) => {\n                                  onWarehouseDropDownChange(\n                                    i,\n                                    values,\n                                    setValues,\n                                    data.value\n                                  );\n                                }}\n                                onBlur={() => {}}\n                                options={ConvertWarehouseDataToDropdownData(warehouse)}\n                                defaultValue={isEditing ? [{label: item.store.address, value: item.storeId}]:null}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div style={{width:'10%', display:'flex', justifyContent:'center',alignItems:'center'}}>\n                        <button\n                              className=\"removeLink\"\n                              type=\"button\"\n                              onClick={(e) => removeItem(i, values, setValues)}\n                              style={{ margin: \"0rem 1rem 0rem 1rem\" }}\n                            >\n                              remove\n                            </button>\n                          </div>\n                        </div>\n                        </div>\n                      </div>\n                    );\n                  })\n                }\n              </FieldArray>\n\n              <div\n                style={{\n                  width: \"200px\",\n                  marginBottom: '50px',\n                  justifyContent: \"left\",\n                  float: \"right\",\n                }}\n              >\n                <button\n                  className=\"link\"\n                  type=\"button\"\n                  onClick={(e) => addItem(e, values, setValues)}\n                >\n                  <span className=\"icon icon-add bg-green ml-10\"></span>\n                  Add Line Item\n                </button>\n              </div>\n              <div\n                style={{\n                  width: \"100%\",\n                  justifyContent: \"center\",\n                  marginBottom: '50px',\n                  display: 'flex',\n                }}\n              >\n                <button\n                  className=\"link\"\n                  type=\"button\"\n                  onClick={(e) => {\n                    setShouldShowPopup(true);\n                  }}\n                >\n                  <span className=\"icon icon-add bg-green ml-10\"></span>\n                  Add New Item\n                </button>\n              </div>\n              <div\n                style={{\n                  marginTop: \"50px\",\n                  display: \"flex\",\n                  width: \"100%\",\n                  justifyContent: 'center',\n                }}\n              >\n                <button\n                  type=\"submit\"\n                  style={{\n                    height: \"40px\",\n                    backgroundColor: \"#4CAF50\",\n                    width: \"140px\",\n                    float: \"left\",\n                    color: \"white\",\n                    borderRadius: \"4px\",\n                    border: \"0px\",\n                  }}\n                >\n                  {isEditing ? \"Edit Purchase\" : \"Create Purchase\"}\n                </button>\n                <button\n                  style={{ marginLeft: \"50px\", height: \"40px\", width: \"80px\" }}\n                  type=\"reset\"\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </Form>\n        )}\n      </Formik>\n      {shouldShowPopup ? (\n        <PopUp shouldShowPopup={shouldShowPopup} onClose={setShouldShowPopup} />\n      ) : null}\n    </Card>\n    </PageTitleContainer>\n  );\n}\n\nexport default PurchaseOrder;\n",["214","215"],"/Users/rahuljain/Downloads/royalInventory/src/pages/AddItemModel.js",[],["216","217"],"/Users/rahuljain/Downloads/royalInventory/src/reportWebVitals.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/InvoicesList.js",["218","219","220","221","222"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"../components/Card/Card\";\nimport FilterButton from \"../components/FilterButton/FilterButton\";\nimport Table from \"../components/Table/Table\";\nimport \"./InvoiceList.css\";\nimport DateInput from '../components/DateInput/DateInput'\nimport LinkButton from \"../components/Button/LinkButton/LinkButton\";\nimport PageTitleContainer from \"../components/PageTitleContainer/PageTitleContainer\";\nimport { getCall } from \"../helper/ApiHelper\";\n\nvar heading = ['Invoice Id', 'Name', 'Amount', 'Invoice Date', 'Delivery Date'];\n\nconst InvoicesList = () => {\n  const [invoices, setInvoices] = useState([]);\n  const [filteredInvoices, setFilteredInvoices] = useState([]);\n  const [isTodaySelected, setIsTodaySelected] = useState(false)\n  const [isYesterdaySelected, setIsYesterdaySelected] = useState(false)\n\n  let history = useHistory();\n\n  var filterFromDate\n  var filterToDate\n\n  useEffect(() => {\n\n    getCall('orders')\n      .then(function (responseArr) {\n        console.log(\"SUCCESS!!\");\n        setInvoices(responseArr);\n        setFilteredInvoices(responseArr);\n      })\n      .catch(function (reason) {\n        setInvoices(invoices);\n        console.log(\"FAILURE!!\");\n        alert(reason);\n      });\n  }, []);\n\n  const onEditClick = (index) => {\n    history.push({ pathname: \"/createInvoice\", state: invoices[index] });\n    console.log('edit clicked for index: ' + index)\n  }\n  const onCancelClick = (index) => {\n\n  }\n\n  function checkMatchesIninvoices(item, value) {\n    var ifTrue = false;\n    Object.keys(item).forEach((key) => {\n      if (\n        item[key].toString().toLowerCase().indexOf(value.toLowerCase()) > -1\n      ) {\n        ifTrue = true;\n      }\n    });\n\n    return ifTrue;\n  }\n\n  const handleSearchChange = (event) => {\n    var filteredList = invoices.filter(function (item) {\n      return checkMatchesIninvoices(item, event.target.value);\n    });\n    setFilteredInvoices(filteredList);\n  };\n\n  const convertDateToDisplayFormat = (date) => {\n    let givenDate = new Date(date)\n    return givenDate.toLocaleDateString(\"en-US\")\n  }\n\n  const invoiceData = invoices.map( (invoice) => (\n    [invoice.invoiceNumber, invoice.customerName, invoice.amount, convertDateToDisplayFormat(invoice.bookingDate), convertDateToDisplayFormat(invoice.deliveryDate)]\n  ))\n\n  const compareDate = (firstDate, secondDate) => {\n    return firstDate.getDay() == secondDate.getDay() && firstDate.getMonth() == secondDate.getMonth() && firstDate.getYear() == secondDate.getYear();\n  }\n\n  const checkBetweenDateRange = (to, from , checkingDate) => {\n    if((checkingDate <= to && checkingDate >= from)) {\n      return true\n    }\n  }\n    \n\n  const fromDateSelected = (event) => {\n    filterFromDate = event.target.value\n  }\n\n  const toDateSelected = (event) => {\n    \n    filterToDate = event.target.value\n    console.log('to date selected')\n    if (filterFromDate != null) {\n      var filteredList = invoices.filter(function (item) {\n        return checkBetweenDateRange(new Date(filterToDate),new Date(filterFromDate), new Date(item.bookingDate));\n      });\n      setFilteredInvoices(filteredList);\n    }\n  }\n\n  const onTodayClick = () => {\n    var filteredList = invoices.filter(function (item) {\n      let todayDate = new Date()\n      let bookingDate = new Date(item.bookingDate)\n      return compareDate(todayDate, bookingDate);\n    });\n    setIsTodaySelected(true)\n    setIsYesterdaySelected(false)\n    setFilteredInvoices(filteredList);\n  }\n\n  const onYesterdayClick = () => {\n    var filteredList = invoices.filter(function (item) {\n      let todayDate = new Date()\n      todayDate.setDate(todayDate.getDate() - 1)\n      let bookingDate = new Date(item.bookingDate)\n      return compareDate(todayDate, bookingDate);\n    });\n    setIsTodaySelected(false)\n    setIsYesterdaySelected(true)\n    setFilteredInvoices(filteredList);\n  }\n\n  const onClearFilterClick = () => {\n    setIsTodaySelected(false)\n    setIsYesterdaySelected(false)\n    setInvoices(invoices)\n  }\n\n  return (\n    <PageTitleContainer title=\"Invoice List\">\n\n      <div className='search-container'>\n        <input\n          id=\"invoiceSearchKey\"\n          name=\"invoiceSearchKey\"\n          type=\"text\"\n          placeholder=\"   Search\"\n          onChange={handleSearchChange}\n          style={{\n            margin: \"0rem 0rem 1rem 80px\",\n            width: \"60%\",\n            height: \"40px\",\n            border: \"1px solid\",\n            borderRadius: \"20px\",\n          }}\n        />\n      </div>\n      <div style={{\n        display:'flex',\n            margin: \"0rem 0rem 0rem 0rem\",\n            justifyContent:\"center\",\n          }}>\n            <FilterButton isSelected={isTodaySelected} onClick={onTodayClick}>Today</FilterButton>\n            <FilterButton isSelected={isYesterdaySelected} onClick={onYesterdayClick}>Yesterday</FilterButton>\n            <DateInput placeholder={'From:'} onChange={fromDateSelected}></DateInput>\n            <DateInput placeholder={'To:'} onChange={toDateSelected}></DateInput>\n            <LinkButton type=\"button\"\n                              onClick={onClearFilterClick}\n                            >\n                              Clear filter\n                            </LinkButton>\n        </div>\n      <Card className=\"invoice-container\">\n        <Table heading={heading} body={invoiceData} onEditClick={onEditClick} onCancelClick={onCancelClick}/>\n      </Card>\n\n      {/* <Card className=\"invoice-container\">\n        {invoiceData.map((invoice, index) => (\n          <InvoiceItem onClick={() => handleClick(index)} invoice={invoice} />\n        ))}\n      </Card> */}\n    </PageTitleContainer>\n  );\n};\n\nexport default InvoicesList;\n",["223","224"],"/Users/rahuljain/Downloads/royalInventory/src/pages/Popup.js",["225","226","227","228"],"import React, { Component, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\nimport MyEnhancedForm from \"./AddItem/AddItem\";\nimport \"./Popup.css\";\n\n// const customStyles = {\n//     content : {\n//       top                   : '50%',\n//       left                  : '50%',\n//       right                 : 'auto',\n//       bottom                : 'auto',\n//       marginRight           : '-50%',\n//       transform             : 'translate(-50%, -50%)'\n//     }\n//   };\n\nModal.setAppElement(\"#root\");\nfunction PopUp(props) {\n  const [modalIsOpen, setIsOpen] = useState(true);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    props.onClose(false);\n  }\n  return (\n    <Modal\n      isOpen={props.shouldShowPopup}\n      scrollable={true}\n      onAfterOpen={() => {}}\n      onRequestClose={closeModal}\n      contentLabel=\"Example Modal\"\n    >\n      <div className=\"scroll-component\">\n        <div className=\"scroll-content\">\n          <MyEnhancedForm />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default PopUp;\n","/Users/rahuljain/Downloads/royalInventory/src/index.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/AddCustomer.js",["229","230","231","232","233","234","235"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useFormik } from \"formik\";\nimport FileUpload from \"../components/FileUpload\";\nimport axios from \"axios\";\nimport Card from \"../components/Card/Card\";\nimport CtaButton from \"../components/CtaButton/CtaButton\";\nimport \"./AddCustomer.css\";\nimport { postCall, putCall } from \"../helper/ApiHelper\";\nimport PageTitleContainer from \"../components/PageTitleContainer/PageTitleContainer\";\nimport { useState } from \"react\";\nimport swal from 'sweetalert';\nimport { showMessage } from \"../components/Alert/AlertPopup\";\n\n\nconst InputLabel = styled.label`\n  margin-top: 1rem;\n  display: block;\n  font-size: 1rem;\n  height: 20px;\n  justify-content: flex-start;\n`;\n\nconst InputText = styled.input`\n  margin-top: 0rem;\n  font-size: 1rem;\n  border: 1px solid grey;\n  height: 40px;\n  width: 100%;\n  justify-content: flex-start;\n`;\n\nconst InputTextArea = styled.textarea`\n  font-size: 1rem;\n  height: 80px;\n  width: 100%;\n  justify-content: flex-start;\n`;\n\nconst InputSelect = styled.select`\n  margin-bottom: 1rem;\n  font-size: 1rem;\n  height: 40px;\n  width: 100%;\n  justify-content: flex-start;\n`;\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.customerName) {\n    errors.customerName = \"Required\";\n  } else if (values.customerName.length > 15) {\n    errors.customerName = \"Must be 15 characters or less\";\n  }\n\n  return errors;\n};\n\nconst AddCustomer = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [isInInvoice, setIsInInvoice] = useState(false);\n\n  useEffect(() => {\n    if (props.location == undefined && !props.customer) {\n      setIsEditing(false)\n    }  else if (props.customer){\n      setIsEditing(true)\n    } else if (props.location.state){\n      setIsEditing(true)\n    }\n    props.isInvoice ? setIsInInvoice(true) : setIsInInvoice(false);\n  }, []);\n\n  \n\n  const submitForm = (values) => {\n    if (isEditing) {\n      putCall(\"customers\", values)\n        .then((data) => {\n          console.log(\"successfully posted invoice\");\n          \n        })\n        .catch((reason) => {\n          console.log(\"failed in posting invoice\");\n          showMessage(\"OOPS!\",\n          \"Something Went Wrong!!\",\n          \"error\",\n          \"Ok\")\n        });\n      alert(JSON.stringify(values, null, 2));\n    } else {\n      values[\"customerId\"] = \"1\";\n      postCall(\"customers\", values)\n        .then((data) => {\n          console.log(\"successfully posted invoice\");\n          showMessage(\"Done!\",\n          \"Customer added successfully\",\n          \"success\",\n          \"Ok\")\n        })\n        .catch((reason) => {\n          console.log(\"failed in posting invoice\");\n          showMessage(\"OOPS!\",\n          \"Something Went Wrong!!\",\n          \"error\",\n          \"Ok\")\n        });\n      alert(JSON.stringify(values, null, 2));\n    }\n  }\n\n  const formik = useFormik({\n    initialValues: props.customer\n      ? props.customer\n      : {\n          customerName: \"\",\n          phone: 0,\n          address: \"\",\n          email: \"\",\n          gstNumber: \"\",\n        },\n    validate,\n    enableReinitialize: false,\n    onSubmit: submitForm,\n  });\n\n  const containerClass = isInInvoice\n    ? \"customer-invoice-container\"\n    : \"customer-container\";\n\nlet customerForm = {}\n\n  return (\n    <PageTitleContainer title={isInInvoice ? \"\":\"Add Customer\"}>\n      <Card className={containerClass}>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            formik.handleSubmit(e);\n          }}\n        >\n          <div>\n            <InputLabel>Customer Name:</InputLabel>\n            <InputText\n              id=\"customerName\"\n              name=\"customerName\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.customerName}\n            />\n            {formik.errors.customerName ? (\n              <div style={{ color: \"red\" }}>{formik.errors.customerName}</div>\n            ) : null}\n          </div>\n          <div>\n            <InputLabel>Phone Number:</InputLabel>\n            <InputText\n              id=\"phone\"\n              name=\"phone\"\n              type=\"number\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.phone}\n            />\n            {formik.errors.phone ? <div>{formik.errors.phone}</div> : null}\n          </div>\n\n          <div>\n            <InputLabel>Address:</InputLabel>\n            <InputTextArea\n              id=\"address\"\n              name=\"address\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.address}\n            />\n          </div>\n          <div>\n            <InputLabel>GST no:</InputLabel>\n            <InputText\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n              style={{ marginBottom: \"2rem\" }}\n            />\n          </div>\n          <CtaButton type={isInInvoice ? 'button':'submit'} onClick={() => {submitForm(formik.values)}}>\n            {isEditing ? \"EDIT\" : \"ADD\"}\n          </CtaButton>\n        </form>\n      </Card>\n    </PageTitleContainer>\n  );\n};\n\nexport default AddCustomer;\n",["236","237"],"/Users/rahuljain/Downloads/royalInventory/src/components/ItemListDropdown.js",["238","239","240"],"import React, { useState } from 'react';\n//import onClickOutside from 'react-onclickoutside';\nimport { Image, Item } from 'semantic-ui-react'\nimport './ItemListDropdown.css'\n\nfunction ItemListDropdown({ title, items, multiSelect = false }) {\n  const [open, setOpen] = useState(false);\n  const [selection, setSelection] = useState([]);\n  const toggle = () => setOpen(!open);\n  const [query, setQuery] = useState(\"\");\n // ItemListDropdown.handleClickOutside = () => setOpen(false);\n\n  function handleOnClick(item) {\n    if (!selection.some(current => current.id === item.id)) {\n      if (!multiSelect) {\n        setSelection([item]);\n      } else if (multiSelect) {\n        setSelection([...selection, item]);\n      }\n    } else {\n      let selectionAfterRemoval = selection;\n      selectionAfterRemoval = selectionAfterRemoval.filter(\n        current => current.id !== item.id\n      );\n      setSelection([...selectionAfterRemoval]);\n    }\n  }\n\n  function isItemInSelection(item) {\n    if (selection.some(current => current.id === item.id)) {\n      return true;\n    }\n    return false;\n  }\n\n  function filter(options) {\n      return options.filter(\n          (option) => \n            option['itemName'].toLowerCase().indexOf(query.toLowerCase()) > -1\n      );\n  }\n\n  return (\n    <div className=\"dd-wrapper\">\n      <div\n        className=\"dd-header\"\n        role=\"button\"\n        onClick={() => toggle(!open)}\n      >\n        <div className=\"dd-header__title\">\n          <input type='text' onChange={\n              e => {\n                  setQuery(e.target.value)\n              }\n          } placeholder={title}></input>\n        </div>\n        <div className=\"dd-header__action\">\n          <p>{open ? 'Close' : 'Open'}</p>\n        </div>\n      </div>\n      {open && (\n        <ul className=\"dd-list\">\n          {filter(items).map(item => (\n            <li className=\"dd-list-item\" key={item.id}>\n              <Item >\n                    <Item.Image size='tiny' src={item.imageUrl }/>\n                    <Item.Content>\n                    <Item.Header>{item.itemName}</Item.Header>\n                    </Item.Content>\n                </Item>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\n\n\n// const clickOutsideConfig = {\n//   handleClickOutside: () => ItemListDropdown.handleClickOutside,\n// };\n\n// export default onClickOutside(ItemListDropdown, clickOutsideConfig);\n\nexport default ItemListDropdown;",["241","242"],"/Users/rahuljain/Downloads/royalInventory/src/pages/CreateInvoice.js",["243","244","245","246","247","248","249","250","251"],"import React, { useEffect } from \"react\";\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport AddCustomer from \"./AddCustomer\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport ItemListDropdown from \"../components/ItemListDropdown\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport \"../components/Icons.css\";\nimport { getCall, postCall } from \"../helper/ApiHelper\";\nimport Card from \"../components/Card/Card\";\nimport \"./CreateInvoice.css\";\nimport CtaButton from \"../components/CtaButton/CtaButton\";\nimport RCreatable from \"../components/RCreatable\";\nimport PageTitleContainer from \"../components/PageTitleContainer/PageTitleContainer\";\n\nconst StyledDiv = styled.div`\n  margin-bottom: 2rem;\n  font-size: 1rem;\n  height: 80px;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n`;\n\n\nconst fullWidthTextFieldStyle = {\n  width: \"100%\",\n  height: \"40px\",\n  border: \"1px solid\",\n};\n\nfunction ConvertItemsDataToDropdownData(items) {\n  var dropdownItem = [];\n  items.map((item, i) => {\n    dropdownItem.push({\n      image: item.imageUrl,\n      text: item.itemName,\n      value: item.itemName,\n    });\n  });\n  return dropdownItem;\n}\n\nfunction ConvertStaffDataToDropdownData(staff) {\n  var dropdownItem = [];\n  staff.map((staff, i) => {\n    dropdownItem.push({\n      text: staff.staffName,\n      value: staff.staffId,\n    });\n  });\n  return dropdownItem;\n}\n\nfunction CreateInvoice(props) {\n  let initialValues = props.location.state\n    ? {\n        orderInvoice: props.location.state.orderInvoice,\n        customerNumber: props.location.state.customerId,\n        orderItems: props.location.state.orderItems,\n        customer: {},\n        deliveryDate: props.location.state.deliveryDate,\n        bookingDate: props.location.state.bookingDate,\n        isGst: false,\n        isFullyPaid:false,\n        staff:{},\n      }\n    : {\n        orderInvoice: \"\",\n        customerNumber: \"\",\n        orderItems: [{ name: \"\", quantity: \"\", sellingPrice: \"\", warehouseId: \"\" }],\n        customer: {},\n        deliveryDate: \"\",\n        bookingDate: \"\",\n        isGst: false,\n        isFullyPaid:false,\n        staff:{},\n      };\n\n  let isEditing = props.location.state ? true : false;\n\n  let history = useHistory();\n\n  let [customer, setCustomer] = useState({});\n\n  const [showCustomerFields, setshowCustomerFields] = useState(false);\n\n  const [warehouseDict, setWarehouseDict] = useState([]);\n  const [items, setItems] = useState([])\n  const [staff, setStaff] = useState([])\n\n  useEffect(() => { getItem()\n    getStaff() }, [])\n\n  function addItem(e, values, setValues) {\n    const orderItems = [...values.orderItems];\n    orderItems.push({ name: \"\", quantity: \"\", sellingPrice: \"\", warehouseId: \"\" });\n\n    setValues({ ...values, orderItems });\n  }\n\n  const getItem = () => {\n    getCall('items').then((data) => {\n      setItems(data)\n    } ).catch((reason) => {\n      console.log(\"FAILURE!!\");\n    })\n  }\n\n  const getStaff = () => {\n    getCall('staffs').then((data) => {\n      setStaff(data)\n    } ).catch((reason) => {\n      console.log(\"FAILURE!!\");\n    })\n  }\n\n  function onCustomerNumberEntry(event) {   \n\n    getCall(\"customers\", { params: {phone:event.target.value}})\n      .then((data) => {\n        console.log(\"SUCCESS!!\");\n        setCustomer(data[0]);\n        initialValues = {\n          customerNumber: event.target.value,\n          orderItems: initialValues.orderItems,\n          customer: customer,\n        };\n        setshowCustomerFields(true);\n      })\n      .catch((reason) => {\n        console.log(\"FAILURE!!\");\n        alert(reason);\n      });\n  }\n  function onSubmit(fields) {\n    // display form field values on success\n\n    let amount = fields.orderItems.reduce((accumulator, currentValue) => { return accumulator + (currentValue.sellingPrice * currentValue.quantity) }, 0);\n\n    if (!fields['isFullyPaid']) {\n      amount = fields['partialPayment']\n    }\n\n    if (fields['isGst'] ) {\n      fields['isGst'] = 1\n    } else {\n      fields['isGst'] = 0\n    }\n    fields['orderId'] = 0\n    fields['salesTransaction'] = [{\n      \"transactionId\": 0,\n      \"orderId\": 0,\n      \"amountPaid\": amount,\n    }]\n    fields['staffId'] = fields['staff']\n    fields['customerId'] = customer.customerId\n    delete fields['staff']\n    delete fields['partialPayment']\n    delete fields['customer']\n    console.log(JSON.stringify(fields, null, 4))\n    postCall(\"orders\", JSON.stringify(fields, null, 4))\n      .then((data) => {\n        console.log(\"successfully posted invoice\");\n      })\n      .catch((reason) => {\n        console.log(\"failed in posting invoice\");\n      });\n    history.push({ pathname: \"/pdf\", state: fields });\n  }\n\n  function getWarehouseForItem(name, index) {\n    getCall(\"warehouse\", {'itemName':name}).then((data) => {\n      //setWarehouseDict(warehouseDict.push({'value':data[0].id , 'label':data[0].name}))\n      \n      setWarehouseDict(oldArray => [...oldArray, data.map( value => { return {'value':value.id ,'label':value.name}})])\n    }).catch((reason) => {\n      setWarehouseDict(oldArray => [...oldArray,  [{'value':'3' ,'label':'test_store_name'}]])\n      console.log(\"failed to get warehouse for index : \"+  index);\n    })\n  }\n\n  function onItemDropDownChange(index, values, setValues, selectedItem) {\n    const orderItems = [...values.orderItems];\n    orderItems[index].name = selectedItem;\n\n    setValues({ ...values, orderItems });\n\n    getWarehouseForItem(selectedItem.itemName, index)\n  }\n\n  function onStaffDropDownChange(values, setValues, selectedStaff) {\n    var staff = values.staff;\n    staff = selectedStaff;\n\n    setValues({ ...values, staff });\n  }\n\n  function removeItem(index, values, setValues) {\n    const orderItems = [...values.orderItems];\n    orderItems.splice(index, 1);\n\n    setValues({ ...values, orderItems });\n  }\n\n  function isFullyPaidClicked(e , setValues , values) {\n    let isFullyPaid = values.isFullyPaid;\n    isFullyPaid = e.target.checked\n    setValues({ ...values, isFullyPaid });\n  }\n\n  return (\n    <PageTitleContainer title='Create Invoice'>\n    <Card className=\"create-invoice-container\">\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        enableReinitialize={false}\n      >\n        {({ errors, values, touched, setValues }) => (\n          <Form>\n            {initialValues.orderInvoice != \"\" && <div className=\"form-group\">\n              <label>Invoice Number</label>\n              <Field\n                name=\"orderInvoice\"\n                type=\"text\"\n                style={fullWidthTextFieldStyle}\n                onBlur={() => {}}\n              ></Field>\n              <ErrorMessage\n                name=\"orderInvoice\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>}\n            <div className=\"form-group\">\n              <label>Customer Number</label>\n              <Field\n                name=\"customerNumber\"\n                type=\"text\"\n                style={fullWidthTextFieldStyle}\n                onBlur={onCustomerNumberEntry}\n              ></Field>\n              <ErrorMessage\n                name=\"customerNumber\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n\n            <div>{showCustomerFields && <AddCustomer customer={customer} isInvoice={true}/>}</div>\n            <div>\n              <div>\n                <div>\n                  <label>Invoice Date</label>\n                  <Field\n                    name=\"bookingDate\"\n                    type=\"date\"\n                    style={{\n                      margin: \"1rem 0 1rem 2rem\",\n                      width: \"300px\",\n                      height: \"40px\",\n                    }}\n                  ></Field>\n                  <br />\n                  <label\n                    style={{\n                      margin: \"1rem 0 1rem 0rem\",\n                      width: \"100px\",\n                      height: \"40px\",\n                    }}\n                  >\n                    Delivery Date\n                  </label>\n                  <Field\n                    name=\"deliveryDate\"\n                    type=\"date\"\n                    style={{\n                      margin: \"0rem 0 1rem 1.4rem\",\n                      width: \"300px\",\n                      height: \"40px\",\n                    }}\n                  ></Field>\n                </div>\n              </div>\n            </div>\n            <div>\n              <label\n                style={{\n                  display: \"flex\",\n                  margin: \"1rem 0 1rem 0rem\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"flex-start\",\n                  width: \"30%\",\n                  height: \"40px\",\n                }}\n              >\n                <Field\n                  type=\"checkbox\"\n                  name=\"checked\"\n                  value=\"isGst\"\n                  style={{ width: \"20px\", height: \"20px\", marginRight: \"5px\" }}\n                />\n                Is GST Applied\n              </label>\n            </div>\n            <FieldArray name=\"orderItems\">\n              {() =>\n                values.orderItems.map((item, i) => {\n                  const ticketErrors =\n                    (errors.items?.length && errors.items[i]) || {};\n                  const ticketTouched =\n                    (touched.items?.length && touched.items[i]) || {};\n                  return (\n                    <div key={item.itemId}>\n                      <div className=\"list-group-item\">\n                        <h5\n                          className=\"card-title\"\n                          style={{\n                            margin: \"1rem 0 1rem 0rem\",\n                            width: \"100%\",\n                            height: \"40px\",\n                          }}\n                        >\n                          Item {i + 1}\n                        </h5>\n                        <div style={{\n                            width: \"100%\",\n                            display:'flex',\n                            \n                          }}>\n                        <div\n                          className=\"form-group col-6\"\n                          style={{\n                            margin: \"1rem 0 1rem 0rem\",\n                            width: \"90%\",\n                            display:'flex',\n                            flexDirection:'column',\n                            \n                          }}\n                        >\n                          <div style={{ width: \"100%\",display:'flex'}}>\n                            <div style={{ width: \"40%\", float: \"left\" }}>\n                            <Dropdown\n                              name={`orderItems.${i}.name`}\n                              placeholder=\"Select Item\"\n                              fluid\n                              search\n                              selection\n                              options={ConvertItemsDataToDropdownData(items)}\n                              onChange={(event, data) => {\n                                onItemDropDownChange(\n                                  i,\n                                  values,\n                                  setValues,\n                                  data.value\n                                );\n                              }}\n                              defaultValue={item.itemName}\n                            />\n                            <ErrorMessage\n                              name={`orderItems.${i}.name`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div>\n                            <div style={{ width: \"30%\" }}>\n                            <label style={{ margin: \"0rem 1rem 0rem 1rem\", width:'30%' }}>\n                              Quantity\n                            </label>\n                            <Field\n                              name={`orderItems.${i}.quantity`}\n                              type=\"text\"\n                              style={{ height: \"40px\", width:'70%'  }}\n                            />\n                            <ErrorMessage\n                              name={`orderItems.${i}.quantity`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div>\n                            <div style={{width:'30%'}}>\n                            <label style={{width:'30%', marginRight:'10px'}}>\n                              Selling Price\n                            </label>\n                            <Field\n                              name={`orderItems.${i}.sellingPrice`}\n                              type=\"number\"\n                              style={{ height: \"40px\", width:'70%' }}\n                            />\n                            <ErrorMessage\n                              name={`orderItems.${i}.sellingPrice`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div>\n                          </div>\n                          <div style={{display:'flex', marginTop:'20px'}}>\n                            {/* <div style={{width:'45%'}}>\n                            <label style={{width:'30%', marginRight:'10px'}}>\n                              Selling Price\n                            </label>\n                            <Field\n                              name={`items.${i}.sellingPrice`}\n                              type=\"number\"\n                              style={{ height: \"40px\", width:'70%' }}\n                            />\n                            <ErrorMessage\n                              name={`items.${i}.sellingPrice`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div> */}\n                            {/* <div  style={{width:'55%', display:'flex', alignItems:'center'}}>\n                              <label  style={{width:'30%'}}>Warehouse:</label>\n                              <RCreatable\n                                name={`items.${i}.warehouseId`}\n                                onChange={(event, data) => {\n                                  onWarehouseDropDownChange(\n                                    i,\n                                    values,\n                                    setValues,\n                                    data.value\n                                  );\n                                }}\n                                onBlur={() => {}}\n                                options={warehouseDict[i]}\n                              />\n                            </div> */}\n                          </div>\n                        </div>\n                        <div style={{width:'10%', display:'flex'}}>\n                        <button\n                              className=\"removeLink\"\n                              type=\"button\"\n                              onClick={(e) => removeItem(i, values, setValues)}\n                              style={{ margin: \"0rem 0rem 0rem 0rem\", textAlign:'center' }}\n                            >\n                              remove\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })\n              }\n            </FieldArray>\n\n            <StyledDiv\n              style={{\n                width: \"200px\",\n                justifyContent: \"left\",\n                float: \"right\",\n              }}\n            >\n              <button\n                className=\"link\"\n                type=\"button\"\n                onClick={(e) => addItem(e, values, setValues)}\n              >\n                <span className=\"icon icon-add bg-green ml-10\"></span>\n                Add Line Item\n              </button>\n            </StyledDiv>\n\n            <div\n              style={{\n                margin: \"3rem 0 1rem 0rem\",\n                width: \"100%\",\n              }}\n            >\n              <label\n                style={{\n                  margin: \"2rem 0 0rem 0rem\",\n                  width: \"100%\",\n                  height: \"40px\",\n                }}\n              >\n                Remarks\n              </label>\n              <Field\n                name=\"remarks\"\n                type=\"textarea\"\n                style={{\n                  margin: \"0rem 0 1rem 0rem\",\n                  width: \"100%\",\n                  height: \"100px\",\n                }}\n              />\n            </div>\n            <div>\n            <Dropdown\n                              name='staff'\n                              placeholder=\"Select Staff\"\n                              fluid\n                              search\n                              selection\n                              options={ConvertStaffDataToDropdownData(staff)}\n                              onChange={(event, data) => {\n                                onStaffDropDownChange(\n                                  values,\n                                  setValues,\n                                  data.value\n                                );\n                              }}\n                            />\n            </div>\n            <div >\n              <label>Payments</label>\n              <div style={{\n                  display: \"flex\",\n                  margin: \"1rem 0 1rem 0rem\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-start\",\n                  width: \"100%\",\n                }}>\n              <label\n                style={{\n                  display: \"flex\",\n                  margin: \"1rem 0 1rem 0rem\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-start\",\n                  width: \"30%\",\n                  height: \"40px\",\n                }}\n              >\n                <Field\n                  type=\"checkbox\"\n                  name=\"checked\"\n                  value=\"isFullyPaid\"\n                  style={{ width: \"20px\", height: \"20px\", marginRight: \"5px\" }}\n                  onBlur={(e) => isFullyPaidClicked(e , setValues , values)}\n                />\n                Fully Paid\n              </label>\n              {!values.isFullyPaid && <><label>Partial Payment</label>\n              <Field\n                  name=\"partialPayment\"\n                  type=\"number\"\n                  style={{ height: \"40px\", width:'30%', marginLeft:'20px'  }}\n                  \n              /></>}\n              \n              </div>\n            </div>\n            <StyledDiv\n              style={{\n                justifyContent: \"center\",\n                height: \"40px\",\n              }}\n            >\n              <CtaButton type=\"submit\" style={{ width: \"100px\", margin: '0px' }}>\n                {isEditing ? \"Edit Invoice\" : \"Create Invoice\"}\n              </CtaButton>\n              <button\n                style={{ marginLeft: \"50px\", height: \"40px\", width: \"80px\" }}\n                type=\"reset\"\n              >\n                Reset\n              </button>\n            </StyledDiv>\n          </Form>\n        )}\n      </Formik>\n    </Card>\n    </PageTitleContainer>\n  );\n}\n\nexport default CreateInvoice;\n","/Users/rahuljain/Downloads/royalInventory/src/components/SidebarData.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/RCreatable.js",[],["252","253"],"/Users/rahuljain/Downloads/royalInventory/src/config/Config.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/ListItem.js",[],["254","255"],"/Users/rahuljain/Downloads/royalInventory/src/App.js",["256","257"],"import './App.css';\nimport Sidebar from './components/Sidebar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport AddItem from './pages/AddItem/AddItem';\nimport { Reports, ReportsOne, ReportsTwo, ReportsThree } from './pages/Reports';\nimport Team from './pages/Team';\nimport AddCustomer from './pages/AddCustomer';\nimport CreateInvoice from './pages/CreateInvoice';\nimport PdfInvoice from './pages/PdfInvoice';\nimport ItemView from './pages/ItemView';\nimport 'semantic-ui-css/semantic.min.css'\nimport InvoiceList from './pages/InvoicesList'\nimport PurchaseOrder from './pages/PurchaseOrder';\nimport AddStaff from './pages/AddStaff/AddStaff';\nimport CustomerList from './pages/CustomerList/CustomerList';\nimport PurchaseList from './pages/PurchaseList/PurchaseList';\nimport AddVendor from './pages/AddVendor/AddVendor';\nimport VendorList from './pages/VendorList/VendorList';\nimport AddStore from './pages/AddStore/AddStore';\nimport StoreList from './pages/StoreList/StoreList';\nimport BrandList from './pages/BrandList/BrandList';\nimport CategoryList from './pages/CategoryList/CategoryList';\n\nfunction App() {\n  return (\n    <Router>\n      <Sidebar />\n      <Switch>\n        <Route path='/addItem' exact component={AddItem} />\n        <Route path='/reports' exact component={Reports} />\n        <Route path='/addCustomer' exact component={AddCustomer} />\n        <Route path='/reports/reports2' exact component={ReportsTwo} />\n        <Route path='/createInvoice' exact component={CreateInvoice} />\n        <Route path='/team' exact component={Team} />\n        <Route path='/pdf' exact component={PdfInvoice} />\n        <Route path='/itemView' exact component={ItemView} />\n        <Route path='/invoiceList' exact component={InvoiceList} />\n        <Route path='/createPurchase' exact component={PurchaseOrder} /> \n        <Route path='/addStaff' exact component={AddStaff} />  \n        <Route path='/customerList' exact component={CustomerList} />  \n        <Route path='/purchaseList' exact component={PurchaseList} />\n        <Route path='/addVendor' exact component={AddVendor} />\n        <Route path='/vendorList' exact component={VendorList} />\n        <Route path='/addStore' exact component={AddStore} />\n        <Route path='/storeList' exact component={StoreList} />\n        <Route path='/brandList' exact component={BrandList} />\n        <Route path='/categoryList' exact component={CategoryList} />     \n        \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n",["258","259"],"/Users/rahuljain/Downloads/royalInventory/src/pages/Reports.js",[],["260","261"],"/Users/rahuljain/Downloads/royalInventory/src/pages/ItemView.js",["262"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Item } from \"semantic-ui-react\";\nimport Card from \"../components/Card/Card\";\nimport ListItem from \"../components/ListItem\";\nimport \"../components/ListItem.css\";\nimport \"./ItemView.css\";\nimport { useHistory } from \"react-router-dom\";\nimport PageTitleContainer from \"../components/PageTitleContainer/PageTitleContainer\";\nimport { config } from \"../config/Config\";\n\nconst ItemView = () => {\n  const [items, setItems] = useState([]);\n\n  const [filteredItem, setFilteredItem] = useState([]);\n\n  let history = useHistory();\n\n  useEffect(() => {\n    \n    axios\n      .get(config.baseUrl + 'items')\n      .then(function (responseArr) {\n        console.log(\"SUCCESS!!\");\n        setItems(responseArr.data);\n        setFilteredItem(responseArr.data)\n      })\n      .catch(function (reason) {\n        console.log(\"FAILURE!!\");\n        alert(reason);\n      });\n  }, []);\n\n  const filterItem = (event) => {\n     setFilteredItem(items.filter(item => {return item.itemName.toLowerCase().indexOf(event.target.value.toLowerCase()) !== -1})) \n  }\n\n  const onItemClick = (index) => {\n    history.push({ pathname: \"/addItem\", state: filteredItem[index] });\n  }\n\n  return (\n    <PageTitleContainer title='Item List'>\n    <div className='background-div'></div>\n    <div className='search-div'><input \n            id=\"itemName\"\n            name=\"itemName\"\n            type=\"text\"\n            placeholder='   Search'\n            onChange={filterItem}\n            onBlur={() => {}} /></div>\n    <Card className=\"item-view-container\">\n      {filteredItem.map((item, index) => (\n        <>\n          <ListItem item={item} index={index} onClick={onItemClick}/>\n        </>\n      ))}\n    </Card>\n    </PageTitleContainer>\n  );\n};\n\nexport default ItemView;\n","/Users/rahuljain/Downloads/royalInventory/src/pages/AddItem/AddItem.js",["263","264","265","266","267","268","269","270","271","272","273"],"/Users/rahuljain/Downloads/royalInventory/src/components/Sidebar.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/FileUpload.js",[],["274","275"],"/Users/rahuljain/Downloads/royalInventory/src/components/SubMenu.js",[],"/Users/rahuljain/Downloads/royalInventory/src/helper/ApiHelper.js",["276"],"import axios from 'axios'\nimport {config} from '../config/Config'\n\nexport const getCall = (path, headers) => {\n\n    return new Promise((resolve, reject) => {\n        axios.get(config.baseUrl + path, headers\n            ).then(function (responseArr) {\n              console.log('SUCCESS!!');\n              resolve(responseArr.data.data)\n            })\n            .catch(function (reason) {\n              console.log('FAILURE!!');\n              reject(reason)\n            });\n     });\n    \n}\n\nexport const postCall = (path, data) => {\n\n    return new Promise((resolve, reject) => {\n        axios.post(config.baseUrl + path, data, {\n          headers:{'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'mode':'cors'}\n        }\n            ).then(function (responseArr) {\n              console.log('SUCCESS!!');\n              resolve(responseArr.data.data)\n            })\n            .catch(function (reason) {\n              console.log('FAILURE!!');\n              reject(reason)\n            });\n        });\n    \n}\n\nexport const putCall = (path, data) => {\n\n  return new Promise((resolve, reject) => {\n      axios.put(config.baseUrl + path, data\n          ).then(function (responseArr) {\n            console.log('SUCCESS!!');\n            resolve(responseArr.data.data)\n          })\n          .catch(function (reason) {\n            console.log('FAILURE!!');\n            reject(reason)\n          });\n      });\n  \n}\n\nconst header = () => {\n  return {'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json', 'mode':'cors'}\n}","/Users/rahuljain/Downloads/royalInventory/src/components/Card/Card.js",[],["277","278"],"/Users/rahuljain/Downloads/royalInventory/src/pages/Team.js",[],["279","280"],"/Users/rahuljain/Downloads/royalInventory/src/components/Invoice/InvoiceItem.js",["281","282"],"import { Image, Item, Divider } from \"semantic-ui-react\";\nimport './InvoiceItem.css'\n\nconst InvoiceItem = (props) => {\n  return (\n    <div className=\"invoice-item-container\">\n      <Item onClick={props.handleClick}>\n        <Item.Content>\n          <Item.Header>{\"Invoice No: #\" + props.invoice.invoiceId}</Item.Header>\n          <Item.Meta>\n            <span className=\"price\" style={{ fontWeight: \"bold\" }}>\n              {\"Name: \" + props.invoice.customerName + \"    \"}\n            </span>\n            <span\n              className=\"price\"\n              style={{ fontWeight: \"bold\", marginLeft: \"50px\" }}\n            >\n              {\"Amount: \" + props.invoice.amount + \"    \"}\n            </span>\n            <span\n              className=\"price\"\n              style={{ fontWeight: \"bold\", marginLeft: \"50px\" }}\n            >\n              {\"Invoice Date: \" + props.invoice.bookingDate + \"    \"}\n            </span>\n            <span\n              className=\"price\"\n              style={{ fontWeight: \"bold\", marginLeft: \"50px\" }}\n            >\n              {\"Delivery Date: \" + props.invoice.deliveryDate + \"    \"}\n            </span>\n          </Item.Meta>\n        </Item.Content>\n      </Item>\n    </div>\n  );\n};\n\nexport default InvoiceItem;\n",["283","284"],"/Users/rahuljain/Downloads/royalInventory/src/components/Table/Table.js",[],["285","286"],"/Users/rahuljain/Downloads/royalInventory/src/components/Table/TableRow.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/PdfInvoice.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/CtaButton/CtaButton.js",[],["287","288"],"/Users/rahuljain/Downloads/royalInventory/src/pages/AddStaff/AddStaff.js",[],["289","290"],"/Users/rahuljain/Downloads/royalInventory/src/components/DateInput/DateInput.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/FilterButton/FilterButton.js",[],["291","292"],"/Users/rahuljain/Downloads/royalInventory/src/components/PageTitleContainer/PageTitleContainer.js",[],["293","294"],"/Users/rahuljain/Downloads/royalInventory/src/pages/CustomerList/CustomerList.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/PurchaseList/PurchaseList.js",["295","296","297"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"../../components/Card/Card\";\nimport FilterButton from \"../../components/FilterButton/FilterButton\";\nimport Table from \"../../components/Table/Table\";\nimport \"./PurchaseList.css\";\nimport DateInput from '../../components/DateInput/DateInput'\nimport LinkButton from \"../../components/Button/LinkButton/LinkButton\";\nimport PageTitleContainer from \"../../components/PageTitleContainer/PageTitleContainer\";\nimport { getCall } from \"../../helper/ApiHelper\";\n\nvar heading = ['Purchase Id', 'Business Name', 'Amount', 'Purchase Date'];\n\nconst PurchaseList = () => {\n  const [purchase, setPurchase] = useState([]);\n  const [filteredPurchase, setFilteredPurchase] = useState([]);\n  const [isTodaySelected, setIsTodaySelected] = useState(false)\n  const [isYesterdaySelected, setIsYesterdaySelected] = useState(false)\n\n  let history = useHistory();\n\n  var filterFromDate\n  var filterToDate\n\n  useEffect(() => {\n    getCall('purchases').then(function (responseArr) {\n        console.log(\"SUCCESS!!\");\n        setPurchase(responseArr);\n        setFilteredPurchase(responseArr)\n      })\n      .catch(function (reason) {\n        console.log(\"FAILURE!!\");\n        alert(reason);\n      });\n  }, []);\n\n  const onEditClick = (index) => {\n    history.push({ pathname: \"/createPurchase\", state: purchase[index] });\n    console.log('edit clicked for index: ' + index)\n  }\n  const onCancelClick = (index) => {\n\n  }\n\n  function checkMatchesInInvoiceList(item, value) {\n    var ifTrue = false;\n    Object.keys(item).forEach((key) => {\n        if (item[key] != null) {\n            if (               \n              item[key].toString().toLowerCase().indexOf(value.toLowerCase()) > -1\n            ) {\n              ifTrue = true;\n            }\n          }\n    });\n\n    return ifTrue;\n  }\n\n  const handleSearchChange = (event) => {\n    var filteredList = purchase.filter(function (item) {\n      return checkMatchesInInvoiceList(item, event.target.value);\n    });\n    setFilteredPurchase(filteredList);\n  };\n\n  const convertDateToDisplayFormat = (date) => {\n    let givenDate = new Date(date)\n    return givenDate.toLocaleDateString(\"en-US\")\n  }\n\n  const purchaseData = filteredPurchase.map( (purchaseObject) => (\n    [purchaseObject.purchaseId, purchaseObject.vendor.vendorName, purchaseObject.amount, convertDateToDisplayFormat(purchaseObject.purchaseDate)]\n  ))\n\n  const compareDate = (firstDate, secondDate) => {\n    return firstDate.getDay() == secondDate.getDay() && firstDate.getMonth() == secondDate.getMonth() && firstDate.getYear() == secondDate.getYear();\n  }\n\n  const checkBetweenDateRange = (to, from , checkingDate) => {\n    if((checkingDate <= to && checkingDate >= from)) {\n      return true\n    }\n  }\n    \n\n  const fromDateSelected = (event) => {\n    filterFromDate = event.target.value\n  }\n\n  const toDateSelected = (event) => {\n    \n    filterToDate = event.target.value\n    console.log('to date selected')\n    if (filterFromDate != null) {\n      var filteredList = purchaseData.filter(function (item) {\n        return checkBetweenDateRange(new Date(filterToDate),new Date(filterFromDate), new Date(item.bookingDate));\n      });\n      setFilteredPurchase(filteredList);\n    }\n  }\n\n  const onTodayClick = () => {\n    var filteredList = purchase.filter(function (item) {\n      let todayDate = new Date()\n      let bookingDate = new Date(item.bookingDate)\n      return compareDate(todayDate, bookingDate);\n    });\n    setIsTodaySelected(true)\n    setIsYesterdaySelected(false)\n    setFilteredPurchase(filteredList);\n  }\n\n  const onYesterdayClick = () => {\n    var filteredList = purchase.filter(function (item) {\n      let todayDate = new Date()\n      todayDate.setDate(todayDate.getDate() - 1)\n      let bookingDate = new Date(item.bookingDate)\n      return compareDate(todayDate, bookingDate);\n    });\n    setIsTodaySelected(false)\n    setIsYesterdaySelected(true)\n    setFilteredPurchase(filteredList);\n  }\n\n  const onClearFilterClick = () => {\n    setIsTodaySelected(false)\n    setIsYesterdaySelected(false)\n    setPurchase(purchase)\n  }\n\n  return (\n    <PageTitleContainer title=\"Purchase List\">\n\n      <div className='search-container'>\n        <input\n          id=\"invoiceSearchKey\"\n          name=\"invoiceSearchKey\"\n          type=\"text\"\n          placeholder=\"   Search\"\n          onChange={handleSearchChange}\n          style={{\n            margin: \"0rem 0rem 1rem 80px\",\n            width: \"60%\",\n            height: \"40px\",\n            border: \"1px solid\",\n            borderRadius: \"20px\",\n          }}\n        />\n      </div>\n      <div style={{\n        display:'flex',\n            margin: \"0rem 0rem 0rem 0rem\",\n            justifyContent:\"center\",\n          }}>\n            <FilterButton isSelected={isTodaySelected} onClick={onTodayClick}>Today</FilterButton>\n            <FilterButton isSelected={isYesterdaySelected} onClick={onYesterdayClick}>Yesterday</FilterButton>\n            <DateInput placeholder={'From:'} onChange={fromDateSelected}></DateInput>\n            <DateInput placeholder={'To:'} onChange={toDateSelected}></DateInput>\n            <LinkButton type=\"button\"\n                              onClick={onClearFilterClick}\n                            >\n                              Clear filter\n                            </LinkButton>\n        </div>\n      <Card className=\"purchase-list-container\">\n        <Table heading={heading} body={purchaseData} onEditClick={onEditClick} onCancelClick={onCancelClick}/>\n      </Card>\n    </PageTitleContainer>\n  );\n};\n\nexport default PurchaseList;\n","/Users/rahuljain/Downloads/royalInventory/src/pages/AddVendor/AddVendor.js",[],["298","299"],"/Users/rahuljain/Downloads/royalInventory/src/pages/VendorList/VendorList.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/AddStore/AddStore.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/StoreList/StoreList.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/BrandList/BrandList.js",["300"],"/Users/rahuljain/Downloads/royalInventory/src/pages/CategoryList/CategoryList.js",["301"],"/Users/rahuljain/Downloads/royalInventory/src/components/Alert/AlertPopup.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/Button/LinkButton/LinkButton.js",[],{"ruleId":"302","severity":1,"message":"303","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":19},{"ruleId":"302","severity":1,"message":"306","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":13},{"ruleId":"302","severity":1,"message":"307","line":8,"column":8,"nodeType":"304","messageId":"305","endLine":8,"endColumn":24},{"ruleId":"302","severity":1,"message":"308","line":11,"column":8,"nodeType":"304","messageId":"305","endLine":11,"endColumn":20},{"ruleId":"302","severity":1,"message":"309","line":18,"column":10,"nodeType":"304","messageId":"305","endLine":18,"endColumn":16},{"ruleId":"302","severity":1,"message":"310","line":20,"column":7,"nodeType":"304","messageId":"305","endLine":20,"endColumn":16},{"ruleId":"302","severity":1,"message":"311","line":28,"column":7,"nodeType":"304","messageId":"305","endLine":28,"endColumn":16},{"ruleId":"312","severity":1,"message":"313","line":43,"column":23,"nodeType":"314","messageId":"315","endLine":43,"endColumn":25},{"ruleId":"312","severity":1,"message":"313","line":55,"column":33,"nodeType":"314","messageId":"315","endLine":55,"endColumn":35},{"ruleId":"312","severity":1,"message":"313","line":66,"column":27,"nodeType":"314","messageId":"315","endLine":66,"endColumn":29},{"ruleId":"302","severity":1,"message":"316","line":99,"column":7,"nodeType":"304","messageId":"305","endLine":99,"endColumn":14},{"ruleId":"317","severity":1,"message":"318","line":281,"column":53,"nodeType":"319","messageId":"320","endLine":281,"endColumn":55},{"ruleId":"302","severity":1,"message":"321","line":293,"column":27,"nodeType":"304","messageId":"305","endLine":293,"endColumn":39},{"ruleId":"302","severity":1,"message":"322","line":295,"column":27,"nodeType":"304","messageId":"305","endLine":295,"endColumn":40},{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","replacedBy":"326"},{"ruleId":"323","replacedBy":"327"},{"ruleId":"325","replacedBy":"328"},{"ruleId":"302","severity":1,"message":"329","line":16,"column":10,"nodeType":"304","messageId":"305","endLine":16,"endColumn":26},{"ruleId":"330","severity":1,"message":"331","line":38,"column":6,"nodeType":"332","endLine":38,"endColumn":8,"suggestions":"333"},{"ruleId":"317","severity":1,"message":"318","line":78,"column":31,"nodeType":"319","messageId":"320","endLine":78,"endColumn":33},{"ruleId":"317","severity":1,"message":"318","line":78,"column":78,"nodeType":"319","messageId":"320","endLine":78,"endColumn":80},{"ruleId":"317","severity":1,"message":"318","line":78,"column":126,"nodeType":"319","messageId":"320","endLine":78,"endColumn":128},{"ruleId":"323","replacedBy":"334"},{"ruleId":"325","replacedBy":"335"},{"ruleId":"302","severity":1,"message":"336","line":1,"column":17,"nodeType":"304","messageId":"305","endLine":1,"endColumn":26},{"ruleId":"302","severity":1,"message":"337","line":2,"column":8,"nodeType":"304","messageId":"305","endLine":2,"endColumn":14},{"ruleId":"302","severity":1,"message":"338","line":20,"column":10,"nodeType":"304","messageId":"305","endLine":20,"endColumn":21},{"ruleId":"302","severity":1,"message":"339","line":22,"column":12,"nodeType":"304","messageId":"305","endLine":22,"endColumn":21},{"ruleId":"302","severity":1,"message":"340","line":4,"column":8,"nodeType":"304","messageId":"305","endLine":4,"endColumn":18},{"ruleId":"302","severity":1,"message":"306","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":13},{"ruleId":"302","severity":1,"message":"341","line":12,"column":8,"nodeType":"304","messageId":"305","endLine":12,"endColumn":12},{"ruleId":"302","severity":1,"message":"342","line":40,"column":7,"nodeType":"304","messageId":"305","endLine":40,"endColumn":18},{"ruleId":"317","severity":1,"message":"318","line":65,"column":24,"nodeType":"319","messageId":"320","endLine":65,"endColumn":26},{"ruleId":"330","severity":1,"message":"343","line":73,"column":6,"nodeType":"332","endLine":73,"endColumn":8,"suggestions":"344"},{"ruleId":"302","severity":1,"message":"345","line":132,"column":5,"nodeType":"304","messageId":"305","endLine":132,"endColumn":17},{"ruleId":"323","replacedBy":"346"},{"ruleId":"325","replacedBy":"347"},{"ruleId":"302","severity":1,"message":"348","line":3,"column":10,"nodeType":"304","messageId":"305","endLine":3,"endColumn":15},{"ruleId":"302","severity":1,"message":"349","line":13,"column":12,"nodeType":"304","messageId":"305","endLine":13,"endColumn":25},{"ruleId":"302","severity":1,"message":"350","line":29,"column":12,"nodeType":"304","messageId":"305","endLine":29,"endColumn":29},{"ruleId":"323","replacedBy":"351"},{"ruleId":"325","replacedBy":"352"},{"ruleId":"302","severity":1,"message":"306","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":13},{"ruleId":"302","severity":1,"message":"307","line":8,"column":8,"nodeType":"304","messageId":"305","endLine":8,"endColumn":24},{"ruleId":"302","severity":1,"message":"353","line":15,"column":8,"nodeType":"304","messageId":"305","endLine":15,"endColumn":18},{"ruleId":"312","severity":1,"message":"313","line":36,"column":23,"nodeType":"314","messageId":"315","endLine":36,"endColumn":25},{"ruleId":"312","severity":1,"message":"313","line":48,"column":24,"nodeType":"314","messageId":"315","endLine":48,"endColumn":26},{"ruleId":"302","severity":1,"message":"354","line":90,"column":10,"nodeType":"304","messageId":"305","endLine":90,"endColumn":23},{"ruleId":"317","severity":1,"message":"355","line":224,"column":41,"nodeType":"319","messageId":"320","endLine":224,"endColumn":43},{"ruleId":"302","severity":1,"message":"321","line":312,"column":25,"nodeType":"304","messageId":"305","endLine":312,"endColumn":37},{"ruleId":"302","severity":1,"message":"322","line":314,"column":25,"nodeType":"304","messageId":"305","endLine":314,"endColumn":38},{"ruleId":"323","replacedBy":"356"},{"ruleId":"325","replacedBy":"357"},{"ruleId":"323","replacedBy":"358"},{"ruleId":"325","replacedBy":"359"},{"ruleId":"302","severity":1,"message":"360","line":5,"column":19,"nodeType":"304","messageId":"305","endLine":5,"endColumn":29},{"ruleId":"302","severity":1,"message":"361","line":5,"column":43,"nodeType":"304","messageId":"305","endLine":5,"endColumn":55},{"ruleId":"323","replacedBy":"362"},{"ruleId":"325","replacedBy":"363"},{"ruleId":"323","replacedBy":"364"},{"ruleId":"325","replacedBy":"365"},{"ruleId":"302","severity":1,"message":"366","line":3,"column":10,"nodeType":"304","messageId":"305","endLine":3,"endColumn":14},{"ruleId":"302","severity":1,"message":"367","line":46,"column":7,"nodeType":"304","messageId":"305","endLine":46,"endColumn":14},{"ruleId":"317","severity":1,"message":"318","line":69,"column":40,"nodeType":"319","messageId":"320","endLine":69,"endColumn":42},{"ruleId":"317","severity":1,"message":"318","line":102,"column":72,"nodeType":"319","messageId":"320","endLine":102,"endColumn":74},{"ruleId":"302","severity":1,"message":"368","line":128,"column":10,"nodeType":"304","messageId":"305","endLine":128,"endColumn":14},{"ruleId":"330","severity":1,"message":"369","line":139,"column":6,"nodeType":"332","endLine":139,"endColumn":8,"suggestions":"370"},{"ruleId":"312","severity":1,"message":"313","line":176,"column":28,"nodeType":"314","messageId":"315","endLine":176,"endColumn":30},{"ruleId":"312","severity":1,"message":"313","line":185,"column":28,"nodeType":"314","messageId":"315","endLine":185,"endColumn":30},{"ruleId":"312","severity":1,"message":"313","line":194,"column":28,"nodeType":"314","messageId":"315","endLine":194,"endColumn":30},{"ruleId":"317","severity":1,"message":"355","line":263,"column":23,"nodeType":"319","messageId":"320","endLine":263,"endColumn":25},{"ruleId":"371","severity":1,"message":"372","line":263,"column":31,"nodeType":"373","endLine":263,"endColumn":80},{"ruleId":"302","severity":1,"message":"374","line":359,"column":7,"nodeType":"304","messageId":"305","endLine":359,"endColumn":15},{"ruleId":"323","replacedBy":"375"},{"ruleId":"325","replacedBy":"376"},{"ruleId":"302","severity":1,"message":"377","line":54,"column":7,"nodeType":"304","messageId":"305","endLine":54,"endColumn":13},{"ruleId":"323","replacedBy":"378"},{"ruleId":"325","replacedBy":"379"},{"ruleId":"323","replacedBy":"380"},{"ruleId":"325","replacedBy":"381"},{"ruleId":"302","severity":1,"message":"348","line":1,"column":10,"nodeType":"304","messageId":"305","endLine":1,"endColumn":15},{"ruleId":"302","severity":1,"message":"382","line":1,"column":23,"nodeType":"304","messageId":"305","endLine":1,"endColumn":30},{"ruleId":"323","replacedBy":"383"},{"ruleId":"325","replacedBy":"384"},{"ruleId":"323","replacedBy":"385"},{"ruleId":"325","replacedBy":"386"},{"ruleId":"323","replacedBy":"387"},{"ruleId":"325","replacedBy":"388"},{"ruleId":"323","replacedBy":"389"},{"ruleId":"325","replacedBy":"390"},{"ruleId":"323","replacedBy":"391"},{"ruleId":"325","replacedBy":"392"},{"ruleId":"323","replacedBy":"393"},{"ruleId":"325","replacedBy":"394"},{"ruleId":"317","severity":1,"message":"318","line":77,"column":31,"nodeType":"319","messageId":"320","endLine":77,"endColumn":33},{"ruleId":"317","severity":1,"message":"318","line":77,"column":78,"nodeType":"319","messageId":"320","endLine":77,"endColumn":80},{"ruleId":"317","severity":1,"message":"318","line":77,"column":126,"nodeType":"319","messageId":"320","endLine":77,"endColumn":128},{"ruleId":"323","replacedBy":"395"},{"ruleId":"325","replacedBy":"396"},{"ruleId":"302","severity":1,"message":"397","line":63,"column":11,"nodeType":"304","messageId":"305","endLine":63,"endColumn":22},{"ruleId":"302","severity":1,"message":"397","line":62,"column":11,"nodeType":"304","messageId":"305","endLine":62,"endColumn":22},"no-unused-vars","'AddCustomer' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'ItemListDropdown' is defined but never used.","'AddItemModal' is defined but never used.","'config' is defined but never used.","'StyledDiv' is assigned a value but never used.","'companies' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ticketErrors' is assigned a value but never used.","'ticketTouched' is assigned a value but never used.","no-native-reassign",["398"],"no-negated-in-lhs",["399"],["398"],["399"],"'filteredInvoices' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'invoices'. Either include it or remove the dependency array. You can also do a functional update 'setInvoices(i => ...)' if you only need 'invoices' in the 'setInvoices' call.","ArrayExpression",["400"],["398"],["399"],"'Component' is defined but never used.","'styled' is defined but never used.","'modalIsOpen' is assigned a value but never used.","'openModal' is defined but never used.","'FileUpload' is defined but never used.","'swal' is defined but never used.","'InputSelect' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.customer', 'props.isInvoice', and 'props.location'. Either include them or remove the dependency array.",["401"],"'customerForm' is assigned a value but never used.",["398"],["399"],"'Image' is defined but never used.","'handleOnClick' is defined but never used.","'isItemInSelection' is defined but never used.",["398"],["399"],"'RCreatable' is defined but never used.","'warehouseDict' is assigned a value but never used.","Expected '!==' and instead saw '!='.",["398"],["399"],["398"],["399"],"'ReportsOne' is defined but never used.","'ReportsThree' is defined but never used.",["398"],["399"],["398"],["399"],"'Item' is defined but never used.","'baseUrl' is assigned a value but never used.","'file' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllParentItems', 'getBrands', and 'getCategories'. Either include them or remove the dependency array.",["402"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'validate' is assigned a value but never used.",["398"],["399"],"'header' is assigned a value but never used.",["398"],["399"],["398"],["399"],"'Divider' is defined but never used.",["398"],["399"],["398"],["399"],["398"],["399"],["398"],["399"],["398"],["399"],["398"],["399"],["398"],["399"],"'onEditClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},"Update the dependencies array to be: [invoices]",{"range":"409","text":"410"},"Update the dependencies array to be: [props.customer, props.isInvoice, props.location]",{"range":"411","text":"412"},"Update the dependencies array to be: [getAllParentItems, getBrands, getCategories]",{"range":"413","text":"414"},[1314,1316],"[invoices]",[1872,1874],"[props.customer, props.isInvoice, props.location]",[3736,3738],"[getAllParentItems, getBrands, getCategories]"]