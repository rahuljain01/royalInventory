[{"/Users/rahuljain/Downloads/royalInventory/src/pages/PurchaseOrder.js":"1","/Users/rahuljain/Downloads/royalInventory/src/pages/AddItemModel.js":"2","/Users/rahuljain/Downloads/royalInventory/src/reportWebVitals.js":"3","/Users/rahuljain/Downloads/royalInventory/src/pages/InvoicesList.js":"4","/Users/rahuljain/Downloads/royalInventory/src/pages/Popup.js":"5","/Users/rahuljain/Downloads/royalInventory/src/index.js":"6","/Users/rahuljain/Downloads/royalInventory/src/pages/AddCustomer.js":"7","/Users/rahuljain/Downloads/royalInventory/src/components/ItemListDropdown.js":"8","/Users/rahuljain/Downloads/royalInventory/src/pages/CreateInvoice.js":"9","/Users/rahuljain/Downloads/royalInventory/src/components/SidebarData.js":"10","/Users/rahuljain/Downloads/royalInventory/src/components/RCreatable.js":"11","/Users/rahuljain/Downloads/royalInventory/src/config/Config.js":"12","/Users/rahuljain/Downloads/royalInventory/src/components/ListItem.js":"13","/Users/rahuljain/Downloads/royalInventory/src/App.js":"14","/Users/rahuljain/Downloads/royalInventory/src/pages/Reports.js":"15","/Users/rahuljain/Downloads/royalInventory/src/pages/ItemView.js":"16","/Users/rahuljain/Downloads/royalInventory/src/pages/AddItem/AddItem.js":"17","/Users/rahuljain/Downloads/royalInventory/src/components/Sidebar.js":"18","/Users/rahuljain/Downloads/royalInventory/src/components/FileUpload.js":"19","/Users/rahuljain/Downloads/royalInventory/src/components/SubMenu.js":"20","/Users/rahuljain/Downloads/royalInventory/src/helper/ApiHelper.js":"21","/Users/rahuljain/Downloads/royalInventory/src/components/Card/Card.js":"22","/Users/rahuljain/Downloads/royalInventory/src/pages/Team.js":"23","/Users/rahuljain/Downloads/royalInventory/src/components/Invoice/InvoiceItem.js":"24","/Users/rahuljain/Downloads/royalInventory/src/components/Table/Table.js":"25","/Users/rahuljain/Downloads/royalInventory/src/components/Table/TableRow.js":"26","/Users/rahuljain/Downloads/royalInventory/src/pages/PdfInvoice.js":"27","/Users/rahuljain/Downloads/royalInventory/src/components/CtaButton/CtaButton.js":"28","/Users/rahuljain/Downloads/royalInventory/src/pages/AddStaff/AddStaff.js":"29","/Users/rahuljain/Downloads/royalInventory/src/components/DateInput/DateInput.js":"30","/Users/rahuljain/Downloads/royalInventory/src/components/FilterButton/FilterButton.js":"31","/Users/rahuljain/Downloads/royalInventory/src/components/PageTitleContainer/PageTitleContainer.js":"32","/Users/rahuljain/Downloads/royalInventory/src/pages/CustomerList/CustomerList.js":"33","/Users/rahuljain/Downloads/royalInventory/src/pages/PurchaseList/PurchaseList.js":"34","/Users/rahuljain/Downloads/royalInventory/src/pages/AddVendor/AddVendor.js":"35","/Users/rahuljain/Downloads/royalInventory/src/pages/VendorList/VendorList.js":"36","/Users/rahuljain/Downloads/royalInventory/src/pages/AddStore/AddStore.js":"37","/Users/rahuljain/Downloads/royalInventory/src/pages/StoreList/StoreList.js":"38","/Users/rahuljain/Downloads/royalInventory/src/pages/BrandList/BrandList.js":"39","/Users/rahuljain/Downloads/royalInventory/src/pages/CategoryList/CategoryList.js":"40","/Users/rahuljain/Downloads/royalInventory/src/components/Alert/AlertPopup.js":"41","/Users/rahuljain/Downloads/royalInventory/src/components/Button/LinkButton/LinkButton.js":"42","/Users/rahuljain/Downloads/royalInventory/src/components/Dashboard/SalesSummary.js":"43","/Users/rahuljain/Downloads/royalInventory/src/components/Button/EditButton/EditButton.js":"44","/Users/rahuljain/Downloads/royalInventory/src/components/Button/DeleteButton/DeleteButton.js":"45","/Users/rahuljain/Downloads/royalInventory/src/pages/Login/Login.js":"46","/Users/rahuljain/Downloads/royalInventory/src/store/auth-api.js":"47","/Users/rahuljain/Downloads/royalInventory/src/store/auth-header.js":"48","/Users/rahuljain/Downloads/royalInventory/src/components/SubMenuButton.js":"49","/Users/rahuljain/Downloads/royalInventory/src/pages/Dashboard/Dashboard.js":"50"},{"size":17002,"mtime":1627925733534,"results":"51","hashOfConfig":"52"},{"size":651,"mtime":1623096856434,"results":"53","hashOfConfig":"52"},{"size":362,"mtime":1606676707000,"results":"54","hashOfConfig":"52"},{"size":5745,"mtime":1629970940482,"results":"55","hashOfConfig":"52"},{"size":1101,"mtime":1623096873573,"results":"56","hashOfConfig":"52"},{"size":523,"mtime":1629573828590,"results":"57","hashOfConfig":"52"},{"size":5586,"mtime":1629906798337,"results":"58","hashOfConfig":"52"},{"size":2431,"mtime":1620234327287,"results":"59","hashOfConfig":"52"},{"size":20312,"mtime":1630053396156,"results":"60","hashOfConfig":"52"},{"size":2870,"mtime":1629986764346,"results":"61","hashOfConfig":"52"},{"size":1100,"mtime":1627888961545,"results":"62","hashOfConfig":"52"},{"size":89,"mtime":1626536962743,"results":"63","hashOfConfig":"52"},{"size":1029,"mtime":1629908598302,"results":"64","hashOfConfig":"52"},{"size":3370,"mtime":1630315928377,"results":"65","hashOfConfig":"52"},{"size":525,"mtime":1606676707000,"results":"66","hashOfConfig":"52"},{"size":1714,"mtime":1629908579690,"results":"67","hashOfConfig":"52"},{"size":11443,"mtime":1630058366030,"results":"68","hashOfConfig":"52"},{"size":2466,"mtime":1630315673060,"results":"69","hashOfConfig":"52"},{"size":2004,"mtime":1619288986820,"results":"70","hashOfConfig":"52"},{"size":1591,"mtime":1606676707000,"results":"71","hashOfConfig":"52"},{"size":2096,"mtime":1630256730795,"results":"72","hashOfConfig":"52"},{"size":144,"mtime":1623686645503,"results":"73","hashOfConfig":"52"},{"size":148,"mtime":1606676707000,"results":"74","hashOfConfig":"52"},{"size":1250,"mtime":1624131940767,"results":"75","hashOfConfig":"52"},{"size":603,"mtime":1624360924100,"results":"76","hashOfConfig":"52"},{"size":779,"mtime":1630087388577,"results":"77","hashOfConfig":"52"},{"size":11618,"mtime":1629051318599,"results":"78","hashOfConfig":"52"},{"size":216,"mtime":1626804545008,"results":"79","hashOfConfig":"52"},{"size":3815,"mtime":1630058308837,"results":"80","hashOfConfig":"52"},{"size":300,"mtime":1626009030610,"results":"81","hashOfConfig":"52"},{"size":289,"mtime":1626167788746,"results":"82","hashOfConfig":"52"},{"size":226,"mtime":1626344096094,"results":"83","hashOfConfig":"52"},{"size":2758,"mtime":1629710248730,"results":"84","hashOfConfig":"52"},{"size":5623,"mtime":1627842639372,"results":"85","hashOfConfig":"52"},{"size":4230,"mtime":1630058476683,"results":"86","hashOfConfig":"52"},{"size":2791,"mtime":1629710336587,"results":"87","hashOfConfig":"52"},{"size":2888,"mtime":1630058363313,"results":"88","hashOfConfig":"52"},{"size":2679,"mtime":1629710324596,"results":"89","hashOfConfig":"52"},{"size":2599,"mtime":1630058517708,"results":"90","hashOfConfig":"52"},{"size":2713,"mtime":1629710284893,"results":"91","hashOfConfig":"52"},{"size":394,"mtime":1629920889129,"results":"92","hashOfConfig":"52"},{"size":200,"mtime":1626174013889,"results":"93","hashOfConfig":"52"},{"size":347,"mtime":1629991559593,"results":"94","hashOfConfig":"52"},{"size":402,"mtime":1630087138063,"results":"95","hashOfConfig":"52"},{"size":380,"mtime":1630087439549,"results":"96","hashOfConfig":"52"},{"size":1364,"mtime":1630316012357,"results":"97","hashOfConfig":"52"},{"size":973,"mtime":1630309125388,"results":"98","hashOfConfig":"52"},{"size":206,"mtime":1630256599156,"results":"99","hashOfConfig":"52"},{"size":769,"mtime":1630308093937,"results":"100","hashOfConfig":"52"},{"size":201,"mtime":1629986604737,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},"zao9y",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"105"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"111"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"171","messages":"172","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"111"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"115"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"115"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rahuljain/Downloads/royalInventory/src/pages/PurchaseOrder.js",["224","225","226","227","228","229","230","231","232","233","234","235","236","237"],"import React, { useEffect } from \"react\";\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport AddCustomer from \"./AddCustomer\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport ItemListDropdown from \"../components/ItemListDropdown\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport \"../components/Icons.css\";\nimport AddItemModal from \"./AddItemModel\";\nimport PopUp from \"./Popup\";\nimport Card from \"../components/Card/Card\";\nimport './PurchaseOrder.css'\nimport PageTitleContainer from \"../components/PageTitleContainer/PageTitleContainer\";\nimport RCreatable from \"../components/RCreatable\";\nimport { getCall, postCall } from \"../helper/ApiHelper\";\nimport { config } from \"../config/Config\";\n\nconst StyledDiv = styled.div`\n  margin-left: 40rem;\n  margin-bottom: 2rem;\n  font-size: 1rem;\n  height: 80px;\n  justify-content: flex-start;\n`;\n\nconst companies = [\n  { text: \"Kurl On\", value: 1 },\n  { text: \"Good luck\", value: 2 },\n  { text: \"Arora furnishers\", value: 3 },\n  { text: \"Ideal Furniture\", value: 4 },\n];\nconst fullWidthTextFieldStyle = {\n  margin: \"1rem 0 1rem 0rem\",\n  width: \"80%\",\n  height: \"40px\",\n  border: \"1px solid\",\n};\n\nfunction ConvertItemsDataToDropdownData(items) {\n  var dropdownItem = [];\n  items.map((item, i) => {\n    dropdownItem.push({\n      image: item.imageUrl,\n      text: item.itemName,\n      value: item.itemName,\n    });\n  });\n  return dropdownItem;\n}\n\nfunction ConvertWarehouseDataToDropdownData(warehouses) {\n  var dropdownItem = [];\n  warehouses.map((warehouse, i) => {\n    dropdownItem.push({\n      value: warehouse.storeId,\n      label: warehouse.address,\n    });\n  });\n  return dropdownItem;\n}\n\nfunction ConvertVendorsDataToDropdownData(vendors) {\n  var dropdownItem = [];\n  vendors.map((vendor, i) => {\n    dropdownItem.push({\n      value: vendor.vendorId,\n      text: vendor.vendorName,\n    });\n  });\n  return dropdownItem;\n}\n\nconst ConvertDateToDisplayFormat = (date) => {\n  let givenDate = new Date(date)\n  return givenDate.toISOString().substr(0, 10);\n}\n\nfunction PurchaseOrder(props) {\n  let initialValues = props.location.state ? {\n    vendorId: props.location.state.vendorId,\n    vendor:props.location.state.vendor,\n    purchaseItem: props.location.state.purchaseItem,\n    purchaseDate: ConvertDateToDisplayFormat(props.location.state.purchaseDate),\n    isGstApplicable: props.location.state.isGst,\n    taxPaid: 1000,\n  }:{\n    vendorId: \"\",\n    vendor:{},\n    purchaseItem: [{ itemName: \"\", quantity: \"\", storeId:\"\", costPrice:\"\" }],\n    purchaseDate: \"\",\n    isGstApplicable: 1,\n    taxPaid: 0,\n  };\n\n  let isEditing = props.location.state ? true : false;\n\n  let history = useHistory();\n  let [shouldShowPopup, setShouldShowPopup] = useState(false);\n\n  const [warehouse, setWarehouse] = useState([]);\n  const [items, setItems] = useState([]);\n  const [vendors, setVendors] = useState([]);\n\n  useEffect(() => {\n    getItems()\n    getWarehouse()\n    getVendors()\n  }, []);\n\n  function addItem(e, values, setValues) {\n    const purchaseItem = [...values.purchaseItem];\n    purchaseItem.push({ itemName: \"\", quantity: \"\", storeId:\"\", costPrice:\"\"  });\n\n    setValues({ ...values, purchaseItem });\n  }\n\n\n\n  function onSubmit(fields) {\n    // display form field values on success\n    \n    let amount = fields.purchaseItem.reduce((accumulator, currentValue) => { return accumulator + (currentValue.costPrice * currentValue.quantity) }, 0);\n    console.log(amount)\n    fields[\"amount\"] = amount\n    alert(JSON.stringify(fields, null, 4));\n\n      if (fields['isGstApplicable']) {\n        fields[\"isGst\"] = 1\n      } else {\n        fields[\"isGst\"] = 0\n      }\n\n    delete fields['vendor']\n\n    postCall('purchases', fields).then(function (responseArr) {\n      console.log('SUCCESS!!');\n    })\n    .catch(function (reason) {\n      console.log('FAILURE!!');\n      alert(reason)\n    });\n    \n  }\n\n  function onItemDropDownChange(index, values, setValues, selectedItem) {\n    const purchaseItem = [...values.purchaseItem];\n    purchaseItem[index].itemName = selectedItem;\n\n    setValues({ ...values, purchaseItem });\n  }\n\n  function onWarehouseDropDownChange(index, values, setValues, selectedWarehouse) {\n    const purchaseItem = [...values.purchaseItem];\n    purchaseItem[index].storeId = selectedWarehouse;\n\n    setValues({ ...values, purchaseItem });\n  }\n\n  function onCompanyDropDownChange(values, setValues, selectedItem) {\n    let vendorId = values.vendorId;\n\n    vendorId = selectedItem\n    setValues({ ...values, vendorId });\n  }\n\n  const getItems = () => {\n    getCall('items').then(function (responseArr) {\n      setItems(responseArr)\n      console.log('SUCCESS!!');\n    })\n    .catch(function (reason) {\n      console.log('FAILURE!!');\n      alert(reason)\n    });\n  }\n\n  const getVendors = () => {\n    getCall('vendors').then(function (responseArr) {\n      setVendors(responseArr)\n      console.log('SUCCESS!!');\n    })\n    .catch(function (reason) {\n      console.log('FAILURE!!');\n      alert(reason)\n    });\n  }\n\n  const getWarehouse = () => {\n    getCall('stores').then(function (responseArr) {\n      setWarehouse(responseArr)\n      console.log('SUCCESS!!');\n    })\n    .catch(function (reason) {\n      console.log('FAILURE!!');\n      alert(reason)\n    });\n  }\n\n  function removeItem(index, values, setValues) {\n    const purchaseItem = [...values.purchaseItem];\n    purchaseItem.splice(index, 1);\n\n    setValues({ ...values, purchaseItem });\n  }\n\n  return (\n    <PageTitleContainer title='Create Purchase Order'>\n    <Card className='purchase-container'>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        enableReinitialize={true}\n      >\n        {({ errors, values, touched, setValues, setFieldValue }) => (\n          <Form>\n            <div>\n              <div style={{\n                        display: \"flex\",\n                        justifyContent: 'flex-start',\n                        alignItems: 'center',\n                      }}>\n                    <label\n                      style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        margin: \"1rem 1rem 1rem 0rem\",\n                        width: \"100px\",\n                        height: \"40px\",\n                        verticalAlign: 'middle'\n                      }}\n                    >\n                      Select Company\n                    </label>\n                    <Dropdown\n                      name=\"vendorId\"\n                      fluid\n                      search\n                      selection\n                      options={ConvertVendorsDataToDropdownData(vendors)}\n                      style={fullWidthTextFieldStyle}\n                      onChange={(event, data) => {\n                        onCompanyDropDownChange(values, setValues, data.value);\n                      }}\n                      defaultValue={{value:values.vendor.vendorId, text:values.vendor.vendorName}}\n                    />\n              </div>\n\n              <div className=\"card-body border-bottom\">\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label\n                      style={{\n                        margin: \"1rem 0 1rem 0rem\",\n                        width: \"100px\",\n                        height: \"40px\",\n                      }}\n                    >\n                      Purchase Date\n                    </label>\n                    <Field\n                      name=\"purchaseDate\"\n                      type=\"date\"\n                      style={{\n                        margin: \"1rem 0 1rem 2rem\",\n                        width: \"300px\",\n                        height: \"40px\",\n                        borderWidth: \"1px solid\",\n                      }}\n                    ></Field>\n                  </div>\n                </div>\n              </div>\n              <div className='purchase-form-group-container-div'>\n                <label className='gst-label'>\n                  <Field\n                    type=\"checkbox\"\n                    name=\"checked\"\n                    value=\"isGstApplicable\"\n                    checked={values.isGstApplicable == 1}\n                    style={{ width: \"20px\", height: \"20px\", marginRight: '10px' }}\n                    onChange={event =>\n                      setFieldValue(\"isGstApplicable\", !values.isGstApplicable)\n                    }\n                  />\n                  Is GST Applied\n                </label>\n              </div>\n              <FieldArray name=\"items\">\n                {() =>\n                  values.purchaseItem.map((item, i) => {\n                    const ticketErrors =\n                      (errors.items?.length && errors.items[i]) || {};\n                    const ticketTouched =\n                      (touched.items?.length && touched.items[i]) || {};\n                    return (\n                      <div key={i} className=\"list-group list-group-flush\">\n                        <div className=\"list-group-item\">\n                          <h5\n                            className=\"card-title\"\n                            style={{\n                              margin: \"1rem 0 1rem 0rem\",\n                              width: \"100%\",\n                              height: \"40px\",\n                            }}\n                          >\n                            Item {i + 1}\n                          </h5>\n                          <div style={{\n                            width: \"100%\",\n                            display:'flex',\n                            \n                          }}>\n                        <div\n                          className=\"form-group col-6\"\n                          style={{\n                            margin: \"1rem 0 1rem 0rem\",\n                            width: \"90%\",\n                            display:'flex',\n                            flexDirection:'column',\n                            \n                          }}\n                        >\n                          <div style={{ width: \"100%\",display:'flex'}}>\n                            <div style={{ width: \"55%\", float: \"left\" }}>\n                            <Dropdown\n                              name={`purchaseItem.${i}.name`}\n                              placeholder=\"Select Item\"\n                              fluid\n                              search\n                              selection\n                              options={ConvertItemsDataToDropdownData(items)}\n                              onChange={(event, data) => {\n                                onItemDropDownChange(\n                                  i,\n                                  values,\n                                  setValues,\n                                  data.value\n                                );\n                              }}\n                              defaultValue={item.itemName}\n                            />\n                            <ErrorMessage\n                              name={`purchaseItem.${i}.name`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div>\n                            <div style={{ width: \"45%\" }}>\n                            <label style={{ margin: \"0rem 1rem 0rem 1rem\", width:'30%' }}>\n                              Quantity\n                            </label>\n                            <Field\n                              name={`purchaseItem.${i}.quantity`}\n                              type=\"text\"\n                              style={{ height: \"40px\", width:'70%'  }}\n                            />\n                            <ErrorMessage\n                              name={`purchaseItem.${i}.quantity`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div>\n                          </div>\n                          <div style={{display:'flex', marginTop:'20px'}}>\n                            <div style={{width:'45%'}}>\n                            <label style={{width:'30%', marginRight:'10px'}}>\n                              Cost Price\n                            </label>\n                            <Field\n                              name={`purchaseItem.${i}.costPrice`}\n                              type=\"number\"\n                              style={{ height: \"40px\", width:'70%' }}\n                            />\n                            <ErrorMessage\n                              name={`purchaseItem.${i}.costPrice`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div>\n                            <div  style={{width:'55%', display:'flex', alignItems:'center'}}>\n                              <label  style={{width:'30%'}}>Warehouse:</label>\n                              <RCreatable\n                                name={`items.${i}.storeId`}\n                                onChange={(event, data) => {\n                                  onWarehouseDropDownChange(\n                                    i,\n                                    values,\n                                    setValues,\n                                    data.value\n                                  );\n                                }}\n                                onBlur={() => {}}\n                                options={ConvertWarehouseDataToDropdownData(warehouse)}\n                                defaultValue={isEditing ? [{label: item.store.address, value: item.storeId}]:null}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div style={{width:'10%', display:'flex', justifyContent:'center',alignItems:'center'}}>\n                        <button\n                              className=\"removeLink\"\n                              type=\"button\"\n                              onClick={(e) => removeItem(i, values, setValues)}\n                              style={{ margin: \"0rem 1rem 0rem 1rem\" }}\n                            >\n                              remove\n                            </button>\n                          </div>\n                        </div>\n                        </div>\n                      </div>\n                    );\n                  })\n                }\n              </FieldArray>\n\n              <div\n                style={{\n                  width: \"200px\",\n                  marginBottom: '50px',\n                  justifyContent: \"left\",\n                  float: \"right\",\n                }}\n              >\n                <button\n                  className=\"link\"\n                  type=\"button\"\n                  onClick={(e) => addItem(e, values, setValues)}\n                >\n                  <span className=\"icon icon-add bg-green ml-10\"></span>\n                  Add Line Item\n                </button>\n              </div>\n              <div\n                style={{\n                  width: \"100%\",\n                  justifyContent: \"center\",\n                  marginBottom: '50px',\n                  display: 'flex',\n                }}\n              >\n                <button\n                  className=\"link\"\n                  type=\"button\"\n                  onClick={(e) => {\n                    setShouldShowPopup(true);\n                  }}\n                >\n                  <span className=\"icon icon-add bg-green ml-10\"></span>\n                  Add New Item\n                </button>\n              </div>\n              <div\n                style={{\n                  marginTop: \"50px\",\n                  display: \"flex\",\n                  width: \"100%\",\n                  justifyContent: 'center',\n                }}\n              >\n                <button\n                  type=\"submit\"\n                  style={{\n                    height: \"40px\",\n                    backgroundColor: \"#4CAF50\",\n                    width: \"140px\",\n                    float: \"left\",\n                    color: \"white\",\n                    borderRadius: \"4px\",\n                    border: \"0px\",\n                  }}\n                >\n                  {isEditing ? \"Edit Purchase\" : \"Create Purchase\"}\n                </button>\n                <button\n                  style={{ marginLeft: \"50px\", height: \"40px\", width: \"80px\" }}\n                  type=\"reset\"\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </Form>\n        )}\n      </Formik>\n      {shouldShowPopup ? (\n        <PopUp shouldShowPopup={shouldShowPopup} onClose={setShouldShowPopup} />\n      ) : null}\n    </Card>\n    </PageTitleContainer>\n  );\n}\n\nexport default PurchaseOrder;\n",["238","239"],"/Users/rahuljain/Downloads/royalInventory/src/pages/AddItemModel.js",[],["240","241"],"/Users/rahuljain/Downloads/royalInventory/src/reportWebVitals.js",[],["242","243"],"/Users/rahuljain/Downloads/royalInventory/src/pages/InvoicesList.js",["244","245","246","247","248"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"../components/Card/Card\";\nimport FilterButton from \"../components/FilterButton/FilterButton\";\nimport Table from \"../components/Table/Table\";\nimport \"./InvoiceList.css\";\nimport DateInput from '../components/DateInput/DateInput'\nimport LinkButton from \"../components/Button/LinkButton/LinkButton\";\nimport PageTitleContainer from \"../components/PageTitleContainer/PageTitleContainer\";\nimport { getCall } from \"../helper/ApiHelper\";\n\nvar heading = ['Invoice Id', 'Name', 'Amount', 'Invoice Date', 'Delivery Date'];\n\nconst InvoicesList = () => {\n  const [invoices, setInvoices] = useState([]);\n  const [filteredInvoices, setFilteredInvoices] = useState([]);\n  const [isTodaySelected, setIsTodaySelected] = useState(false)\n  const [isYesterdaySelected, setIsYesterdaySelected] = useState(false)\n\n  let history = useHistory();\n\n  var filterFromDate\n  var filterToDate\n\n  useEffect(() => {\n\n    getCall('orders')\n      .then(function (responseArr) {\n        console.log(\"SUCCESS!!\");\n        setInvoices(responseArr);\n        setFilteredInvoices(responseArr);\n      })\n      .catch(function (reason) {\n        setInvoices(invoices);\n        console.log(\"FAILURE!!\");\n        alert(reason);\n      });\n  }, []);\n\n  const onEditClick = (index) => {\n    history.push({ pathname: \"/createInvoice\", state: invoices[index] });\n    console.log('edit clicked for index: ' + index)\n  }\n  const onCancelClick = (index) => {\n\n  }\n\n  function checkMatchesIninvoices(item, value) {\n    var ifTrue = false;\n    Object.keys(item).forEach((key) => {\n      if (\n        item[key].toString().toLowerCase().indexOf(value.toLowerCase()) > -1\n      ) {\n        ifTrue = true;\n      }\n    });\n\n    return ifTrue;\n  }\n\n  const handleSearchChange = (event) => {\n    var filteredList = invoices.filter(function (item) {\n      return checkMatchesIninvoices(item, event.target.value);\n    });\n    setFilteredInvoices(filteredList);\n  };\n\n  const convertDateToDisplayFormat = (date) => {\n    let givenDate = new Date(date)\n    return givenDate.toLocaleDateString(\"en-US\")\n  }\n\n  const invoiceData = invoices.map( (invoice) => (\n    [invoice.orderId, invoice.customer.customerName, invoice.amount, convertDateToDisplayFormat(invoice.bookingDate), convertDateToDisplayFormat(invoice.deliveryDate)]\n  ))\n\n  const compareDate = (firstDate, secondDate) => {\n    return firstDate.getDay() == secondDate.getDay() && firstDate.getMonth() == secondDate.getMonth() && firstDate.getYear() == secondDate.getYear();\n  }\n\n  const checkBetweenDateRange = (to, from , checkingDate) => {\n    if((checkingDate <= to && checkingDate >= from)) {\n      return true\n    }\n  }\n    \n\n  const fromDateSelected = (event) => {\n    filterFromDate = event.target.value\n  }\n\n  const toDateSelected = (event) => {\n    \n    filterToDate = event.target.value\n    console.log('to date selected')\n    if (filterFromDate != null) {\n      var filteredList = invoices.filter(function (item) {\n        return checkBetweenDateRange(new Date(filterToDate),new Date(filterFromDate), new Date(item.bookingDate));\n      });\n      setFilteredInvoices(filteredList);\n    }\n  }\n\n  const onTodayClick = () => {\n    var filteredList = invoices.filter(function (item) {\n      let todayDate = new Date()\n      let bookingDate = new Date(item.bookingDate)\n      return compareDate(todayDate, bookingDate);\n    });\n    setIsTodaySelected(true)\n    setIsYesterdaySelected(false)\n    setFilteredInvoices(filteredList);\n  }\n\n  const onYesterdayClick = () => {\n    var filteredList = invoices.filter(function (item) {\n      let todayDate = new Date()\n      todayDate.setDate(todayDate.getDate() - 1)\n      let bookingDate = new Date(item.bookingDate)\n      return compareDate(todayDate, bookingDate);\n    });\n    setIsTodaySelected(false)\n    setIsYesterdaySelected(true)\n    setFilteredInvoices(filteredList);\n  }\n\n  const onClearFilterClick = () => {\n    setIsTodaySelected(false)\n    setIsYesterdaySelected(false)\n    setInvoices(invoices)\n  }\n\n  return (\n    <PageTitleContainer title=\"Invoice List\">\n\n      <div className='search-container'>\n        <input\n          id=\"invoiceSearchKey\"\n          name=\"invoiceSearchKey\"\n          type=\"text\"\n          placeholder=\"   Search\"\n          onChange={handleSearchChange}\n          style={{\n            margin: \"0rem 0rem 1rem 80px\",\n            width: \"60%\",\n            height: \"40px\",\n            border: \"1px solid\",\n            borderRadius: \"20px\",\n          }}\n        />\n      </div>\n      <div style={{\n        display:'flex',\n            margin: \"0rem 0rem 0rem 0rem\",\n            justifyContent:\"center\",\n          }}>\n            <FilterButton isSelected={isTodaySelected} onClick={onTodayClick}>Today</FilterButton>\n            <FilterButton isSelected={isYesterdaySelected} onClick={onYesterdayClick}>Yesterday</FilterButton>\n            <DateInput placeholder={'From:'} onChange={fromDateSelected}></DateInput>\n            <DateInput placeholder={'To:'} onChange={toDateSelected}></DateInput>\n            <LinkButton type=\"button\"\n                              onClick={onClearFilterClick}\n                            >\n                              Clear filter\n                            </LinkButton>\n        </div>\n      <Card className=\"invoice-container\">\n        <Table heading={heading} body={invoiceData} onEditClick={onEditClick} onCancelClick={onCancelClick}/>\n      </Card>\n\n      {/* <Card className=\"invoice-container\">\n        {invoiceData.map((invoice, index) => (\n          <InvoiceItem onClick={() => handleClick(index)} invoice={invoice} />\n        ))}\n      </Card> */}\n    </PageTitleContainer>\n  );\n};\n\nexport default InvoicesList;\n",["249","250"],"/Users/rahuljain/Downloads/royalInventory/src/pages/Popup.js",["251","252","253","254"],"import React, { Component, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\nimport MyEnhancedForm from \"./AddItem/AddItem\";\nimport \"./Popup.css\";\n\n// const customStyles = {\n//     content : {\n//       top                   : '50%',\n//       left                  : '50%',\n//       right                 : 'auto',\n//       bottom                : 'auto',\n//       marginRight           : '-50%',\n//       transform             : 'translate(-50%, -50%)'\n//     }\n//   };\n\nModal.setAppElement(\"#root\");\nfunction PopUp(props) {\n  const [modalIsOpen, setIsOpen] = useState(true);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    props.onClose(false);\n  }\n  return (\n    <Modal\n      isOpen={props.shouldShowPopup}\n      scrollable={true}\n      onAfterOpen={() => {}}\n      onRequestClose={closeModal}\n      contentLabel=\"Example Modal\"\n    >\n      <div className=\"scroll-component\">\n        <div className=\"scroll-content\">\n          <MyEnhancedForm />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default PopUp;\n",["255","256"],"/Users/rahuljain/Downloads/royalInventory/src/index.js",[],["257","258"],"/Users/rahuljain/Downloads/royalInventory/src/pages/AddCustomer.js",["259","260"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useFormik } from \"formik\";\nimport Card from \"../components/Card/Card\";\nimport CtaButton from \"../components/CtaButton/CtaButton\";\nimport \"./AddCustomer.css\";\nimport { postCall, putCall } from \"../helper/ApiHelper\";\nimport PageTitleContainer from \"../components/PageTitleContainer/PageTitleContainer\";\nimport { useState } from \"react\";\nimport { showMessage } from \"../components/Alert/AlertPopup\";\n\n\nconst InputLabel = styled.label`\n  margin-top: 1rem;\n  display: block;\n  font-size: 1rem;\n  height: 20px;\n  justify-content: flex-start;\n`;\n\nconst InputText = styled.input`\n  margin-top: 0rem;\n  font-size: 1rem;\n  border: 1px solid grey;\n  height: 40px;\n  width: 100%;\n  justify-content: flex-start;\n`;\n\nconst InputTextArea = styled.textarea`\n  font-size: 1rem;\n  height: 80px;\n  width: 100%;\n  justify-content: flex-start;\n`;\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.customerName) {\n    errors.customerName = \"Required\";\n  }\n  if (values.phone.length < 10 || values.phone.length > 11) {\n    errors.phone = 'Enter correct number of digits'\n  }\n\n  if (!values.phone) {\n    errors.phone = 'Required'\n  }\n\n  return errors;\n};\n\nconst AddCustomer = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [isInInvoice, setIsInInvoice] = useState(false);\n\n  useEffect(() => {\n    if (props.location == undefined && !props.customer) {\n      setIsEditing(false)\n    }  else if (props.customer){\n      setIsEditing(true)\n    } else if (props.location.state){\n      setIsEditing(true)\n    }\n    props.isInvoice ? setIsInInvoice(true) : setIsInInvoice(false);\n  }, []);\n\n  \n\n  const submitForm = (values) => {\n    if (formik.isValid ) {\n    if (isEditing) {\n      putCall(\"customers\", values)\n        .then((data) => {\n          console.log(\"successfully posted invoice\");\n          \n        })\n        .catch((reason) => {\n          console.log(\"failed in posting invoice\");\n          showMessage(\"OOPS!\",\n          \"Something Went Wrong!!\",\n          \"error\",\n          \"Ok\")\n        });\n      alert(JSON.stringify(values, null, 2));\n    } else {\n      values[\"customerId\"] = \"1\";\n      postCall(\"customers\", values)\n        .then((data) => {\n          console.log(\"successfully posted invoice\");\n          showMessage(\"Done!\",\n          \"Customer added successfully\",\n          \"success\",\n          \"Ok\")\n        })\n        .catch((reason) => {\n          console.log(\"failed in posting invoice\");\n          showMessage(\"OOPS!\",\n          \"Something Went Wrong!!\",\n          \"error\",\n          \"Ok\")\n        });\n      alert(JSON.stringify(values, null, 2));\n    }\n  }\n  }\n\n  const formik = useFormik({\n    initialValues: props.customer\n      ? props.customer\n      : {\n          customerName: \"\",\n          phone: 0,\n          address: \"\",\n          email: \"\",\n          gstno: \"\",\n        },\n    validate,\n    enableReinitialize: false,\n    onSubmit: submitForm,\n  });\n\n  const containerClass = isInInvoice\n    ? \"customer-invoice-container\"\n    : \"customer-container\";\n\n  return (\n    <PageTitleContainer title={isInInvoice ? \"\":\"Add Customer\"}>\n      <Card className={containerClass}>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            formik.handleSubmit(e);\n          }}\n        >\n          <div>\n            <InputLabel>Customer Name:</InputLabel>\n            <InputText\n              id=\"customerName\"\n              name=\"customerName\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.customerName}\n            />\n            {formik.errors.customerName ? (\n              <div style={{ color: \"red\" }}>{formik.errors.customerName}</div>\n            ) : null}\n          </div>\n          <div>\n            <InputLabel>Phone Number:</InputLabel>\n            <InputText\n              id=\"phone\"\n              name=\"phone\"\n              type=\"number\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.phone}\n            />\n            {formik.errors.phone ? <div style={{ color: \"red\" }}>{formik.errors.phone}</div> : null}\n          </div>\n\n          <div>\n            <InputLabel>Address:</InputLabel>\n            <InputTextArea\n              id=\"address\"\n              name=\"address\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.address}\n            />\n          </div>\n          <div>\n            <InputLabel>e-mail:</InputLabel>\n            <InputText\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n              style={{ marginBottom: \"2rem\" }}\n            />\n            </div>\n            <div>\n            <InputLabel>GST no:</InputLabel>\n            <InputText\n              id=\"gstno\"\n              name=\"gstno\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.gstno}\n              style={{ marginBottom: \"2rem\" }}\n            />\n          </div>\n          <CtaButton type={isInInvoice ? 'button':'submit'} onClick={() => {submitForm(formik.values)}}>\n            {isEditing ? \"EDIT\" : \"ADD\"}\n          </CtaButton>\n        </form>\n      </Card>\n    </PageTitleContainer>\n  );\n};\n\nexport default AddCustomer;\n","/Users/rahuljain/Downloads/royalInventory/src/components/ItemListDropdown.js",["261","262","263"],"import React, { useState } from 'react';\n//import onClickOutside from 'react-onclickoutside';\nimport { Image, Item } from 'semantic-ui-react'\nimport './ItemListDropdown.css'\n\nfunction ItemListDropdown({ title, items, multiSelect = false }) {\n  const [open, setOpen] = useState(false);\n  const [selection, setSelection] = useState([]);\n  const toggle = () => setOpen(!open);\n  const [query, setQuery] = useState(\"\");\n // ItemListDropdown.handleClickOutside = () => setOpen(false);\n\n  function handleOnClick(item) {\n    if (!selection.some(current => current.id === item.id)) {\n      if (!multiSelect) {\n        setSelection([item]);\n      } else if (multiSelect) {\n        setSelection([...selection, item]);\n      }\n    } else {\n      let selectionAfterRemoval = selection;\n      selectionAfterRemoval = selectionAfterRemoval.filter(\n        current => current.id !== item.id\n      );\n      setSelection([...selectionAfterRemoval]);\n    }\n  }\n\n  function isItemInSelection(item) {\n    if (selection.some(current => current.id === item.id)) {\n      return true;\n    }\n    return false;\n  }\n\n  function filter(options) {\n      return options.filter(\n          (option) => \n            option['itemName'].toLowerCase().indexOf(query.toLowerCase()) > -1\n      );\n  }\n\n  return (\n    <div className=\"dd-wrapper\">\n      <div\n        className=\"dd-header\"\n        role=\"button\"\n        onClick={() => toggle(!open)}\n      >\n        <div className=\"dd-header__title\">\n          <input type='text' onChange={\n              e => {\n                  setQuery(e.target.value)\n              }\n          } placeholder={title}></input>\n        </div>\n        <div className=\"dd-header__action\">\n          <p>{open ? 'Close' : 'Open'}</p>\n        </div>\n      </div>\n      {open && (\n        <ul className=\"dd-list\">\n          {filter(items).map(item => (\n            <li className=\"dd-list-item\" key={item.id}>\n              <Item >\n                    <Item.Image size='tiny' src={item.imageUrl }/>\n                    <Item.Content>\n                    <Item.Header>{item.itemName}</Item.Header>\n                    </Item.Content>\n                </Item>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\n\n\n// const clickOutsideConfig = {\n//   handleClickOutside: () => ItemListDropdown.handleClickOutside,\n// };\n\n// export default onClickOutside(ItemListDropdown, clickOutsideConfig);\n\nexport default ItemListDropdown;",["264","265"],"/Users/rahuljain/Downloads/royalInventory/src/pages/CreateInvoice.js",["266","267","268","269","270","271","272"],"import React, { useEffect } from \"react\";\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport AddCustomer from \"./AddCustomer\";\nimport { useState } from \"react\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport \"../components/Icons.css\";\nimport { getCall, postCall } from \"../helper/ApiHelper\";\nimport Card from \"../components/Card/Card\";\nimport \"./CreateInvoice.css\";\nimport CtaButton from \"../components/CtaButton/CtaButton\";\nimport PageTitleContainer from \"../components/PageTitleContainer/PageTitleContainer\";\nimport { showMessage } from \"../components/Alert/AlertPopup\";\n\nconst StyledDiv = styled.div`\n  margin-bottom: 2rem;\n  font-size: 1rem;\n  height: 80px;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n`;\n\n\nconst fullWidthTextFieldStyle = {\n  width: \"100%\",\n  height: \"40px\",\n  border: \"1px solid\",\n};\n\nfunction ConvertItemsDataToDropdownData(items) {\n  var dropdownItem = [];\n  items.map((item, i) => {\n    dropdownItem.push({\n      image: item.imageUrl,\n      text: item.itemName,\n      value: item.itemName,\n    });\n  });\n  return dropdownItem;\n}\n\nfunction ConvertStaffDataToDropdownData(staff) {\n  var dropdownItem = [];\n  staff.map((staff, i) => {\n    dropdownItem.push({\n      text: staff.staffName,\n      value: staff.staffId,\n    });\n  });\n  return dropdownItem;\n}\n\nfunction CreateInvoice(props) {\n  let initialValues = props.location.state\n    ? {\n        orderInvoice: props.location.state.orderInvoice,\n        customerNumber: props.location.state.customerId,\n        orderItems: props.location.state.orderItems,\n        customer: {},\n        deliveryDate: props.location.state.deliveryDate,\n        bookingDate: props.location.state.bookingDate,\n        isGst: false,\n        isFullyPaid:false,\n        staff:{},\n      }\n    : {\n        orderInvoice: \"\",\n        customerNumber: \"\",\n        orderItems: [{ name: \"\", quantity: \"\", sellingPrice: \"\", warehouseId: \"\" }],\n        customer: {},\n        deliveryDate: \"\",\n        bookingDate: \"\",\n        isGst: false,\n        isFullyPaid:false,\n        staff:{},\n      };\n\n  let isEditing = props.location.state ? true : false;\n\n  let history = useHistory();\n\n  let [customer, setCustomer] = useState({});\n\n  const [showCustomerFields, setshowCustomerFields] = useState(false);\n\n  const [warehouseDict, setWarehouseDict] = useState([]);\n  const [items, setItems] = useState([])\n  const [staff, setStaff] = useState([])\n\n  useEffect(() => { getItem()\n    getStaff() }, [])\n\n  function addItem(e, values, setValues) {\n    const orderItems = [...values.orderItems];\n    orderItems.push({ name: \"\", quantity: \"\", sellingPrice: \"\", warehouseId: \"\" });\n\n    setValues({ ...values, orderItems });\n  }\n\n  const getItem = () => {\n    getCall('items').then((data) => {\n      setItems(data)\n    } ).catch((reason) => {\n      console.log(\"FAILURE!!\");\n    })\n  }\n\n  const getStaff = () => {\n    getCall('staffs').then((data) => {\n      setStaff(data)\n    } ).catch((reason) => {\n      console.log(\"FAILURE!!\");\n    })\n  }\n\n  function onCustomerNumberEntry(event) {   \n\n    getCall(\"customers\", { params: {phone:event.target.value}})\n      .then((data) => {\n        setCustomer(data[0]);\n        initialValues = {\n          customerNumber: event.target.value,\n          orderItems: initialValues.orderItems,\n          customer: customer,\n        };\n        setshowCustomerFields(true);\n      })\n      .catch((reason) => {\n        alert(reason);\n      });\n  }\n  function onSubmit(fields) {\n    // display form field values on success\n\n    let amount = fields.orderItems.reduce((accumulator, currentValue) => { return accumulator + (currentValue.sellingPrice * currentValue.quantity) }, 0);\n\n    if (!fields['isFullyPaid']) {\n      amount = fields['partialPayment']\n    }\n\n    if (fields['isGst'] ) {\n      fields['isGst'] = 1\n    } else {\n      fields['isGst'] = 0\n    }\n    fields['orderId'] = 0\n    fields['salesTransaction'] = [{\n      \"transactionId\": 0,\n      \"orderId\": 0,\n      \"amountPaid\": amount,\n    }]\n    fields['staffId'] = fields['staff']\n    fields['customerId'] = customer.customerId\n    delete fields['staff']\n    delete fields['partialPayment']\n    delete fields['customer']\n\n    postCall(\"orders\", JSON.stringify(fields, null, 4), true)\n      .then((data) => {\n        showMessage(\"Done!\",\n          \"Invoice added successfully\",\n          \"success\",\n          \"Ok\").then (() => {\n            history.push({ pathname: \"/pdf\", state: fields });\n          })\n      })\n      .catch((reason) => {\n\n      });\n    \n  }\n\n  function getWarehouseForItem(name, index) {\n    getCall(\"warehouse\", {'itemName':name}).then((data) => {\n      //setWarehouseDict(warehouseDict.push({'value':data[0].id , 'label':data[0].name}))\n      \n      setWarehouseDict(oldArray => [...oldArray, data.map( value => { return {'value':value.id ,'label':value.name}})])\n    }).catch((reason) => {\n      setWarehouseDict(oldArray => [...oldArray,  [{'value':'3' ,'label':'test_store_name'}]])\n      console.log(\"failed to get warehouse for index : \"+  index);\n    })\n  }\n\n  function onItemDropDownChange(index, values, setValues, selectedItem) {\n    const orderItems = [...values.orderItems];\n    orderItems[index].name = selectedItem;\n\n    setValues({ ...values, orderItems });\n\n    getWarehouseForItem(selectedItem.itemName, index)\n  }\n\n  function onStaffDropDownChange(values, setValues, selectedStaff) {\n    var staff = values.staff;\n    staff = selectedStaff;\n\n    setValues({ ...values, staff });\n  }\n\n  function removeItem(index, values, setValues) {\n    const orderItems = [...values.orderItems];\n    orderItems.splice(index, 1);\n\n    setValues({ ...values, orderItems });\n  }\n\n  function isFullyPaidClicked(e , setValues , values) {\n    let isFullyPaid = values.isFullyPaid;\n    isFullyPaid = e.target.checked\n    setValues({ ...values, isFullyPaid });\n  }\n\n  const validate = values => {\n    const errors = {};\n  \n    if (!values.customerNumber) {\n      errors.customerNumber = 'Required';\n    }\n\n    if (values.customerNumber.stringify < 10 || values.customerNumber.stringify > 11) {\n      errors.customerNumber = 'Enter valid number';\n    }\n    if (values.orderItems.length == 0) {\n      errors.orderItems.name = 'Add Items';\n    }\n\n    if (!values.deliveryDate) {\n      errors.deliveryDate = 'Required';\n    }\n\n    if (!values.bookingDate) {\n      errors.bookingDate = 'Required';\n    }\n  \n    return errors;\n  };\n\n  return (\n    <PageTitleContainer title='Create Invoice'>\n    <Card className=\"create-invoice-container\">\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        enableReinitialize={false}\n        validate={validate}\n      >\n        {({ errors, values, touched, setValues }) => (\n          <Form>\n            {initialValues.orderInvoice != \"\" && <div className=\"form-group\">\n              <label>Invoice Number</label>\n              <Field\n                name=\"orderInvoice\"\n                type=\"text\"\n                style={fullWidthTextFieldStyle}\n                onBlur={() => {}}\n              ></Field>\n              <ErrorMessage\n                name=\"orderInvoice\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>}\n            <div className=\"form-group\">\n              <label>Customer Number</label>\n              <Field\n                name=\"customerNumber\"\n                type=\"text\"\n                style={fullWidthTextFieldStyle}\n                onBlur={onCustomerNumberEntry}\n              ></Field>\n              <ErrorMessage\n                name=\"customerNumber\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n\n            <div>{showCustomerFields && <AddCustomer customer={customer} isInvoice={true}/>}</div>\n            <div>\n              <div>\n                <div>\n                  <label>Invoice Date</label>\n                  <Field\n                    name=\"bookingDate\"\n                    type=\"date\"\n                    style={{\n                      margin: \"1rem 0 1rem 2rem\",\n                      width: \"300px\",\n                      height: \"40px\",\n                    }}\n                  ></Field>\n                  <ErrorMessage\n                name=\"bookingDate\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n                  <br />\n                  <label\n                    style={{\n                      margin: \"1rem 0 1rem 0rem\",\n                      width: \"100px\",\n                      height: \"40px\",\n                    }}\n                  >\n                    Delivery Date\n                  </label>\n                  <Field\n                    name=\"deliveryDate\"\n                    type=\"date\"\n                    style={{\n                      margin: \"0rem 0 1rem 1.4rem\",\n                      width: \"300px\",\n                      height: \"40px\",\n                    }}\n                  ></Field>\n                  <ErrorMessage\n                name=\"deliveryDate\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n                </div>\n              </div>\n            </div>\n            <div>\n              <label\n                style={{\n                  display: \"flex\",\n                  margin: \"1rem 0 1rem 0rem\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"flex-start\",\n                  width: \"30%\",\n                  height: \"40px\",\n                }}\n              >\n                <Field\n                  type=\"checkbox\"\n                  name=\"checked\"\n                  value=\"isGst\"\n                  style={{ width: \"20px\", height: \"20px\", marginRight: \"5px\" }}\n                />\n                Is GST Applied\n              </label>\n            </div>\n            <FieldArray name=\"orderItems\">\n              {() =>\n                values.orderItems.map((item, i) => {\n                  const ticketErrors =\n                    (errors.items?.length && errors.items[i]) || {};\n                  const ticketTouched =\n                    (touched.items?.length && touched.items[i]) || {};\n                  return (\n                    <div key={item.itemId}>\n                      <div className=\"list-group-item\">\n                        <h5\n                          className=\"card-title\"\n                          style={{\n                            margin: \"1rem 0 1rem 0rem\",\n                            width: \"100%\",\n                            height: \"40px\",\n                          }}\n                        >\n                          Item {i + 1}\n                        </h5>\n                        <div style={{\n                            width: \"100%\",\n                            display:'flex',\n                            \n                          }}>\n                        <div\n                          className=\"form-group col-6\"\n                          style={{\n                            margin: \"1rem 0 1rem 0rem\",\n                            width: \"90%\",\n                            display:'flex',\n                            flexDirection:'column',\n                            \n                          }}\n                        >\n                          <div style={{ width: \"100%\",display:'flex'}}>\n                            <div style={{ width: \"40%\", float: \"left\" }}>\n                            <Dropdown\n                              name={`orderItems.${i}.name`}\n                              placeholder=\"Select Item\"\n                              fluid\n                              search\n                              selection\n                              options={ConvertItemsDataToDropdownData(items)}\n                              onChange={(event, data) => {\n                                onItemDropDownChange(\n                                  i,\n                                  values,\n                                  setValues,\n                                  data.value\n                                );\n                              }}\n                              defaultValue={item.itemName}\n                            />\n                            <ErrorMessage\n                              name={`orderItems.${i}.name`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div>\n                            <div style={{ width: \"30%\" }}>\n                            <label style={{ margin: \"0rem 1rem 0rem 1rem\", width:'30%' }}>\n                              Quantity\n                            </label>\n                            <Field\n                              name={`orderItems.${i}.quantity`}\n                              type=\"text\"\n                              style={{ height: \"40px\", width:'70%'  }}\n                            />\n                            <ErrorMessage\n                              name={`orderItems.${i}.quantity`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div>\n                            <div style={{width:'30%'}}>\n                            <label style={{width:'30%', marginRight:'10px'}}>\n                              Selling Price\n                            </label>\n                            <Field\n                              name={`orderItems.${i}.sellingPrice`}\n                              type=\"number\"\n                              style={{ height: \"40px\", width:'70%' }}\n                            />\n                            <ErrorMessage\n                              name={`orderItems.${i}.sellingPrice`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div>\n                          </div>\n                          <div style={{display:'flex', marginTop:'20px'}}>\n                            {/* <div style={{width:'45%'}}>\n                            <label style={{width:'30%', marginRight:'10px'}}>\n                              Selling Price\n                            </label>\n                            <Field\n                              name={`items.${i}.sellingPrice`}\n                              type=\"number\"\n                              style={{ height: \"40px\", width:'70%' }}\n                            />\n                            <ErrorMessage\n                              name={`items.${i}.sellingPrice`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div> */}\n                            {/* <div  style={{width:'55%', display:'flex', alignItems:'center'}}>\n                              <label  style={{width:'30%'}}>Warehouse:</label>\n                              <RCreatable\n                                name={`items.${i}.warehouseId`}\n                                onChange={(event, data) => {\n                                  onWarehouseDropDownChange(\n                                    i,\n                                    values,\n                                    setValues,\n                                    data.value\n                                  );\n                                }}\n                                onBlur={() => {}}\n                                options={warehouseDict[i]}\n                              />\n                            </div> */}\n                          </div>\n                        </div>\n                        <div style={{width:'10%', display:'flex'}}>\n                        <button\n                              className=\"removeLink\"\n                              type=\"button\"\n                              onClick={(e) => removeItem(i, values, setValues)}\n                              style={{ margin: \"0rem 0rem 0rem 0rem\", textAlign:'center' }}\n                            >\n                              remove\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })\n              }\n            </FieldArray>\n\n            <StyledDiv\n              style={{\n                width: \"200px\",\n                justifyContent: \"left\",\n                float: \"right\",\n              }}\n            >\n              <button\n                className=\"link\"\n                type=\"button\"\n                onClick={(e) => addItem(e, values, setValues)}\n              >\n                <span className=\"icon icon-add bg-green ml-10\"></span>\n                Add Line Item\n              </button>\n            </StyledDiv>\n\n            <div\n              style={{\n                margin: \"3rem 0 1rem 0rem\",\n                width: \"100%\",\n              }}\n            >\n              <label\n                style={{\n                  margin: \"2rem 0 0rem 0rem\",\n                  width: \"100%\",\n                  height: \"40px\",\n                }}\n              >\n                Remarks\n              </label>\n              <Field\n                name=\"remarks\"\n                type=\"textarea\"\n                style={{\n                  margin: \"0rem 0 1rem 0rem\",\n                  width: \"100%\",\n                  height: \"100px\",\n                }}\n              />\n            </div>\n            <div>\n            <Dropdown\n                              name='staff'\n                              placeholder=\"Select Staff\"\n                              fluid\n                              search\n                              selection\n                              options={ConvertStaffDataToDropdownData(staff)}\n                              onChange={(event, data) => {\n                                onStaffDropDownChange(\n                                  values,\n                                  setValues,\n                                  data.value\n                                );\n                              }}\n                            />\n            </div>\n            <div >\n              <label>Payments</label>\n              <div style={{\n                  display: \"flex\",\n                  margin: \"1rem 0 1rem 0rem\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-start\",\n                  width: \"100%\",\n                }}>\n              <label\n                style={{\n                  display: \"flex\",\n                  margin: \"1rem 0 1rem 0rem\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-start\",\n                  width: \"30%\",\n                  height: \"40px\",\n                }}\n              >\n                <Field\n                  type=\"checkbox\"\n                  name=\"checked\"\n                  value=\"isFullyPaid\"\n                  style={{ width: \"20px\", height: \"20px\", marginRight: \"5px\" }}\n                  onBlur={(e) => isFullyPaidClicked(e , setValues , values)}\n                />\n                Fully Paid\n              </label>\n              {!values.isFullyPaid && <><label>Partial Payment</label>\n              <Field\n                  name=\"partialPayment\"\n                  type=\"number\"\n                  style={{ height: \"40px\", width:'30%', marginLeft:'20px'  }}\n                  \n              /></>}\n              \n              </div>\n            </div>\n            <StyledDiv\n              style={{\n                justifyContent: \"center\",\n                height: \"40px\",\n              }}\n            >\n              <CtaButton type=\"submit\" style={{ width: \"100px\", margin: '0px' }}>\n                {isEditing ? \"Edit Invoice\" : \"Create Invoice\"}\n              </CtaButton>\n              <button\n                style={{ marginLeft: \"50px\", height: \"40px\", width: \"80px\" }}\n                type=\"reset\"\n              >\n                Reset\n              </button>\n            </StyledDiv>\n          </Form>\n        )}\n      </Formik>\n    </Card>\n    </PageTitleContainer>\n  );\n}\n\nexport default CreateInvoice;\n","/Users/rahuljain/Downloads/royalInventory/src/components/SidebarData.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/RCreatable.js",[],["273","274"],"/Users/rahuljain/Downloads/royalInventory/src/config/Config.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/ListItem.js",[],"/Users/rahuljain/Downloads/royalInventory/src/App.js",["275"],"/Users/rahuljain/Downloads/royalInventory/src/pages/Reports.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/ItemView.js",["276","277"],"/Users/rahuljain/Downloads/royalInventory/src/pages/AddItem/AddItem.js",["278","279","280","281","282","283","284","285","286","287","288","289","290"],"/Users/rahuljain/Downloads/royalInventory/src/components/Sidebar.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/FileUpload.js",[],["291","292"],"/Users/rahuljain/Downloads/royalInventory/src/components/SubMenu.js",[],["293","294"],"/Users/rahuljain/Downloads/royalInventory/src/helper/ApiHelper.js",["295"],"/Users/rahuljain/Downloads/royalInventory/src/components/Card/Card.js",[],["296","297"],"/Users/rahuljain/Downloads/royalInventory/src/pages/Team.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/Invoice/InvoiceItem.js",["298","299"],"import { Image, Item, Divider } from \"semantic-ui-react\";\nimport './InvoiceItem.css'\n\nconst InvoiceItem = (props) => {\n  return (\n    <div className=\"invoice-item-container\">\n      <Item onClick={props.handleClick}>\n        <Item.Content>\n          <Item.Header>{\"Invoice No: #\" + props.invoice.invoiceId}</Item.Header>\n          <Item.Meta>\n            <span className=\"price\" style={{ fontWeight: \"bold\" }}>\n              {\"Name: \" + props.invoice.customerName + \"    \"}\n            </span>\n            <span\n              className=\"price\"\n              style={{ fontWeight: \"bold\", marginLeft: \"50px\" }}\n            >\n              {\"Amount: \" + props.invoice.amount + \"    \"}\n            </span>\n            <span\n              className=\"price\"\n              style={{ fontWeight: \"bold\", marginLeft: \"50px\" }}\n            >\n              {\"Invoice Date: \" + props.invoice.bookingDate + \"    \"}\n            </span>\n            <span\n              className=\"price\"\n              style={{ fontWeight: \"bold\", marginLeft: \"50px\" }}\n            >\n              {\"Delivery Date: \" + props.invoice.deliveryDate + \"    \"}\n            </span>\n          </Item.Meta>\n        </Item.Content>\n      </Item>\n    </div>\n  );\n};\n\nexport default InvoiceItem;\n",["300","301"],"/Users/rahuljain/Downloads/royalInventory/src/components/Table/Table.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/Table/TableRow.js",["302"],"/Users/rahuljain/Downloads/royalInventory/src/pages/PdfInvoice.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/CtaButton/CtaButton.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/AddStaff/AddStaff.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/DateInput/DateInput.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/FilterButton/FilterButton.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/PageTitleContainer/PageTitleContainer.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/CustomerList/CustomerList.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/PurchaseList/PurchaseList.js",["303","304","305"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"../../components/Card/Card\";\nimport FilterButton from \"../../components/FilterButton/FilterButton\";\nimport Table from \"../../components/Table/Table\";\nimport \"./PurchaseList.css\";\nimport DateInput from '../../components/DateInput/DateInput'\nimport LinkButton from \"../../components/Button/LinkButton/LinkButton\";\nimport PageTitleContainer from \"../../components/PageTitleContainer/PageTitleContainer\";\nimport { getCall } from \"../../helper/ApiHelper\";\n\nvar heading = ['Purchase Id', 'Business Name', 'Amount', 'Purchase Date'];\n\nconst PurchaseList = () => {\n  const [purchase, setPurchase] = useState([]);\n  const [filteredPurchase, setFilteredPurchase] = useState([]);\n  const [isTodaySelected, setIsTodaySelected] = useState(false)\n  const [isYesterdaySelected, setIsYesterdaySelected] = useState(false)\n\n  let history = useHistory();\n\n  var filterFromDate\n  var filterToDate\n\n  useEffect(() => {\n    getCall('purchases').then(function (responseArr) {\n        console.log(\"SUCCESS!!\");\n        setPurchase(responseArr);\n        setFilteredPurchase(responseArr)\n      })\n      .catch(function (reason) {\n        console.log(\"FAILURE!!\");\n        alert(reason);\n      });\n  }, []);\n\n  const onEditClick = (index) => {\n    history.push({ pathname: \"/createPurchase\", state: purchase[index] });\n    console.log('edit clicked for index: ' + index)\n  }\n  const onCancelClick = (index) => {\n\n  }\n\n  function checkMatchesInInvoiceList(item, value) {\n    var ifTrue = false;\n    Object.keys(item).forEach((key) => {\n        if (item[key] != null) {\n            if (               \n              item[key].toString().toLowerCase().indexOf(value.toLowerCase()) > -1\n            ) {\n              ifTrue = true;\n            }\n          }\n    });\n\n    return ifTrue;\n  }\n\n  const handleSearchChange = (event) => {\n    var filteredList = purchase.filter(function (item) {\n      return checkMatchesInInvoiceList(item, event.target.value);\n    });\n    setFilteredPurchase(filteredList);\n  };\n\n  const convertDateToDisplayFormat = (date) => {\n    let givenDate = new Date(date)\n    return givenDate.toLocaleDateString(\"en-US\")\n  }\n\n  const purchaseData = filteredPurchase.map( (purchaseObject) => (\n    [purchaseObject.purchaseId, purchaseObject.vendor.vendorName, purchaseObject.amount, convertDateToDisplayFormat(purchaseObject.purchaseDate)]\n  ))\n\n  const compareDate = (firstDate, secondDate) => {\n    return firstDate.getDay() == secondDate.getDay() && firstDate.getMonth() == secondDate.getMonth() && firstDate.getYear() == secondDate.getYear();\n  }\n\n  const checkBetweenDateRange = (to, from , checkingDate) => {\n    if((checkingDate <= to && checkingDate >= from)) {\n      return true\n    }\n  }\n    \n\n  const fromDateSelected = (event) => {\n    filterFromDate = event.target.value\n  }\n\n  const toDateSelected = (event) => {\n    \n    filterToDate = event.target.value\n    console.log('to date selected')\n    if (filterFromDate != null) {\n      var filteredList = purchaseData.filter(function (item) {\n        return checkBetweenDateRange(new Date(filterToDate),new Date(filterFromDate), new Date(item.bookingDate));\n      });\n      setFilteredPurchase(filteredList);\n    }\n  }\n\n  const onTodayClick = () => {\n    var filteredList = purchase.filter(function (item) {\n      let todayDate = new Date()\n      let bookingDate = new Date(item.bookingDate)\n      return compareDate(todayDate, bookingDate);\n    });\n    setIsTodaySelected(true)\n    setIsYesterdaySelected(false)\n    setFilteredPurchase(filteredList);\n  }\n\n  const onYesterdayClick = () => {\n    var filteredList = purchase.filter(function (item) {\n      let todayDate = new Date()\n      todayDate.setDate(todayDate.getDate() - 1)\n      let bookingDate = new Date(item.bookingDate)\n      return compareDate(todayDate, bookingDate);\n    });\n    setIsTodaySelected(false)\n    setIsYesterdaySelected(true)\n    setFilteredPurchase(filteredList);\n  }\n\n  const onClearFilterClick = () => {\n    setIsTodaySelected(false)\n    setIsYesterdaySelected(false)\n    setPurchase(purchase)\n  }\n\n  return (\n    <PageTitleContainer title=\"Purchase List\">\n\n      <div className='search-container'>\n        <input\n          id=\"invoiceSearchKey\"\n          name=\"invoiceSearchKey\"\n          type=\"text\"\n          placeholder=\"   Search\"\n          onChange={handleSearchChange}\n          style={{\n            margin: \"0rem 0rem 1rem 80px\",\n            width: \"60%\",\n            height: \"40px\",\n            border: \"1px solid\",\n            borderRadius: \"20px\",\n          }}\n        />\n      </div>\n      <div style={{\n        display:'flex',\n            margin: \"0rem 0rem 0rem 0rem\",\n            justifyContent:\"center\",\n          }}>\n            <FilterButton isSelected={isTodaySelected} onClick={onTodayClick}>Today</FilterButton>\n            <FilterButton isSelected={isYesterdaySelected} onClick={onYesterdayClick}>Yesterday</FilterButton>\n            <DateInput placeholder={'From:'} onChange={fromDateSelected}></DateInput>\n            <DateInput placeholder={'To:'} onChange={toDateSelected}></DateInput>\n            <LinkButton type=\"button\"\n                              onClick={onClearFilterClick}\n                            >\n                              Clear filter\n                            </LinkButton>\n        </div>\n      <Card className=\"purchase-list-container\">\n        <Table heading={heading} body={purchaseData} onEditClick={onEditClick} onCancelClick={onCancelClick}/>\n      </Card>\n    </PageTitleContainer>\n  );\n};\n\nexport default PurchaseList;\n","/Users/rahuljain/Downloads/royalInventory/src/pages/AddVendor/AddVendor.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/VendorList/VendorList.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/AddStore/AddStore.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/StoreList/StoreList.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/BrandList/BrandList.js",["306"],"import { useEffect } from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport Card from \"../../components/Card/Card\";\nimport PageTitleContainer from \"../../components/PageTitleContainer/PageTitleContainer\";\nimport Table from \"../../components/Table/Table\";\nimport { getCall } from \"../../helper/ApiHelper\";\nimport './BrandList.css'\nimport { useHistory } from \"react-router-dom\";\n\nconst BrandList = () => {\n\n    let history = useHistory();\n\n    const [brand, setBrand] = useState([]);\n\n    const [filteredBrand, setFilteredBrand] = useState([]);\n\n    const getBrand = () => {\n        getCall('brands').then(function (responseArr) {\n            setBrand(responseArr)\n            setFilteredBrand(responseArr)\n          })\n          .catch(function (reason) {\n            alert(reason)\n          });\n    }\n\n    useEffect(() => {\n        getBrand()\n      }, []);\n\n      function checkMatchesInCustomerList(item, value) {\n        var ifTrue = false;\n        Object.keys(item).forEach((key) => {\n            if (item[key] != null) {\n          if (\n              \n            item[key].toString().toLowerCase().indexOf(value.toLowerCase()) > -1\n          ) {\n            ifTrue = true;\n          }\n        }\n        });\n    \n        return ifTrue;\n      }\n\n      const handleSearchChange = (event) => {\n        var filteredList = brand.filter(function (item) {\n          return checkMatchesInCustomerList(item, event.target.value);\n        });\n        setFilteredBrand(filteredList);\n      };\n\n    const brandData = filteredBrand.map( (brand) => (\n        [brand.brandId, brand.brandName]\n      ))\n\n    const heading = ['Brand Id', 'Name']\n\n    const onEditClick = (index) => {\n        history.push({ pathname: \"/addBrand\", state: filteredBrand[index] });\n        console.log('edit clicked for index: ' + index)\n      }\n\n    return (\n        <PageTitleContainer title=\"Brand List\">\n    \n          <div className='brand-search-container'>\n            <input\n              id=\"invoiceSearchKey\"\n              name=\"invoiceSearchKey\"\n              type=\"text\"\n              placeholder=\"   Search\"\n              onChange={handleSearchChange}\n              style={{\n                margin: \"0rem 0rem 1rem 0px\",\n                width: \"60%\",\n                height: \"40px\",\n                border: \"1px solid\",\n                borderRadius: \"20px\",\n              }}\n            />\n          </div>\n          <Card className=\"brand-list-container\">\n            <Table heading={heading} body={brandData}/>\n          </Card>\n        </PageTitleContainer>\n      );\n\n}\n\nexport default BrandList;","/Users/rahuljain/Downloads/royalInventory/src/pages/CategoryList/CategoryList.js",["307"],"import { useEffect,useState } from \"react\";\nimport Card from \"../../components/Card/Card\";\nimport PageTitleContainer from \"../../components/PageTitleContainer/PageTitleContainer\";\nimport Table from \"../../components/Table/Table\";\nimport { getCall } from \"../../helper/ApiHelper\";\nimport './CategoryList.css'\nimport { useHistory } from \"react-router-dom\";\n\nconst CategoryList = () => {\n\n    let history = useHistory();\n\n    const [category, setCategory] = useState([]);\n\n    const [filteredCategory, setFilteredCategory] = useState([]);\n\n    const getCategory = () => {\n        getCall('categories').then(function (responseArr) {\n            setCategory(responseArr)\n            setFilteredCategory(responseArr)\n            console.log('SUCCESS!!');\n          })\n          .catch(function (reason) {\n            console.log('FAILURE!!');\n            alert(reason)\n          });\n    }\n\n    useEffect(() => {\n        getCategory()\n      }, []);\n\n      function checkMatchesInCustomerList(item, value) {\n        var ifTrue = false;\n        Object.keys(item).forEach((key) => {\n            if (item[key] != null) {\n          if (\n              \n            item[key].toString().toLowerCase().indexOf(value.toLowerCase()) > -1\n          ) {\n            ifTrue = true;\n          }\n        }\n        });\n    \n        return ifTrue;\n      }\n\n      const handleSearchChange = (event) => {\n        var filteredList = category.filter(function (item) {\n          return checkMatchesInCustomerList(item, event.target.value);\n        });\n        setFilteredCategory(filteredList);\n      };\n\n    const categoryData = filteredCategory.map( (category) => (\n        [category.categoryId, category.categoryName]\n      ))\n\n    const heading = ['Category Id', 'Name']\n\n    const onEditClick = (index) => {\n        history.push({ pathname: \"/addCategory\", state: filteredCategory[index] });\n        console.log('edit clicked for index: ' + index)\n      }\n\n    return (\n        <PageTitleContainer title=\"Category List\">\n    \n          <div className='category-search-container'>\n            <input\n              id=\"invoiceSearchKey\"\n              name=\"invoiceSearchKey\"\n              type=\"text\"\n              placeholder=\"   Search\"\n              onChange={handleSearchChange}\n              style={{\n                margin: \"0rem 0rem 1rem 0px\",\n                width: \"60%\",\n                height: \"40px\",\n                border: \"1px solid\",\n                borderRadius: \"20px\",\n              }}\n            />\n          </div>\n          <Card className=\"category-list-container\">\n            <Table heading={heading} body={categoryData}/>\n          </Card>\n        </PageTitleContainer>\n      );\n\n}\n\nexport default CategoryList;","/Users/rahuljain/Downloads/royalInventory/src/components/Alert/AlertPopup.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/Button/LinkButton/LinkButton.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/Dashboard/SalesSummary.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/Button/EditButton/EditButton.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/Button/DeleteButton/DeleteButton.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/Login/Login.js",[],"/Users/rahuljain/Downloads/royalInventory/src/store/auth-api.js",["308"],"/Users/rahuljain/Downloads/royalInventory/src/store/auth-header.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/SubMenuButton.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/Dashboard/Dashboard.js",[],{"ruleId":"309","severity":1,"message":"310","line":5,"column":8,"nodeType":"311","messageId":"312","endLine":5,"endColumn":19},{"ruleId":"309","severity":1,"message":"313","line":6,"column":8,"nodeType":"311","messageId":"312","endLine":6,"endColumn":13},{"ruleId":"309","severity":1,"message":"314","line":8,"column":8,"nodeType":"311","messageId":"312","endLine":8,"endColumn":24},{"ruleId":"309","severity":1,"message":"315","line":11,"column":8,"nodeType":"311","messageId":"312","endLine":11,"endColumn":20},{"ruleId":"309","severity":1,"message":"316","line":18,"column":10,"nodeType":"311","messageId":"312","endLine":18,"endColumn":16},{"ruleId":"309","severity":1,"message":"317","line":20,"column":7,"nodeType":"311","messageId":"312","endLine":20,"endColumn":16},{"ruleId":"309","severity":1,"message":"318","line":28,"column":7,"nodeType":"311","messageId":"312","endLine":28,"endColumn":16},{"ruleId":"319","severity":1,"message":"320","line":43,"column":23,"nodeType":"321","messageId":"322","endLine":43,"endColumn":25},{"ruleId":"319","severity":1,"message":"320","line":55,"column":33,"nodeType":"321","messageId":"322","endLine":55,"endColumn":35},{"ruleId":"319","severity":1,"message":"320","line":66,"column":27,"nodeType":"321","messageId":"322","endLine":66,"endColumn":29},{"ruleId":"309","severity":1,"message":"323","line":99,"column":7,"nodeType":"311","messageId":"312","endLine":99,"endColumn":14},{"ruleId":"324","severity":1,"message":"325","line":281,"column":53,"nodeType":"326","messageId":"327","endLine":281,"endColumn":55},{"ruleId":"309","severity":1,"message":"328","line":293,"column":27,"nodeType":"311","messageId":"312","endLine":293,"endColumn":39},{"ruleId":"309","severity":1,"message":"329","line":295,"column":27,"nodeType":"311","messageId":"312","endLine":295,"endColumn":40},{"ruleId":"330","replacedBy":"331"},{"ruleId":"332","replacedBy":"333"},{"ruleId":"330","replacedBy":"334"},{"ruleId":"332","replacedBy":"335"},{"ruleId":"330","replacedBy":"336"},{"ruleId":"332","replacedBy":"337"},{"ruleId":"309","severity":1,"message":"338","line":16,"column":10,"nodeType":"311","messageId":"312","endLine":16,"endColumn":26},{"ruleId":"339","severity":1,"message":"340","line":38,"column":6,"nodeType":"341","endLine":38,"endColumn":8,"suggestions":"342"},{"ruleId":"324","severity":1,"message":"325","line":78,"column":31,"nodeType":"326","messageId":"327","endLine":78,"endColumn":33},{"ruleId":"324","severity":1,"message":"325","line":78,"column":78,"nodeType":"326","messageId":"327","endLine":78,"endColumn":80},{"ruleId":"324","severity":1,"message":"325","line":78,"column":126,"nodeType":"326","messageId":"327","endLine":78,"endColumn":128},{"ruleId":"330","replacedBy":"343"},{"ruleId":"332","replacedBy":"344"},{"ruleId":"309","severity":1,"message":"345","line":1,"column":17,"nodeType":"311","messageId":"312","endLine":1,"endColumn":26},{"ruleId":"309","severity":1,"message":"346","line":2,"column":8,"nodeType":"311","messageId":"312","endLine":2,"endColumn":14},{"ruleId":"309","severity":1,"message":"347","line":20,"column":10,"nodeType":"311","messageId":"312","endLine":20,"endColumn":21},{"ruleId":"309","severity":1,"message":"348","line":22,"column":12,"nodeType":"311","messageId":"312","endLine":22,"endColumn":21},{"ruleId":"330","replacedBy":"349"},{"ruleId":"332","replacedBy":"350"},{"ruleId":"330","replacedBy":"351"},{"ruleId":"332","replacedBy":"352"},{"ruleId":"324","severity":1,"message":"325","line":59,"column":24,"nodeType":"326","messageId":"327","endLine":59,"endColumn":26},{"ruleId":"339","severity":1,"message":"353","line":67,"column":6,"nodeType":"341","endLine":67,"endColumn":8,"suggestions":"354"},{"ruleId":"309","severity":1,"message":"355","line":3,"column":10,"nodeType":"311","messageId":"312","endLine":3,"endColumn":15},{"ruleId":"309","severity":1,"message":"356","line":13,"column":12,"nodeType":"311","messageId":"312","endLine":13,"endColumn":25},{"ruleId":"309","severity":1,"message":"357","line":29,"column":12,"nodeType":"311","messageId":"312","endLine":29,"endColumn":29},{"ruleId":"330","replacedBy":"358"},{"ruleId":"332","replacedBy":"359"},{"ruleId":"319","severity":1,"message":"320","line":34,"column":23,"nodeType":"321","messageId":"322","endLine":34,"endColumn":25},{"ruleId":"319","severity":1,"message":"320","line":46,"column":24,"nodeType":"321","messageId":"322","endLine":46,"endColumn":26},{"ruleId":"309","severity":1,"message":"360","line":88,"column":10,"nodeType":"311","messageId":"312","endLine":88,"endColumn":23},{"ruleId":"324","severity":1,"message":"325","line":225,"column":34,"nodeType":"326","messageId":"327","endLine":225,"endColumn":36},{"ruleId":"324","severity":1,"message":"361","line":251,"column":41,"nodeType":"326","messageId":"327","endLine":251,"endColumn":43},{"ruleId":"309","severity":1,"message":"328","line":349,"column":25,"nodeType":"311","messageId":"312","endLine":349,"endColumn":37},{"ruleId":"309","severity":1,"message":"329","line":351,"column":25,"nodeType":"311","messageId":"312","endLine":351,"endColumn":38},{"ruleId":"330","replacedBy":"362"},{"ruleId":"332","replacedBy":"363"},{"ruleId":"309","severity":1,"message":"364","line":25,"column":10,"nodeType":"311","messageId":"312","endLine":25,"endColumn":24},{"ruleId":"309","severity":1,"message":"313","line":1,"column":8,"nodeType":"311","messageId":"312","endLine":1,"endColumn":13},{"ruleId":"309","severity":1,"message":"365","line":3,"column":10,"nodeType":"311","messageId":"312","endLine":3,"endColumn":14},{"ruleId":"309","severity":1,"message":"366","line":47,"column":7,"nodeType":"311","messageId":"312","endLine":47,"endColumn":14},{"ruleId":"324","severity":1,"message":"325","line":68,"column":42,"nodeType":"326","messageId":"327","endLine":68,"endColumn":44},{"ruleId":"324","severity":1,"message":"325","line":71,"column":45,"nodeType":"326","messageId":"327","endLine":71,"endColumn":47},{"ruleId":"324","severity":1,"message":"325","line":85,"column":40,"nodeType":"326","messageId":"327","endLine":85,"endColumn":42},{"ruleId":"324","severity":1,"message":"325","line":118,"column":72,"nodeType":"326","messageId":"327","endLine":118,"endColumn":74},{"ruleId":"309","severity":1,"message":"367","line":141,"column":10,"nodeType":"311","messageId":"312","endLine":141,"endColumn":14},{"ruleId":"339","severity":1,"message":"368","line":152,"column":6,"nodeType":"341","endLine":152,"endColumn":8,"suggestions":"369"},{"ruleId":"319","severity":1,"message":"320","line":189,"column":28,"nodeType":"321","messageId":"322","endLine":189,"endColumn":30},{"ruleId":"319","severity":1,"message":"320","line":198,"column":28,"nodeType":"321","messageId":"322","endLine":198,"endColumn":30},{"ruleId":"319","severity":1,"message":"320","line":207,"column":28,"nodeType":"321","messageId":"322","endLine":207,"endColumn":30},{"ruleId":"324","severity":1,"message":"361","line":277,"column":23,"nodeType":"326","messageId":"327","endLine":277,"endColumn":25},{"ruleId":"370","severity":1,"message":"371","line":277,"column":31,"nodeType":"372","endLine":277,"endColumn":80},{"ruleId":"309","severity":1,"message":"373","line":374,"column":7,"nodeType":"311","messageId":"312","endLine":374,"endColumn":15},{"ruleId":"330","replacedBy":"374"},{"ruleId":"332","replacedBy":"375"},{"ruleId":"330","replacedBy":"376"},{"ruleId":"332","replacedBy":"377"},{"ruleId":"309","severity":1,"message":"378","line":14,"column":5,"nodeType":"311","messageId":"312","endLine":14,"endColumn":17},{"ruleId":"330","replacedBy":"379"},{"ruleId":"332","replacedBy":"380"},{"ruleId":"309","severity":1,"message":"355","line":1,"column":10,"nodeType":"311","messageId":"312","endLine":1,"endColumn":15},{"ruleId":"309","severity":1,"message":"381","line":1,"column":23,"nodeType":"311","messageId":"312","endLine":1,"endColumn":30},{"ruleId":"330","replacedBy":"382"},{"ruleId":"332","replacedBy":"383"},{"ruleId":"384","severity":2,"message":"385","line":19,"column":12,"nodeType":"386","endLine":19,"endColumn":24},{"ruleId":"324","severity":1,"message":"325","line":77,"column":31,"nodeType":"326","messageId":"327","endLine":77,"endColumn":33},{"ruleId":"324","severity":1,"message":"325","line":77,"column":78,"nodeType":"326","messageId":"327","endLine":77,"endColumn":80},{"ruleId":"324","severity":1,"message":"325","line":77,"column":126,"nodeType":"326","messageId":"327","endLine":77,"endColumn":128},{"ruleId":"309","severity":1,"message":"387","line":61,"column":11,"nodeType":"311","messageId":"312","endLine":61,"endColumn":22},{"ruleId":"309","severity":1,"message":"387","line":62,"column":11,"nodeType":"311","messageId":"312","endLine":62,"endColumn":22},{"ruleId":"388","severity":1,"message":"389","line":43,"column":1,"nodeType":"390","endLine":48,"endColumn":3},"no-unused-vars","'AddCustomer' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'ItemListDropdown' is defined but never used.","'AddItemModal' is defined but never used.","'config' is defined but never used.","'StyledDiv' is assigned a value but never used.","'companies' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ticketErrors' is assigned a value but never used.","'ticketTouched' is assigned a value but never used.","no-native-reassign",["391"],"no-negated-in-lhs",["392"],["391"],["392"],["391"],["392"],"'filteredInvoices' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'invoices'. Either include it or remove the dependency array. You can also do a functional update 'setInvoices(i => ...)' if you only need 'invoices' in the 'setInvoices' call.","ArrayExpression",["393"],["391"],["392"],"'Component' is defined but never used.","'styled' is defined but never used.","'modalIsOpen' is assigned a value but never used.","'openModal' is defined but never used.",["391"],["392"],["391"],["392"],"React Hook useEffect has missing dependencies: 'props.customer', 'props.isInvoice', and 'props.location'. Either include them or remove the dependency array.",["394"],"'Image' is defined but never used.","'handleOnClick' is defined but never used.","'isItemInSelection' is defined but never used.",["391"],["392"],"'warehouseDict' is assigned a value but never used.","Expected '!==' and instead saw '!='.",["391"],["392"],"'getCurrentUser' is defined but never used.","'Item' is defined but never used.","'baseUrl' is assigned a value but never used.","'file' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllParentItems', 'getBrands', and 'getCategories'. Either include them or remove the dependency array.",["395"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'validate' is assigned a value but never used.",["391"],["392"],["391"],["392"],"'mergedHeader' is assigned a value but never used.",["391"],["392"],"'Divider' is defined but never used.",["391"],["392"],"react/jsx-no-undef","'DeleteButton' is not defined.","JSXIdentifier","'onEditClick' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},"Update the dependencies array to be: [invoices]",{"range":"402","text":"403"},"Update the dependencies array to be: [props.customer, props.isInvoice, props.location]",{"range":"404","text":"405"},"Update the dependencies array to be: [getAllParentItems, getBrands, getCategories]",{"range":"406","text":"407"},[1314,1316],"[invoices]",[1689,1691],"[props.customer, props.isInvoice, props.location]",[4090,4092],"[getAllParentItems, getBrands, getCategories]"]