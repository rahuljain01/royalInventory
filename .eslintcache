[{"/Users/rahuljain/Downloads/royalInventory/src/pages/PurchaseOrder.js":"1","/Users/rahuljain/Downloads/royalInventory/src/pages/AddItemModel.js":"2","/Users/rahuljain/Downloads/royalInventory/src/reportWebVitals.js":"3","/Users/rahuljain/Downloads/royalInventory/src/pages/InvoicesList.js":"4","/Users/rahuljain/Downloads/royalInventory/src/pages/Popup.js":"5","/Users/rahuljain/Downloads/royalInventory/src/index.js":"6","/Users/rahuljain/Downloads/royalInventory/src/pages/AddCustomer.js":"7","/Users/rahuljain/Downloads/royalInventory/src/components/ItemListDropdown.js":"8","/Users/rahuljain/Downloads/royalInventory/src/pages/CreateInvoice.js":"9","/Users/rahuljain/Downloads/royalInventory/src/components/SidebarData.js":"10","/Users/rahuljain/Downloads/royalInventory/src/components/RCreatable.js":"11","/Users/rahuljain/Downloads/royalInventory/src/config/Config.js":"12","/Users/rahuljain/Downloads/royalInventory/src/components/ListItem.js":"13","/Users/rahuljain/Downloads/royalInventory/src/App.js":"14","/Users/rahuljain/Downloads/royalInventory/src/pages/Reports.js":"15","/Users/rahuljain/Downloads/royalInventory/src/pages/ItemView.js":"16","/Users/rahuljain/Downloads/royalInventory/src/pages/AddItem/AddItem.js":"17","/Users/rahuljain/Downloads/royalInventory/src/components/Sidebar.js":"18","/Users/rahuljain/Downloads/royalInventory/src/components/FileUpload.js":"19","/Users/rahuljain/Downloads/royalInventory/src/components/SubMenu.js":"20","/Users/rahuljain/Downloads/royalInventory/src/helper/ApiHelper.js":"21","/Users/rahuljain/Downloads/royalInventory/src/components/Card/Card.js":"22","/Users/rahuljain/Downloads/royalInventory/src/pages/Team.js":"23","/Users/rahuljain/Downloads/royalInventory/src/components/Invoice/InvoiceItem.js":"24","/Users/rahuljain/Downloads/royalInventory/src/components/Table/Table.js":"25","/Users/rahuljain/Downloads/royalInventory/src/components/Table/TableRow.js":"26","/Users/rahuljain/Downloads/royalInventory/src/pages/PdfInvoice.js":"27","/Users/rahuljain/Downloads/royalInventory/src/components/CtaButton/CtaButton.js":"28","/Users/rahuljain/Downloads/royalInventory/src/pages/AddStaff/AddStaff.js":"29","/Users/rahuljain/Downloads/royalInventory/src/components/DateInput/DateInput.js":"30","/Users/rahuljain/Downloads/royalInventory/src/components/FilterButton/FilterButton.js":"31","/Users/rahuljain/Downloads/royalInventory/src/components/PageTitleContainer/PageTitleContainer.js":"32","/Users/rahuljain/Downloads/royalInventory/src/pages/CustomerList/CustomerList.js":"33","/Users/rahuljain/Downloads/royalInventory/src/pages/PurchaseList/PurchaseList.js":"34","/Users/rahuljain/Downloads/royalInventory/src/pages/AddVendor/AddVendor.js":"35","/Users/rahuljain/Downloads/royalInventory/src/pages/VendorList/VendorList.js":"36","/Users/rahuljain/Downloads/royalInventory/src/pages/AddStore/AddStore.js":"37","/Users/rahuljain/Downloads/royalInventory/src/pages/StoreList/StoreList.js":"38","/Users/rahuljain/Downloads/royalInventory/src/pages/BrandList/BrandList.js":"39","/Users/rahuljain/Downloads/royalInventory/src/pages/CategoryList/CategoryList.js":"40","/Users/rahuljain/Downloads/royalInventory/src/components/Alert/AlertPopup.js":"41","/Users/rahuljain/Downloads/royalInventory/src/components/Button/LinkButton/LinkButton.js":"42","/Users/rahuljain/Downloads/royalInventory/src/components/Dashboard/SalesSummary.js":"43","/Users/rahuljain/Downloads/royalInventory/src/components/Button/EditButton/EditButton.js":"44","/Users/rahuljain/Downloads/royalInventory/src/components/Button/DeleteButton/DeleteButton.js":"45","/Users/rahuljain/Downloads/royalInventory/src/pages/Login/Login.js":"46","/Users/rahuljain/Downloads/royalInventory/src/store/auth-api.js":"47","/Users/rahuljain/Downloads/royalInventory/src/store/auth-header.js":"48","/Users/rahuljain/Downloads/royalInventory/src/components/SubMenuButton.js":"49","/Users/rahuljain/Downloads/royalInventory/src/pages/Dashboard/Dashboard.js":"50","/Users/rahuljain/Downloads/royalInventory/src/components/PrivateRoute.js":"51","/Users/rahuljain/Downloads/royalInventory/src/components/Invoice/InvoiceTable.js":"52","/Users/rahuljain/Downloads/royalInventory/src/components/Invoice/InvoiceRow.js":"53","/Users/rahuljain/Downloads/royalInventory/src/components/Date/DateHelper/DateHelper.js":"54"},{"size":17002,"mtime":1627925733534,"results":"55","hashOfConfig":"56"},{"size":651,"mtime":1623096856434,"results":"57","hashOfConfig":"56"},{"size":362,"mtime":1606676707000,"results":"58","hashOfConfig":"56"},{"size":6700,"mtime":1631197265175,"results":"59","hashOfConfig":"56"},{"size":1101,"mtime":1623096873573,"results":"60","hashOfConfig":"56"},{"size":523,"mtime":1629573828590,"results":"61","hashOfConfig":"56"},{"size":5744,"mtime":1630493309761,"results":"62","hashOfConfig":"56"},{"size":2431,"mtime":1620234327287,"results":"63","hashOfConfig":"56"},{"size":22792,"mtime":1631284763002,"results":"64","hashOfConfig":"56"},{"size":2870,"mtime":1629986764346,"results":"65","hashOfConfig":"56"},{"size":1100,"mtime":1627888961545,"results":"66","hashOfConfig":"56"},{"size":89,"mtime":1626536962743,"results":"67","hashOfConfig":"56"},{"size":1029,"mtime":1629908598302,"results":"68","hashOfConfig":"56"},{"size":3430,"mtime":1631195257079,"results":"69","hashOfConfig":"56"},{"size":525,"mtime":1606676707000,"results":"70","hashOfConfig":"56"},{"size":1714,"mtime":1629908579690,"results":"71","hashOfConfig":"56"},{"size":11443,"mtime":1630058366030,"results":"72","hashOfConfig":"56"},{"size":2466,"mtime":1630315673060,"results":"73","hashOfConfig":"56"},{"size":2004,"mtime":1619288986820,"results":"74","hashOfConfig":"56"},{"size":1591,"mtime":1606676707000,"results":"75","hashOfConfig":"56"},{"size":2279,"mtime":1631280690119,"results":"76","hashOfConfig":"56"},{"size":144,"mtime":1623686645503,"results":"77","hashOfConfig":"56"},{"size":148,"mtime":1606676707000,"results":"78","hashOfConfig":"56"},{"size":1250,"mtime":1624131940767,"results":"79","hashOfConfig":"56"},{"size":603,"mtime":1630831308922,"results":"80","hashOfConfig":"56"},{"size":779,"mtime":1630087388577,"results":"81","hashOfConfig":"56"},{"size":12118,"mtime":1631194892679,"results":"82","hashOfConfig":"56"},{"size":216,"mtime":1626804545008,"results":"83","hashOfConfig":"56"},{"size":4356,"mtime":1630496391871,"results":"84","hashOfConfig":"56"},{"size":300,"mtime":1626009030610,"results":"85","hashOfConfig":"56"},{"size":289,"mtime":1626167788746,"results":"86","hashOfConfig":"56"},{"size":226,"mtime":1626344096094,"results":"87","hashOfConfig":"56"},{"size":2758,"mtime":1629710248730,"results":"88","hashOfConfig":"56"},{"size":5623,"mtime":1627842639372,"results":"89","hashOfConfig":"56"},{"size":4230,"mtime":1630058476683,"results":"90","hashOfConfig":"56"},{"size":2791,"mtime":1629710336587,"results":"91","hashOfConfig":"56"},{"size":2888,"mtime":1630058363313,"results":"92","hashOfConfig":"56"},{"size":2679,"mtime":1629710324596,"results":"93","hashOfConfig":"56"},{"size":2599,"mtime":1630058517708,"results":"94","hashOfConfig":"56"},{"size":2713,"mtime":1629710284893,"results":"95","hashOfConfig":"56"},{"size":664,"mtime":1630872182050,"results":"96","hashOfConfig":"56"},{"size":200,"mtime":1626174013889,"results":"97","hashOfConfig":"56"},{"size":347,"mtime":1629991559593,"results":"98","hashOfConfig":"56"},{"size":402,"mtime":1630087138063,"results":"99","hashOfConfig":"56"},{"size":380,"mtime":1630087439549,"results":"100","hashOfConfig":"56"},{"size":1364,"mtime":1630316012357,"results":"101","hashOfConfig":"56"},{"size":1016,"mtime":1631264004887,"results":"102","hashOfConfig":"56"},{"size":206,"mtime":1630256599156,"results":"103","hashOfConfig":"56"},{"size":769,"mtime":1630308093937,"results":"104","hashOfConfig":"56"},{"size":201,"mtime":1630776889052,"results":"105","hashOfConfig":"56"},{"size":364,"mtime":1630311246283,"results":"106","hashOfConfig":"56"},{"size":864,"mtime":1630867084662,"results":"107","hashOfConfig":"56"},{"size":1434,"mtime":1631027210968,"results":"108","hashOfConfig":"56"},{"size":142,"mtime":1630434369403,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},"zao9y",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"123"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"119"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"123"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"145"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"123"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"116"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"145"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rahuljain/Downloads/royalInventory/src/pages/PurchaseOrder.js",["245","246","247","248","249","250","251","252","253","254","255","256","257","258"],"import React, { useEffect } from \"react\";\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from \"formik\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport AddCustomer from \"./AddCustomer\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport ItemListDropdown from \"../components/ItemListDropdown\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport \"../components/Icons.css\";\nimport AddItemModal from \"./AddItemModel\";\nimport PopUp from \"./Popup\";\nimport Card from \"../components/Card/Card\";\nimport './PurchaseOrder.css'\nimport PageTitleContainer from \"../components/PageTitleContainer/PageTitleContainer\";\nimport RCreatable from \"../components/RCreatable\";\nimport { getCall, postCall } from \"../helper/ApiHelper\";\nimport { config } from \"../config/Config\";\n\nconst StyledDiv = styled.div`\n  margin-left: 40rem;\n  margin-bottom: 2rem;\n  font-size: 1rem;\n  height: 80px;\n  justify-content: flex-start;\n`;\n\nconst companies = [\n  { text: \"Kurl On\", value: 1 },\n  { text: \"Good luck\", value: 2 },\n  { text: \"Arora furnishers\", value: 3 },\n  { text: \"Ideal Furniture\", value: 4 },\n];\nconst fullWidthTextFieldStyle = {\n  margin: \"1rem 0 1rem 0rem\",\n  width: \"80%\",\n  height: \"40px\",\n  border: \"1px solid\",\n};\n\nfunction ConvertItemsDataToDropdownData(items) {\n  var dropdownItem = [];\n  items.map((item, i) => {\n    dropdownItem.push({\n      image: item.imageUrl,\n      text: item.itemName,\n      value: item.itemName,\n    });\n  });\n  return dropdownItem;\n}\n\nfunction ConvertWarehouseDataToDropdownData(warehouses) {\n  var dropdownItem = [];\n  warehouses.map((warehouse, i) => {\n    dropdownItem.push({\n      value: warehouse.storeId,\n      label: warehouse.address,\n    });\n  });\n  return dropdownItem;\n}\n\nfunction ConvertVendorsDataToDropdownData(vendors) {\n  var dropdownItem = [];\n  vendors.map((vendor, i) => {\n    dropdownItem.push({\n      value: vendor.vendorId,\n      text: vendor.vendorName,\n    });\n  });\n  return dropdownItem;\n}\n\nconst ConvertDateToDisplayFormat = (date) => {\n  let givenDate = new Date(date)\n  return givenDate.toISOString().substr(0, 10);\n}\n\nfunction PurchaseOrder(props) {\n  let initialValues = props.location.state ? {\n    vendorId: props.location.state.vendorId,\n    vendor:props.location.state.vendor,\n    purchaseItem: props.location.state.purchaseItem,\n    purchaseDate: ConvertDateToDisplayFormat(props.location.state.purchaseDate),\n    isGstApplicable: props.location.state.isGst,\n    taxPaid: 1000,\n  }:{\n    vendorId: \"\",\n    vendor:{},\n    purchaseItem: [{ itemName: \"\", quantity: \"\", storeId:\"\", costPrice:\"\" }],\n    purchaseDate: \"\",\n    isGstApplicable: 1,\n    taxPaid: 0,\n  };\n\n  let isEditing = props.location.state ? true : false;\n\n  let history = useHistory();\n  let [shouldShowPopup, setShouldShowPopup] = useState(false);\n\n  const [warehouse, setWarehouse] = useState([]);\n  const [items, setItems] = useState([]);\n  const [vendors, setVendors] = useState([]);\n\n  useEffect(() => {\n    getItems()\n    getWarehouse()\n    getVendors()\n  }, []);\n\n  function addItem(e, values, setValues) {\n    const purchaseItem = [...values.purchaseItem];\n    purchaseItem.push({ itemName: \"\", quantity: \"\", storeId:\"\", costPrice:\"\"  });\n\n    setValues({ ...values, purchaseItem });\n  }\n\n\n\n  function onSubmit(fields) {\n    // display form field values on success\n    \n    let amount = fields.purchaseItem.reduce((accumulator, currentValue) => { return accumulator + (currentValue.costPrice * currentValue.quantity) }, 0);\n    console.log(amount)\n    fields[\"amount\"] = amount\n    alert(JSON.stringify(fields, null, 4));\n\n      if (fields['isGstApplicable']) {\n        fields[\"isGst\"] = 1\n      } else {\n        fields[\"isGst\"] = 0\n      }\n\n    delete fields['vendor']\n\n    postCall('purchases', fields).then(function (responseArr) {\n      console.log('SUCCESS!!');\n    })\n    .catch(function (reason) {\n      console.log('FAILURE!!');\n      alert(reason)\n    });\n    \n  }\n\n  function onItemDropDownChange(index, values, setValues, selectedItem) {\n    const purchaseItem = [...values.purchaseItem];\n    purchaseItem[index].itemName = selectedItem;\n\n    setValues({ ...values, purchaseItem });\n  }\n\n  function onWarehouseDropDownChange(index, values, setValues, selectedWarehouse) {\n    const purchaseItem = [...values.purchaseItem];\n    purchaseItem[index].storeId = selectedWarehouse;\n\n    setValues({ ...values, purchaseItem });\n  }\n\n  function onCompanyDropDownChange(values, setValues, selectedItem) {\n    let vendorId = values.vendorId;\n\n    vendorId = selectedItem\n    setValues({ ...values, vendorId });\n  }\n\n  const getItems = () => {\n    getCall('items').then(function (responseArr) {\n      setItems(responseArr)\n      console.log('SUCCESS!!');\n    })\n    .catch(function (reason) {\n      console.log('FAILURE!!');\n      alert(reason)\n    });\n  }\n\n  const getVendors = () => {\n    getCall('vendors').then(function (responseArr) {\n      setVendors(responseArr)\n      console.log('SUCCESS!!');\n    })\n    .catch(function (reason) {\n      console.log('FAILURE!!');\n      alert(reason)\n    });\n  }\n\n  const getWarehouse = () => {\n    getCall('stores').then(function (responseArr) {\n      setWarehouse(responseArr)\n      console.log('SUCCESS!!');\n    })\n    .catch(function (reason) {\n      console.log('FAILURE!!');\n      alert(reason)\n    });\n  }\n\n  function removeItem(index, values, setValues) {\n    const purchaseItem = [...values.purchaseItem];\n    purchaseItem.splice(index, 1);\n\n    setValues({ ...values, purchaseItem });\n  }\n\n  return (\n    <PageTitleContainer title='Create Purchase Order'>\n    <Card className='purchase-container'>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        enableReinitialize={true}\n      >\n        {({ errors, values, touched, setValues, setFieldValue }) => (\n          <Form>\n            <div>\n              <div style={{\n                        display: \"flex\",\n                        justifyContent: 'flex-start',\n                        alignItems: 'center',\n                      }}>\n                    <label\n                      style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        margin: \"1rem 1rem 1rem 0rem\",\n                        width: \"100px\",\n                        height: \"40px\",\n                        verticalAlign: 'middle'\n                      }}\n                    >\n                      Select Company\n                    </label>\n                    <Dropdown\n                      name=\"vendorId\"\n                      fluid\n                      search\n                      selection\n                      options={ConvertVendorsDataToDropdownData(vendors)}\n                      style={fullWidthTextFieldStyle}\n                      onChange={(event, data) => {\n                        onCompanyDropDownChange(values, setValues, data.value);\n                      }}\n                      defaultValue={{value:values.vendor.vendorId, text:values.vendor.vendorName}}\n                    />\n              </div>\n\n              <div className=\"card-body border-bottom\">\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label\n                      style={{\n                        margin: \"1rem 0 1rem 0rem\",\n                        width: \"100px\",\n                        height: \"40px\",\n                      }}\n                    >\n                      Purchase Date\n                    </label>\n                    <Field\n                      name=\"purchaseDate\"\n                      type=\"date\"\n                      style={{\n                        margin: \"1rem 0 1rem 2rem\",\n                        width: \"300px\",\n                        height: \"40px\",\n                        borderWidth: \"1px solid\",\n                      }}\n                    ></Field>\n                  </div>\n                </div>\n              </div>\n              <div className='purchase-form-group-container-div'>\n                <label className='gst-label'>\n                  <Field\n                    type=\"checkbox\"\n                    name=\"checked\"\n                    value=\"isGstApplicable\"\n                    checked={values.isGstApplicable == 1}\n                    style={{ width: \"20px\", height: \"20px\", marginRight: '10px' }}\n                    onChange={event =>\n                      setFieldValue(\"isGstApplicable\", !values.isGstApplicable)\n                    }\n                  />\n                  Is GST Applied\n                </label>\n              </div>\n              <FieldArray name=\"items\">\n                {() =>\n                  values.purchaseItem.map((item, i) => {\n                    const ticketErrors =\n                      (errors.items?.length && errors.items[i]) || {};\n                    const ticketTouched =\n                      (touched.items?.length && touched.items[i]) || {};\n                    return (\n                      <div key={i} className=\"list-group list-group-flush\">\n                        <div className=\"list-group-item\">\n                          <h5\n                            className=\"card-title\"\n                            style={{\n                              margin: \"1rem 0 1rem 0rem\",\n                              width: \"100%\",\n                              height: \"40px\",\n                            }}\n                          >\n                            Item {i + 1}\n                          </h5>\n                          <div style={{\n                            width: \"100%\",\n                            display:'flex',\n                            \n                          }}>\n                        <div\n                          className=\"form-group col-6\"\n                          style={{\n                            margin: \"1rem 0 1rem 0rem\",\n                            width: \"90%\",\n                            display:'flex',\n                            flexDirection:'column',\n                            \n                          }}\n                        >\n                          <div style={{ width: \"100%\",display:'flex'}}>\n                            <div style={{ width: \"55%\", float: \"left\" }}>\n                            <Dropdown\n                              name={`purchaseItem.${i}.name`}\n                              placeholder=\"Select Item\"\n                              fluid\n                              search\n                              selection\n                              options={ConvertItemsDataToDropdownData(items)}\n                              onChange={(event, data) => {\n                                onItemDropDownChange(\n                                  i,\n                                  values,\n                                  setValues,\n                                  data.value\n                                );\n                              }}\n                              defaultValue={item.itemName}\n                            />\n                            <ErrorMessage\n                              name={`purchaseItem.${i}.name`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div>\n                            <div style={{ width: \"45%\" }}>\n                            <label style={{ margin: \"0rem 1rem 0rem 1rem\", width:'30%' }}>\n                              Quantity\n                            </label>\n                            <Field\n                              name={`purchaseItem.${i}.quantity`}\n                              type=\"text\"\n                              style={{ height: \"40px\", width:'70%'  }}\n                            />\n                            <ErrorMessage\n                              name={`purchaseItem.${i}.quantity`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div>\n                          </div>\n                          <div style={{display:'flex', marginTop:'20px'}}>\n                            <div style={{width:'45%'}}>\n                            <label style={{width:'30%', marginRight:'10px'}}>\n                              Cost Price\n                            </label>\n                            <Field\n                              name={`purchaseItem.${i}.costPrice`}\n                              type=\"number\"\n                              style={{ height: \"40px\", width:'70%' }}\n                            />\n                            <ErrorMessage\n                              name={`purchaseItem.${i}.costPrice`}\n                              component=\"div\"\n                              className=\"invalid-feedback\"\n                            />\n                            </div>\n                            <div  style={{width:'55%', display:'flex', alignItems:'center'}}>\n                              <label  style={{width:'30%'}}>Warehouse:</label>\n                              <RCreatable\n                                name={`items.${i}.storeId`}\n                                onChange={(event, data) => {\n                                  onWarehouseDropDownChange(\n                                    i,\n                                    values,\n                                    setValues,\n                                    data.value\n                                  );\n                                }}\n                                onBlur={() => {}}\n                                options={ConvertWarehouseDataToDropdownData(warehouse)}\n                                defaultValue={isEditing ? [{label: item.store.address, value: item.storeId}]:null}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div style={{width:'10%', display:'flex', justifyContent:'center',alignItems:'center'}}>\n                        <button\n                              className=\"removeLink\"\n                              type=\"button\"\n                              onClick={(e) => removeItem(i, values, setValues)}\n                              style={{ margin: \"0rem 1rem 0rem 1rem\" }}\n                            >\n                              remove\n                            </button>\n                          </div>\n                        </div>\n                        </div>\n                      </div>\n                    );\n                  })\n                }\n              </FieldArray>\n\n              <div\n                style={{\n                  width: \"200px\",\n                  marginBottom: '50px',\n                  justifyContent: \"left\",\n                  float: \"right\",\n                }}\n              >\n                <button\n                  className=\"link\"\n                  type=\"button\"\n                  onClick={(e) => addItem(e, values, setValues)}\n                >\n                  <span className=\"icon icon-add bg-green ml-10\"></span>\n                  Add Line Item\n                </button>\n              </div>\n              <div\n                style={{\n                  width: \"100%\",\n                  justifyContent: \"center\",\n                  marginBottom: '50px',\n                  display: 'flex',\n                }}\n              >\n                <button\n                  className=\"link\"\n                  type=\"button\"\n                  onClick={(e) => {\n                    setShouldShowPopup(true);\n                  }}\n                >\n                  <span className=\"icon icon-add bg-green ml-10\"></span>\n                  Add New Item\n                </button>\n              </div>\n              <div\n                style={{\n                  marginTop: \"50px\",\n                  display: \"flex\",\n                  width: \"100%\",\n                  justifyContent: 'center',\n                }}\n              >\n                <button\n                  type=\"submit\"\n                  style={{\n                    height: \"40px\",\n                    backgroundColor: \"#4CAF50\",\n                    width: \"140px\",\n                    float: \"left\",\n                    color: \"white\",\n                    borderRadius: \"4px\",\n                    border: \"0px\",\n                  }}\n                >\n                  {isEditing ? \"Edit Purchase\" : \"Create Purchase\"}\n                </button>\n                <button\n                  style={{ marginLeft: \"50px\", height: \"40px\", width: \"80px\" }}\n                  type=\"reset\"\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </Form>\n        )}\n      </Formik>\n      {shouldShowPopup ? (\n        <PopUp shouldShowPopup={shouldShowPopup} onClose={setShouldShowPopup} />\n      ) : null}\n    </Card>\n    </PageTitleContainer>\n  );\n}\n\nexport default PurchaseOrder;\n",["259","260"],"/Users/rahuljain/Downloads/royalInventory/src/pages/AddItemModel.js",[],["261","262"],"/Users/rahuljain/Downloads/royalInventory/src/reportWebVitals.js",[],["263","264"],"/Users/rahuljain/Downloads/royalInventory/src/pages/InvoicesList.js",["265","266","267","268"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"../components/Card/Card\";\nimport FilterButton from \"../components/FilterButton/FilterButton\";\nimport \"./InvoiceList.css\";\nimport DateInput from '../components/DateInput/DateInput'\nimport LinkButton from \"../components/Button/LinkButton/LinkButton\";\nimport PageTitleContainer from \"../components/PageTitleContainer/PageTitleContainer\";\nimport { getCall,putCall } from \"../helper/ApiHelper\";\nimport InvoiceTable from \"../components/Invoice/InvoiceTable\";\nimport { showMessageWithMultipleButton } from '../components/Alert/AlertPopup';\n\n\nvar heading = ['Invoice Id', 'Name', 'Amount', 'Invoice Date', 'Delivery Date', 'Status'];\n\nconst InvoicesList = () => {\n  const [invoices, setInvoices] = useState([]);\n  const [filteredInvoices, setFilteredInvoices] = useState([]);\n  const [isTodaySelected, setIsTodaySelected] = useState(false)\n  const [isYesterdaySelected, setIsYesterdaySelected] = useState(false)\n\n  let history = useHistory();\n\n  var filterFromDate\n  var filterToDate\n\n  useEffect(() => {\n\n    getCall('orders')\n      .then(function (responseArr) {\n        console.log(\"SUCCESS!!\");\n        setInvoices(responseArr);\n        setFilteredInvoices(responseArr);\n      })\n      .catch(function (reason) {\n        setInvoices(invoices);\n        console.log(\"FAILURE!!\");\n        alert(reason);\n      });\n  }, []);\n\n  const onEditClick = (index) => {\n    history.push({ pathname: \"/createInvoice/\" + invoices[index].orderId});\n    console.log('edit clicked for index: ' + index)\n  }\n  const onCancelClick = (index) => {\n\n  }\n\n  const onStatusSelection = (index, status , resetDropdown) => {\n\n    const statusDict = {'Pending':'p', 'Delivered':'d', 'Cencel':'c'}\n\n    showMessageWithMultipleButton('Do you really want to change order status?', {\n      buttons: {\n        cancel: 'cancel',\n        Yes: true,\n      },\n    }).then((value) => {\n      if (value) {\n        let invoice = filteredInvoices[index]\n        invoice.status = statusDict[status]\n        putCall('orders/' + filteredInvoices[index].orderId,invoice).then(function (responseArr) {\n          console.log(\"SUCCESS!!\");\n        })\n        .catch(function (reason) {\n          alert(reason);\n        });\n      } else {\n        resetDropdown()\n      }\n\n    })\n    \n  }\n\n  function checkMatchesIninvoices(item, value) {\n    var ifTrue = false;\n    Object.keys(item).forEach((key) => {\n      if (\n        item[key].toString().toLowerCase().indexOf(value.toLowerCase()) > -1\n      ) {\n        ifTrue = true;\n      }\n    });\n\n    return ifTrue;\n  }\n\n  const handleSearchChange = (event) => {\n    var filteredList = invoices.filter(function (item) {\n      return checkMatchesIninvoices(item, event.target.value);\n    });\n    setFilteredInvoices(filteredList);\n  };\n\n  const convertDateToDisplayFormat = (date) => {\n    let givenDate = new Date(date)\n    return givenDate.toLocaleDateString(\"en-US\")\n  }\n\n  const invoiceData = invoices.map( (invoice) => (\n    [invoice.orderId, invoice.customer.customerName, invoice.amount, convertDateToDisplayFormat(invoice.bookingDate), convertDateToDisplayFormat(invoice.deliveryDate)]\n  ))\n\n  const compareDate = (firstDate, secondDate) => {\n    return firstDate.getDay() == secondDate.getDay() && firstDate.getMonth() == secondDate.getMonth() && firstDate.getYear() == secondDate.getYear();\n  }\n\n  const checkBetweenDateRange = (to, from , checkingDate) => {\n    if((checkingDate <= to && checkingDate >= from)) {\n      return true\n    }\n  }\n    \n\n  const fromDateSelected = (event) => {\n    filterFromDate = event.target.value\n  }\n\n  const toDateSelected = (event) => {\n    \n    filterToDate = event.target.value\n    console.log('to date selected')\n    if (filterFromDate != null) {\n      var filteredList = invoices.filter(function (item) {\n        return checkBetweenDateRange(new Date(filterToDate),new Date(filterFromDate), new Date(item.bookingDate));\n      });\n      setFilteredInvoices(filteredList);\n    }\n  }\n\n  const onTodayClick = () => {\n    var filteredList = invoices.filter(function (item) {\n      let todayDate = new Date()\n      let bookingDate = new Date(item.bookingDate)\n      return compareDate(todayDate, bookingDate);\n    });\n    setIsTodaySelected(true)\n    setIsYesterdaySelected(false)\n    setFilteredInvoices(filteredList);\n  }\n\n  const onYesterdayClick = () => {\n    var filteredList = invoices.filter(function (item) {\n      let todayDate = new Date()\n      todayDate.setDate(todayDate.getDate() - 1)\n      let bookingDate = new Date(item.bookingDate)\n      return compareDate(todayDate, bookingDate);\n    });\n    setIsTodaySelected(false)\n    setIsYesterdaySelected(true)\n    setFilteredInvoices(filteredList);\n  }\n\n  const onClearFilterClick = () => {\n    setIsTodaySelected(false)\n    setIsYesterdaySelected(false)\n    setInvoices(invoices)\n  }\n\n  const status = invoices.map( (invoice) => (\n    invoice.status\n  ))\n  return (\n    <PageTitleContainer title=\"Invoice List\">\n\n      <div className='search-container'>\n        <input\n          id=\"invoiceSearchKey\"\n          name=\"invoiceSearchKey\"\n          type=\"text\"\n          placeholder=\"   Search\"\n          onChange={handleSearchChange}\n          style={{\n            margin: \"0rem 0rem 1rem 80px\",\n            width: \"60%\",\n            height: \"40px\",\n            border: \"1px solid\",\n            borderRadius: \"20px\",\n          }}\n        />\n      </div>\n      <div style={{\n        display:'flex',\n            margin: \"0rem 0rem 0rem 0rem\",\n            justifyContent:\"center\",\n          }}>\n            <FilterButton isSelected={isTodaySelected} onClick={onTodayClick}>Today</FilterButton>\n            <FilterButton isSelected={isYesterdaySelected} onClick={onYesterdayClick}>Yesterday</FilterButton>\n            <DateInput placeholder={'From:'} onChange={fromDateSelected}></DateInput>\n            <DateInput placeholder={'To:'} onChange={toDateSelected}></DateInput>\n            <LinkButton type=\"button\"\n                              onClick={onClearFilterClick}\n                            >\n                              Clear filter\n                            </LinkButton>\n        </div>\n      <Card className=\"invoice-container\">\n        <InvoiceTable heading={heading} body={invoiceData} onEditClick={onEditClick} onCancelClick={onCancelClick} status={status} onStatusSelection={onStatusSelection}/>\n      </Card>\n\n      {/* <Card className=\"invoice-container\">\n        {invoiceData.map((invoice, index) => (\n          <InvoiceItem onClick={() => handleClick(index)} invoice={invoice} />\n        ))}\n      </Card> */}\n    </PageTitleContainer>\n  );\n};\n\nexport default InvoicesList;\n",["269","270"],"/Users/rahuljain/Downloads/royalInventory/src/pages/Popup.js",["271","272","273","274"],"import React, { Component, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\nimport MyEnhancedForm from \"./AddItem/AddItem\";\nimport \"./Popup.css\";\n\n// const customStyles = {\n//     content : {\n//       top                   : '50%',\n//       left                  : '50%',\n//       right                 : 'auto',\n//       bottom                : 'auto',\n//       marginRight           : '-50%',\n//       transform             : 'translate(-50%, -50%)'\n//     }\n//   };\n\nModal.setAppElement(\"#root\");\nfunction PopUp(props) {\n  const [modalIsOpen, setIsOpen] = useState(true);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    props.onClose(false);\n  }\n  return (\n    <Modal\n      isOpen={props.shouldShowPopup}\n      scrollable={true}\n      onAfterOpen={() => {}}\n      onRequestClose={closeModal}\n      contentLabel=\"Example Modal\"\n    >\n      <div className=\"scroll-component\">\n        <div className=\"scroll-content\">\n          <MyEnhancedForm />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default PopUp;\n","/Users/rahuljain/Downloads/royalInventory/src/index.js",[],["275","276"],"/Users/rahuljain/Downloads/royalInventory/src/pages/AddCustomer.js",["277","278"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useFormik } from \"formik\";\nimport Card from \"../components/Card/Card\";\nimport CtaButton from \"../components/CtaButton/CtaButton\";\nimport \"./AddCustomer.css\";\nimport { postCall, putCall } from \"../helper/ApiHelper\";\nimport PageTitleContainer from \"../components/PageTitleContainer/PageTitleContainer\";\nimport { useState } from \"react\";\nimport { showMessage } from \"../components/Alert/AlertPopup\";\n\n\nconst InputLabel = styled.label`\n  margin-top: 1rem;\n  display: block;\n  font-size: 1rem;\n  height: 20px;\n  justify-content: flex-start;\n`;\n\nconst InputText = styled.input`\n  margin-top: 0rem;\n  font-size: 1rem;\n  border: 1px solid grey;\n  height: 40px;\n  width: 100%;\n  justify-content: flex-start;\n`;\n\nconst InputTextArea = styled.textarea`\n  font-size: 1rem;\n  height: 80px;\n  width: 100%;\n  justify-content: flex-start;\n`;\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.customerName) {\n    errors.customerName = \"Required\";\n  }\n  if (values.phone.length < 10 || values.phone.length > 11) {\n    errors.phone = 'Enter correct number of digits'\n  }\n\n  if (!values.phone) {\n    errors.phone = 'Required'\n  }\n\n  return errors;\n};\n\nconst AddCustomer = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [isInInvoice, setIsInInvoice] = useState(false);\n\n  useEffect(() => {\n    if (props.location == undefined && !props.customer) {\n      setIsEditing(false)\n    }  else if (props.customer){\n      setIsEditing(true)\n    } else if (props.location.state){\n      setIsEditing(true)\n    }\n    props.isInvoice ? setIsInInvoice(true) : setIsInInvoice(false);\n  }, []);\n\n  \n\n  const submitForm = (values) => {\n    if (formik.isValid ) {\n    if (isEditing) {\n      putCall(\"customers\", values)\n        .then((data) => {\n          console.log(\"successfully posted invoice\");\n          \n        })\n        .catch((reason) => {\n          console.log(\"failed in posting invoice\");\n          showMessage(\"OOPS!\",\n          \"Something Went Wrong!!\",\n          \"error\",\n          \"Ok\")\n        });\n      alert(JSON.stringify(values, null, 2));\n    } else {\n      values[\"customerId\"] = \"1\";\n      postCall(\"customers\", values)\n        .then((data) => {\n          console.log(\"successfully posted invoice\");\n          showMessage(\"Done!\",\n          \"Customer added successfully\",\n          \"success\",\n          \"Ok\")\n        })\n        .catch((reason) => {\n          console.log(\"failed in posting invoice\");\n          showMessage(\"OOPS!\",\n          \"Something Went Wrong!!\",\n          \"error\",\n          \"Ok\")\n        });\n      alert(JSON.stringify(values, null, 2));\n    }\n  }\n  }\n\n  const getInitialValue = () => {\n    if (props.customer) {\n      return props.customer\n    } else if (props.location.state) {\n      return props.location.state\n    } else {\n      return {\n        customerName: \"\",\n        phone: 0,\n        address: \"\",\n        email: \"\",\n        gstno: \"\",\n      }\n    }\n  }\n\n  const formik = useFormik({\n    initialValues: getInitialValue(),\n    validate,\n    enableReinitialize: false,\n    onSubmit: submitForm,\n  });\n\n  const containerClass = isInInvoice\n    ? \"customer-invoice-container\"\n    : \"customer-container\";\n\n  return (\n    <PageTitleContainer title={isInInvoice ? \"\":\"Add Customer\"}>\n      <Card className={containerClass}>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            formik.handleSubmit(e);\n          }}\n        >\n          <div>\n            <InputLabel>Customer Name:</InputLabel>\n            <InputText\n              id=\"customerName\"\n              name=\"customerName\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.customerName}\n            />\n            {formik.errors.customerName ? (\n              <div style={{ color: \"red\" }}>{formik.errors.customerName}</div>\n            ) : null}\n          </div>\n          <div>\n            <InputLabel>Phone Number:</InputLabel>\n            <InputText\n              id=\"phone\"\n              name=\"phone\"\n              type=\"number\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.phone}\n            />\n            {formik.errors.phone ? <div style={{ color: \"red\" }}>{formik.errors.phone}</div> : null}\n          </div>\n\n          <div>\n            <InputLabel>Address:</InputLabel>\n            <InputTextArea\n              id=\"address\"\n              name=\"address\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.address}\n            />\n          </div>\n          <div>\n            <InputLabel>e-mail:</InputLabel>\n            <InputText\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n              style={{ marginBottom: \"2rem\" }}\n            />\n            </div>\n            <div>\n            <InputLabel>GST no:</InputLabel>\n            <InputText\n              id=\"gstno\"\n              name=\"gstno\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.gstno}\n              style={{ marginBottom: \"2rem\" }}\n            />\n          </div>\n          <CtaButton type={isInInvoice ? 'button':'submit'} onClick={() => {submitForm(formik.values)}}>\n            {isEditing ? \"EDIT\" : \"ADD\"}\n          </CtaButton>\n        </form>\n      </Card>\n    </PageTitleContainer>\n  );\n};\n\nexport default AddCustomer;\n","/Users/rahuljain/Downloads/royalInventory/src/components/ItemListDropdown.js",["279","280","281"],"import React, { useState } from 'react';\n//import onClickOutside from 'react-onclickoutside';\nimport { Image, Item } from 'semantic-ui-react'\nimport './ItemListDropdown.css'\n\nfunction ItemListDropdown({ title, items, multiSelect = false }) {\n  const [open, setOpen] = useState(false);\n  const [selection, setSelection] = useState([]);\n  const toggle = () => setOpen(!open);\n  const [query, setQuery] = useState(\"\");\n // ItemListDropdown.handleClickOutside = () => setOpen(false);\n\n  function handleOnClick(item) {\n    if (!selection.some(current => current.id === item.id)) {\n      if (!multiSelect) {\n        setSelection([item]);\n      } else if (multiSelect) {\n        setSelection([...selection, item]);\n      }\n    } else {\n      let selectionAfterRemoval = selection;\n      selectionAfterRemoval = selectionAfterRemoval.filter(\n        current => current.id !== item.id\n      );\n      setSelection([...selectionAfterRemoval]);\n    }\n  }\n\n  function isItemInSelection(item) {\n    if (selection.some(current => current.id === item.id)) {\n      return true;\n    }\n    return false;\n  }\n\n  function filter(options) {\n      return options.filter(\n          (option) => \n            option['itemName'].toLowerCase().indexOf(query.toLowerCase()) > -1\n      );\n  }\n\n  return (\n    <div className=\"dd-wrapper\">\n      <div\n        className=\"dd-header\"\n        role=\"button\"\n        onClick={() => toggle(!open)}\n      >\n        <div className=\"dd-header__title\">\n          <input type='text' onChange={\n              e => {\n                  setQuery(e.target.value)\n              }\n          } placeholder={title}></input>\n        </div>\n        <div className=\"dd-header__action\">\n          <p>{open ? 'Close' : 'Open'}</p>\n        </div>\n      </div>\n      {open && (\n        <ul className=\"dd-list\">\n          {filter(items).map(item => (\n            <li className=\"dd-list-item\" key={item.id}>\n              <Item >\n                    <Item.Image size='tiny' src={item.imageUrl }/>\n                    <Item.Content>\n                    <Item.Header>{item.itemName}</Item.Header>\n                    </Item.Content>\n                </Item>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\n\n\n// const clickOutsideConfig = {\n//   handleClickOutside: () => ItemListDropdown.handleClickOutside,\n// };\n\n// export default onClickOutside(ItemListDropdown, clickOutsideConfig);\n\nexport default ItemListDropdown;",["282","283"],"/Users/rahuljain/Downloads/royalInventory/src/pages/CreateInvoice.js",["284","285","286","287","288","289","290","291","292","293"],"/Users/rahuljain/Downloads/royalInventory/src/components/SidebarData.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/RCreatable.js",[],"/Users/rahuljain/Downloads/royalInventory/src/config/Config.js",[],["294","295"],"/Users/rahuljain/Downloads/royalInventory/src/components/ListItem.js",[],["296","297"],"/Users/rahuljain/Downloads/royalInventory/src/App.js",["298"],"import './App.css';\nimport Sidebar from './components/Sidebar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport AddItem from './pages/AddItem/AddItem';\nimport { Reports, ReportsTwo } from './pages/Reports';\nimport Team from './pages/Team';\nimport AddCustomer from './pages/AddCustomer';\nimport CreateInvoice from './pages/CreateInvoice';\nimport PdfInvoice from './pages/PdfInvoice';\nimport ItemView from './pages/ItemView';\nimport 'semantic-ui-css/semantic.min.css'\nimport InvoiceList from './pages/InvoicesList'\nimport PurchaseOrder from './pages/PurchaseOrder';\nimport AddStaff from './pages/AddStaff/AddStaff';\nimport CustomerList from './pages/CustomerList/CustomerList';\nimport PurchaseList from './pages/PurchaseList/PurchaseList';\nimport AddVendor from './pages/AddVendor/AddVendor';\nimport VendorList from './pages/VendorList/VendorList';\nimport AddStore from './pages/AddStore/AddStore';\nimport StoreList from './pages/StoreList/StoreList';\nimport BrandList from './pages/BrandList/BrandList';\nimport CategoryList from './pages/CategoryList/CategoryList';\nimport Dashboard from './pages/Dashboard/Dashboard';\nimport Login from './pages/Login/Login';\nimport { getCurrentUser } from './store/auth-api'\nimport { PrivateRoute } from './components/PrivateRoute';\nimport {useState} from 'react';\n\nfunction App() {\n\nconst [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('user'))\n\nconst onLogout = () => {\n  setIsLoggedIn(false)\n}\n\nconst onLogin = () => {\n  setIsLoggedIn(true)\n}\n\n  return (\n    <Router>\n      {isLoggedIn && <Sidebar onLogout={onLogout}/>}     \n      <Switch>\n      <PrivateRoute exact path=\"/\">\n        <Sidebar onLogout={onLogout}/>\n      </PrivateRoute>\n        <PrivateRoute path='/addItem' exact component={AddItem} />\n        <PrivateRoute path='/reports' exact component={Reports} />\n        <PrivateRoute path='/addCustomer' exact component={AddCustomer} />\n        <PrivateRoute path='/reports/reports2' exact component={ReportsTwo} />\n        <PrivateRoute path='/createInvoice' exact component={CreateInvoice} />\n        <PrivateRoute path='/createInvoice/:orderId' exact component={CreateInvoice} />\n        <PrivateRoute path='/team' exact component={Team} />\n        <PrivateRoute path='/pdf/:orderId' exact component={PdfInvoice} />\n        <PrivateRoute path='/itemView' exact component={ItemView} />\n        <PrivateRoute path='/invoiceList' exact component={InvoiceList} />\n        <PrivateRoute path='/createPurchase' exact component={PurchaseOrder} /> \n        <PrivateRoute path='/addStaff' exact component={AddStaff} />  \n        <PrivateRoute path='/customerList' exact component={CustomerList} />  \n        <PrivateRoute path='/purchaseList' exact component={PurchaseList} />\n        <PrivateRoute path='/addVendor' exact component={AddVendor} />\n        <PrivateRoute path='/vendorList' exact component={VendorList} />\n        <PrivateRoute path='/addStore' exact component={AddStore} />\n        <PrivateRoute path='/storeList' exact component={StoreList} />\n        <PrivateRoute path='/brandList' exact component={BrandList} />\n        <PrivateRoute path='/categoryList' exact component={CategoryList} />\n        <PrivateRoute path='/dashboard' exact component={Dashboard} /> \n        <Route exact path=\"/login\">\n        <Login onLogin={onLogin}/>\n      </Route>      \n        \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/rahuljain/Downloads/royalInventory/src/pages/Reports.js",[],["299","300"],"/Users/rahuljain/Downloads/royalInventory/src/pages/ItemView.js",["301","302"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Item } from \"semantic-ui-react\";\nimport Card from \"../components/Card/Card\";\nimport ListItem from \"../components/ListItem\";\nimport \"../components/ListItem.css\";\nimport \"./ItemView.css\";\nimport { useHistory } from \"react-router-dom\";\nimport PageTitleContainer from \"../components/PageTitleContainer/PageTitleContainer\";\nimport { getCall } from '../helper/ApiHelper'\n\nconst ItemView = () => {\n  const [items, setItems] = useState([]);\n\n  const [filteredItem, setFilteredItem] = useState([]);\n\n  let history = useHistory();\n\n  useEffect(() => {\n    \n    getCall('items')\n      .then(function (responseArr) {\n        setItems(responseArr);\n        setFilteredItem(responseArr)\n      })\n      .catch(function (reason) {\n        alert(reason);\n      });\n  }, []);\n\n  const filterItem = (event) => {\n     setFilteredItem(items.filter(item => {return item.itemName.toLowerCase().indexOf(event.target.value.toLowerCase()) !== -1})) \n  }\n\n  const onItemClick = (index) => {\n    history.push({ pathname: \"/addItem\", state: filteredItem[index] });\n  }\n\n  return (\n    <PageTitleContainer title='Item List'>\n    <div className='background-div'></div>\n    <div className='search-div'><input \n            id=\"itemName\"\n            name=\"itemName\"\n            type=\"text\"\n            placeholder='   Search'\n            onChange={filterItem}\n            onBlur={() => {}} /></div>\n    <Card className=\"item-view-container\">\n      {filteredItem.map((item, index) => (\n        <>\n          <ListItem item={item} index={index} onClick={onItemClick}/>\n        </>\n      ))}\n    </Card>\n    </PageTitleContainer>\n  );\n};\n\nexport default ItemView;\n","/Users/rahuljain/Downloads/royalInventory/src/pages/AddItem/AddItem.js",["303","304","305","306","307","308","309","310","311","312","313","314","315"],"\nimport React from 'react';\nimport styled from 'styled-components';\nimport { withFormik } from 'formik';\nimport axios from 'axios'\nimport RCreatable from '../../components/RCreatable';\n//import {config, baseUrl} from '../config/Config.js';\nimport { useEffect } from 'react';\nimport './AddItem.css'\nimport CtaButton from '../../components/CtaButton/CtaButton';\nimport Card from '../../components/Card/Card';\nimport PageTitleContainer from '../../components/PageTitleContainer/PageTitleContainer';\nimport { getCall, postCall } from '../../helper/ApiHelper';\nimport { showMessage } from '../../components/Alert/AlertPopup';\n\n\nconst InputLabel = styled.label`\n  margin: auto;\n  font-size: 1rem;\n  /*font-weight: bold;*/\n  display: block;\n  padding-bottom: 2px;\n`;\n\nconst InputText = styled.input`\n  display:block;\n  margin: auto;\n  font-size: 1rem;\n  height: 30px;\n  width:100%;\n  border:1px solid rgb(196, 196, 196);\n  border-radius: 4px;\n  justify-content: flex-start;\n`;\n\nconst InputTextArea = styled.textarea`\n  display:block;\n  margin: auto;\n  font-size: 1rem;\n  height: 80px;\n  width:100%;\n  border:1px solid rgb(196, 196, 196);\n  justify-content: flex-start;\n`;\n\n\nconst baseUrl = 'https://royalfurniture.azurewebsites.net/api/'\n\nconst formikEnhancer = withFormik({\n  mapPropsToValues: props => ({\n      itemName: props.initialValues.itemName,\n      description:props.initialValues.description,\n      gstpercent:props.initialValues.gstpercent,\n      brand:props.initialValues.brand,\n      hsnCode:props.initialValues.hsnCode,\n      aliasCode:props.initialValues.aliasCode,\n      file: null,\n      parentItemName:props.initialValues.parentItemName,\n      category: props.initialValues.category,\n      numberOfCopy:props.initialValues.numberOfCopy,\n  }),\n  validate: values => {\n    const errors = {};\n\n    if (!values.itemName) {\n      errors.itemName = 'Required';\n    }\n    if (Object.keys(values.brand).length == 0) {\n      errors.brand = 'Required';\n    }\n    if (Object.keys(values.category).length == 0) {\n      errors.category = 'Required';\n    }\n\n    return errors;\n  },\n  handleSubmit: (values, { setSubmitting }) => {\n    const payload = {\n      ...values\n    };\n    console.log(payload)\n\n      var bodyDict = {\n        itemName:values.itemName,\n        isParent:values.parentItemName == {} ? 1:0,\n        parentItemName:values.parentItemName,\n        numberOfCopy: values.numberOfCopy,\n        description:values.description,\n        gstpercent:values.gstpercent,\n        hsncode:values.hsnCode,\n        aliasCode:values.aliasCode,\n        imageUrl:values.imageUrl,\n      }\n\n      let isBrandCreated = !Number.isInteger(parseInt(values.brand.value))\n      let isCategoryCreated = !Number.isInteger(parseInt(values.category.value))\n\n      if (isBrandCreated) {\n        bodyDict['brand'] = {\n          brandId:'0',\n          brandName: values.brand.value\n        }\n      } else {\n        bodyDict['brandId'] = values.brand.value\n      }\n\n      if (isCategoryCreated) {\n        bodyDict['category'] = {\n          categoryId:'0',\n          categoryName: values.category.value\n        }\n      } else {\n        bodyDict['categoryId'] = values.category.value\n      }\n\n      bodyDict['parentItemName'] = values.parentItemName.value ? values.parentItemName.value:''\n\n      bodyDict['isParent'] = Object.keys(values.parentItemName).length == 0 ? 1:0\n    postCall('items', bodyDict, true).then(function (responseArr) {\n      showMessage('Done!!!', 'Item Added Successfully', 'success', 'OK')\n          })\n  },\n  displayName: 'MyForm',\n});\n\n\n\n\n\nconst MyForm = props => {\n  const {\n    values,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    setFieldValue,\n    setFieldTouched,\n  } = props;\n\n  const [file, setFile] = React.useState(\"\");\n  const [imageUrl, setImageUrl] = React.useState(\"\");\n  const [categoryOptions, setCategoryOptions] = React.useState([]);\n  const [brandOptions, setBrandOptions] = React.useState([]);\n  const [parentItems, setParentItems] = React.useState([]);\n  \n\n  useEffect(() => {\n    getCategories()\n    getBrands()\n    getAllParentItems()\n  }, []);\n\n  function getCategories() {\n    getCall('categories').then(function (responseArr) {\n      setCategoryOptions(convertCategoryDataToDropdownData(responseArr))\n      console.log('SUCCESS!!');\n    })\n    .catch(function (reason) {\n      console.log('FAILURE!!');\n      alert(reason)\n    });\n  }\n\n  function getBrands() {\n    getCall('brands').then(function (responseArr) {\n      setBrandOptions(convertBrandDataToDropdownData(responseArr))\n      console.log('SUCCESS!!');\n    })\n    .catch(function (reason) {\n      console.log('FAILURE!!');\n      alert(reason)\n    });\n  } \n\n  function getAllParentItems() {\n    getCall('items', {isParent: 1}).then(function (responseArr) {\n      setParentItems(convertItemDataToDropdownData(responseArr))\n      console.log('SUCCESS!!');\n    })\n    .catch(function (reason) {\n      console.log('FAILURE!!');\n      alert(reason)\n    });\n  }\n\n  function convertBrandDataToDropdownData(data) {\n    let dropdownData = []\n    data.map((node, index) => {\n      dropdownData.push({'value':node.brandId , 'label':node.brandName})\n    })\n\n    return dropdownData\n  }\n\n  function convertItemDataToDropdownData(data) {\n    let dropdownData = []\n    data.map((node, index) => {\n      dropdownData.push({'value':node.itemName , 'label':node.itemName})\n    })\n\n    return dropdownData\n  }\n\n  function convertCategoryDataToDropdownData(data) {\n    let dropdownData = []\n    data.map((node, index) => {\n      dropdownData.push({'value':node.categoryId , 'label':node.categoryName})\n    })\n\n    return dropdownData\n  }\n\n  function handleUpload(event) {\n \n    setFile(event.target.files[0]);  \n  \n    let formData = new FormData()\n  \n    formData.append('file', event.target.files[0]);\n    formData.append('upload_preset','mfdq2wyh')\n    formData.append('tag','myUpload')\n  \n      const url = `https://api.cloudinary.com/v1_1/doxjtszxv/image/upload`\n  \n      const config = {\n        headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n      };\n      axios.post(url,\n          formData,config\n        ).then(function (response) {\n          setImageUrl(response.data.url)\n          setFieldValue('imageUrl', response.data.url)\n        })\n        .catch(function (reason) {\n          console.log('FAILURE!!');\n          alert('upload failure' + reason + url + formData)\n        });\n  }\n  \n  return (\n    <PageTitleContainer title='Add Item'>\n    <Card className='add-item-container'>\n    <form  onSubmit={handleSubmit}>\n        <div className=\"container__field-div\">\n          <InputLabel>\n            Item Name:\n          </InputLabel>\n          <InputText \n            id=\"itemName\"\n            name=\"itemName\"\n            type=\"text\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.itemName} />\n            {errors.itemName ? <div className='add-item__error'>{errors.itemName}</div> : null}\n        </div>\n        <div className=\"container__field-div\">\n          <InputLabel>\n            Category:\n          </InputLabel>\n          <RCreatable\n          name=\"category\"\n          onChange={setFieldValue}\n          value = {values.category}\n          onBlur={setFieldTouched}\n          options={categoryOptions}\n      />\n      {errors.category ? <div className='add-item__error'>{errors.category}</div> : null}\n        </div>\n        <div className=\"container__field-div\" >\n        <InputLabel>\n              Upload Image:\n            </InputLabel>\n        <div style={{display:'flex', alignItems:'center'}}>           \n            <input multiple type=\"file\" onChange={handleUpload}/>\n            {imageUrl != \"\" ? <img src={imageUrl} height='200px' width='200px'></img>:null}\n        </div>\n        </div>\n\n        <div className=\"container__field-div\">\n          <InputLabel>\n            Description:\n          </InputLabel>\n          <InputTextArea \n            id=\"description\"\n            name=\"description\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.description} />\n        </div>\n          <div className=\"container__field-div\">\n          <InputLabel>\n            GST percentage:\n          </InputLabel>\n          <InputText \n            id=\"gstpercent\"\n            name=\"gstpercent\"\n            type='text'\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.gstpercent} />\n          </div>   \n        <div className=\"container__field-div\">\n        <InputLabel>\n          Brand:\n        </InputLabel>\n        <RCreatable\n          name=\"brand\"\n          onChange={setFieldValue}\n          value = {values.brand}\n          onBlur={setFieldTouched}\n          options={brandOptions}\n      />\n      {errors.brand ? <div className='add-item__error'>{errors.brand}</div> : null}\n        </div>\n        <div className=\"inline__container__div\">\n          <label>\n            Alias code:\n          </label>\n          <input \n            className='inline_input'\n            type=\"text\" \n            id=\"aliasCode\"\n            name=\"aliasCode\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.aliasCode} />\n            <label style={{paddingLeft:'10px'}}>\n            HSN code:\n          </label>\n          <input \n            className='inline_input'\n            type=\"text\" \n            id=\"hsnCode\"\n            name=\"hsnCode\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.hsnCode} />\n          <label className='inline_label' style={{paddingLeft:'10px'}}>\n            Copy Required:\n          </label>\n          <input \n            className='inline_input'\n            type=\"number\" \n            id=\"numberOfCopy\"\n            name=\"numberOfCopy\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.numberOfCopy} />\n        </div>\n        <div className=\"container__field-div\">\n          <InputLabel>\n            Parent Item:\n          </InputLabel>\n          <RCreatable\n          name='parentItemName'\n          onChange={setFieldValue}\n          value = {values.parentItemName}\n          onBlur={setFieldTouched}\n          options={parentItems}\n      />\n      </div>\n        <CtaButton type=\"submit\">{'ADD'}</CtaButton>\n      </form>\n      </Card>\n      </PageTitleContainer>\n  );\n};\n\nconst MyEnhancedForm = formikEnhancer(MyForm);\n\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.itemName) {\n    errors.itemName = 'Required';\n  } else if (values.itemName.length > 15) {\n    errors.itemName = 'Must be 15 characters or less';\n  }\n\n  return errors;\n};\n\nconst AddItem = (props) => {\n\n  let item = props.location.state\n\n  let initialValues =  item ? {\n    itemName: item.itemName,\n  description:item.description,\n  gstpercent:item.gstpercent,\n  brand:{value:item.brand.brandId, label:item.brand.brandName},\n  hsnCode:9403,\n  aliasCode:item.aliasCode,\n  file: null,\n  parentItemName:{value:item.parentItemName, label:item.parentItemName},\n  category: {value:item.category.categoryId, label:item.category.categoryName},\n  numberOfCopy:item.numberOfCopy,} : {\n    itemName: '',\n    description:'',\n    gstpercent:18,\n    brand:{},\n    hsnCode:9403,\n    aliasCode:'',\n    file: null,\n    parentItemName:{},\n    category: {},\n    numberOfCopy:1,\n}\n\n  return (\n    <MyEnhancedForm initialValues={initialValues}/>\n  );\n};\n\n\nexport default AddItem;\n","/Users/rahuljain/Downloads/royalInventory/src/components/Sidebar.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/FileUpload.js",[],["316","317"],"/Users/rahuljain/Downloads/royalInventory/src/components/SubMenu.js",[],["318","319"],"/Users/rahuljain/Downloads/royalInventory/src/helper/ApiHelper.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/Card/Card.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/Team.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/Invoice/InvoiceItem.js",["320","321"],"import { Image, Item, Divider } from \"semantic-ui-react\";\nimport './InvoiceItem.css'\n\nconst InvoiceItem = (props) => {\n  return (\n    <div className=\"invoice-item-container\">\n      <Item onClick={props.handleClick}>\n        <Item.Content>\n          <Item.Header>{\"Invoice No: #\" + props.invoice.invoiceId}</Item.Header>\n          <Item.Meta>\n            <span className=\"price\" style={{ fontWeight: \"bold\" }}>\n              {\"Name: \" + props.invoice.customerName + \"    \"}\n            </span>\n            <span\n              className=\"price\"\n              style={{ fontWeight: \"bold\", marginLeft: \"50px\" }}\n            >\n              {\"Amount: \" + props.invoice.amount + \"    \"}\n            </span>\n            <span\n              className=\"price\"\n              style={{ fontWeight: \"bold\", marginLeft: \"50px\" }}\n            >\n              {\"Invoice Date: \" + props.invoice.bookingDate + \"    \"}\n            </span>\n            <span\n              className=\"price\"\n              style={{ fontWeight: \"bold\", marginLeft: \"50px\" }}\n            >\n              {\"Delivery Date: \" + props.invoice.deliveryDate + \"    \"}\n            </span>\n          </Item.Meta>\n        </Item.Content>\n      </Item>\n    </div>\n  );\n};\n\nexport default InvoiceItem;\n",["322","323"],"/Users/rahuljain/Downloads/royalInventory/src/components/Table/Table.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/Table/TableRow.js",["324"],"/Users/rahuljain/Downloads/royalInventory/src/pages/PdfInvoice.js",["325"],"/Users/rahuljain/Downloads/royalInventory/src/components/CtaButton/CtaButton.js",[],["326","327"],"/Users/rahuljain/Downloads/royalInventory/src/pages/AddStaff/AddStaff.js",["328"],"import Card from \"../../components/Card/Card\";\nimport CtaButton from \"../../components/CtaButton/CtaButton\";\nimport { postCall, putCall } from '../../helper/ApiHelper';\nimport { useFormik } from 'formik';\nimport './AddStaff.css';\nimport PageTitleContainer from \"../../components/PageTitleContainer/PageTitleContainer\";\nimport {showMessage} from '../../components/Alert/AlertPopup';\nimport {useState} from 'react';\n\n\nconst AddStaff = (props) => {\n\n  const [isEditing, setIsEditing] = useState(false);\n\n    const validate = values => {\n        const errors = {};\n      \n        if (!values.staffName) {\n          errors.staffName = 'Required';\n        } \n        if (!values.optionalData) {\n          errors.optionalData = 'Required'\n        }\n        if (values.phone.length < 10 || values.phone.length > 11) {\n          errors.phone = 'Enter correct number of digits'\n        }\n\n        if (!values.phone) {\n          errors.phone = 'Required'\n        }\n      \n        return errors;\n      };\n      \n      const getInitialValue = () => {\n        if (props.staff) {\n          return props.staff\n        } else if (props.location.state) {\n          return props.location.state\n        } else {\n          return {\n            staffName: '',\n            optionalData:'',\n            phone:'',\n            emailAddress:'',\n            address:'',\n          }\n        }\n      }\n\n    const formik = useFormik({\n        initialValues: getInitialValue(),\n        validate,\n        enableReinitialize:false,\n        onSubmit: values => {\n          if (isEditing) {\n            putCall('staffs', values, true).then((data) => {\n              showMessage('Done!!!', 'Staff Added Successfully','success', 'OK');\n            })\n          } else {\n          postCall('staffs', values, true).then((data) => {\n            showMessage('Done!!!', 'Staff Added Successfully','success', 'OK');\n          })\n        }\n        },\n      });\n\n      return (\n        <PageTitleContainer title='Add Staff Member'>\n        <Card className='staff-container'>\n        <form  onSubmit={(e) => {e.preventDefault(); formik.handleSubmit(e)}}>\n            <div>\n              <label className='staff-label'>\n                Name:\n              </label>\n              <input \n                className='staff-input'\n                id=\"staffName\"\n                name=\"staffName\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.staffName} />\n                {formik.errors.staffName ? <div style={{color:'red'}}>{formik.errors.staffName}</div> : null}\n            </div>\n            <div>\n              <label className='staff-label'>\n                Phone Number:\n              </label>\n              <input \n                className='staff-input' \n                id=\"phone\"\n                name=\"phone\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.phone} />\n                {formik.errors.phone ? <div style={{color:'red'}}>{formik.errors.phone}</div> : null}\n            </div>\n    \n            <div>\n              <label className='staff-label'>\n                Address:\n              </label>\n              <textarea \n                className='staff-text-area'\n                id=\"address\"\n                name=\"address\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.address} />\n            </div>\n              <div>\n              <label className='staff-label'>\n                Designation:\n              </label>\n              <input \n                className='staff-input' \n                id=\"optionalData\"\n                name=\"optionalData\"\n                type='text'\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.optionalData}\n                style={{marginBottom:'2rem'}} />\n                {formik.errors.optionalData ? <div style={{color:'red'}}>{formik.errors.optionalData}</div> : null}\n              </div>   \n            <CtaButton type=\"submit\" onClick={() => {}}>{'ADD'}</CtaButton>\n          </form>\n          </Card>\n          </PageTitleContainer>\n      );\n}\n\nexport default AddStaff;","/Users/rahuljain/Downloads/royalInventory/src/components/DateInput/DateInput.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/FilterButton/FilterButton.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/PageTitleContainer/PageTitleContainer.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/CustomerList/CustomerList.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/PurchaseList/PurchaseList.js",["329","330","331"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"../../components/Card/Card\";\nimport FilterButton from \"../../components/FilterButton/FilterButton\";\nimport Table from \"../../components/Table/Table\";\nimport \"./PurchaseList.css\";\nimport DateInput from '../../components/DateInput/DateInput'\nimport LinkButton from \"../../components/Button/LinkButton/LinkButton\";\nimport PageTitleContainer from \"../../components/PageTitleContainer/PageTitleContainer\";\nimport { getCall } from \"../../helper/ApiHelper\";\n\nvar heading = ['Purchase Id', 'Business Name', 'Amount', 'Purchase Date'];\n\nconst PurchaseList = () => {\n  const [purchase, setPurchase] = useState([]);\n  const [filteredPurchase, setFilteredPurchase] = useState([]);\n  const [isTodaySelected, setIsTodaySelected] = useState(false)\n  const [isYesterdaySelected, setIsYesterdaySelected] = useState(false)\n\n  let history = useHistory();\n\n  var filterFromDate\n  var filterToDate\n\n  useEffect(() => {\n    getCall('purchases').then(function (responseArr) {\n        console.log(\"SUCCESS!!\");\n        setPurchase(responseArr);\n        setFilteredPurchase(responseArr)\n      })\n      .catch(function (reason) {\n        console.log(\"FAILURE!!\");\n        alert(reason);\n      });\n  }, []);\n\n  const onEditClick = (index) => {\n    history.push({ pathname: \"/createPurchase\", state: purchase[index] });\n    console.log('edit clicked for index: ' + index)\n  }\n  const onCancelClick = (index) => {\n\n  }\n\n  function checkMatchesInInvoiceList(item, value) {\n    var ifTrue = false;\n    Object.keys(item).forEach((key) => {\n        if (item[key] != null) {\n            if (               \n              item[key].toString().toLowerCase().indexOf(value.toLowerCase()) > -1\n            ) {\n              ifTrue = true;\n            }\n          }\n    });\n\n    return ifTrue;\n  }\n\n  const handleSearchChange = (event) => {\n    var filteredList = purchase.filter(function (item) {\n      return checkMatchesInInvoiceList(item, event.target.value);\n    });\n    setFilteredPurchase(filteredList);\n  };\n\n  const convertDateToDisplayFormat = (date) => {\n    let givenDate = new Date(date)\n    return givenDate.toLocaleDateString(\"en-US\")\n  }\n\n  const purchaseData = filteredPurchase.map( (purchaseObject) => (\n    [purchaseObject.purchaseId, purchaseObject.vendor.vendorName, purchaseObject.amount, convertDateToDisplayFormat(purchaseObject.purchaseDate)]\n  ))\n\n  const compareDate = (firstDate, secondDate) => {\n    return firstDate.getDay() == secondDate.getDay() && firstDate.getMonth() == secondDate.getMonth() && firstDate.getYear() == secondDate.getYear();\n  }\n\n  const checkBetweenDateRange = (to, from , checkingDate) => {\n    if((checkingDate <= to && checkingDate >= from)) {\n      return true\n    }\n  }\n    \n\n  const fromDateSelected = (event) => {\n    filterFromDate = event.target.value\n  }\n\n  const toDateSelected = (event) => {\n    \n    filterToDate = event.target.value\n    console.log('to date selected')\n    if (filterFromDate != null) {\n      var filteredList = purchaseData.filter(function (item) {\n        return checkBetweenDateRange(new Date(filterToDate),new Date(filterFromDate), new Date(item.bookingDate));\n      });\n      setFilteredPurchase(filteredList);\n    }\n  }\n\n  const onTodayClick = () => {\n    var filteredList = purchase.filter(function (item) {\n      let todayDate = new Date()\n      let bookingDate = new Date(item.bookingDate)\n      return compareDate(todayDate, bookingDate);\n    });\n    setIsTodaySelected(true)\n    setIsYesterdaySelected(false)\n    setFilteredPurchase(filteredList);\n  }\n\n  const onYesterdayClick = () => {\n    var filteredList = purchase.filter(function (item) {\n      let todayDate = new Date()\n      todayDate.setDate(todayDate.getDate() - 1)\n      let bookingDate = new Date(item.bookingDate)\n      return compareDate(todayDate, bookingDate);\n    });\n    setIsTodaySelected(false)\n    setIsYesterdaySelected(true)\n    setFilteredPurchase(filteredList);\n  }\n\n  const onClearFilterClick = () => {\n    setIsTodaySelected(false)\n    setIsYesterdaySelected(false)\n    setPurchase(purchase)\n  }\n\n  return (\n    <PageTitleContainer title=\"Purchase List\">\n\n      <div className='search-container'>\n        <input\n          id=\"invoiceSearchKey\"\n          name=\"invoiceSearchKey\"\n          type=\"text\"\n          placeholder=\"   Search\"\n          onChange={handleSearchChange}\n          style={{\n            margin: \"0rem 0rem 1rem 80px\",\n            width: \"60%\",\n            height: \"40px\",\n            border: \"1px solid\",\n            borderRadius: \"20px\",\n          }}\n        />\n      </div>\n      <div style={{\n        display:'flex',\n            margin: \"0rem 0rem 0rem 0rem\",\n            justifyContent:\"center\",\n          }}>\n            <FilterButton isSelected={isTodaySelected} onClick={onTodayClick}>Today</FilterButton>\n            <FilterButton isSelected={isYesterdaySelected} onClick={onYesterdayClick}>Yesterday</FilterButton>\n            <DateInput placeholder={'From:'} onChange={fromDateSelected}></DateInput>\n            <DateInput placeholder={'To:'} onChange={toDateSelected}></DateInput>\n            <LinkButton type=\"button\"\n                              onClick={onClearFilterClick}\n                            >\n                              Clear filter\n                            </LinkButton>\n        </div>\n      <Card className=\"purchase-list-container\">\n        <Table heading={heading} body={purchaseData} onEditClick={onEditClick} onCancelClick={onCancelClick}/>\n      </Card>\n    </PageTitleContainer>\n  );\n};\n\nexport default PurchaseList;\n","/Users/rahuljain/Downloads/royalInventory/src/pages/AddVendor/AddVendor.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/VendorList/VendorList.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/AddStore/AddStore.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/StoreList/StoreList.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/BrandList/BrandList.js",["332"],"import { useEffect } from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport Card from \"../../components/Card/Card\";\nimport PageTitleContainer from \"../../components/PageTitleContainer/PageTitleContainer\";\nimport Table from \"../../components/Table/Table\";\nimport { getCall } from \"../../helper/ApiHelper\";\nimport './BrandList.css'\nimport { useHistory } from \"react-router-dom\";\n\nconst BrandList = () => {\n\n    let history = useHistory();\n\n    const [brand, setBrand] = useState([]);\n\n    const [filteredBrand, setFilteredBrand] = useState([]);\n\n    const getBrand = () => {\n        getCall('brands').then(function (responseArr) {\n            setBrand(responseArr)\n            setFilteredBrand(responseArr)\n          })\n          .catch(function (reason) {\n            alert(reason)\n          });\n    }\n\n    useEffect(() => {\n        getBrand()\n      }, []);\n\n      function checkMatchesInCustomerList(item, value) {\n        var ifTrue = false;\n        Object.keys(item).forEach((key) => {\n            if (item[key] != null) {\n          if (\n              \n            item[key].toString().toLowerCase().indexOf(value.toLowerCase()) > -1\n          ) {\n            ifTrue = true;\n          }\n        }\n        });\n    \n        return ifTrue;\n      }\n\n      const handleSearchChange = (event) => {\n        var filteredList = brand.filter(function (item) {\n          return checkMatchesInCustomerList(item, event.target.value);\n        });\n        setFilteredBrand(filteredList);\n      };\n\n    const brandData = filteredBrand.map( (brand) => (\n        [brand.brandId, brand.brandName]\n      ))\n\n    const heading = ['Brand Id', 'Name']\n\n    const onEditClick = (index) => {\n        history.push({ pathname: \"/addBrand\", state: filteredBrand[index] });\n        console.log('edit clicked for index: ' + index)\n      }\n\n    return (\n        <PageTitleContainer title=\"Brand List\">\n    \n          <div className='brand-search-container'>\n            <input\n              id=\"invoiceSearchKey\"\n              name=\"invoiceSearchKey\"\n              type=\"text\"\n              placeholder=\"   Search\"\n              onChange={handleSearchChange}\n              style={{\n                margin: \"0rem 0rem 1rem 0px\",\n                width: \"60%\",\n                height: \"40px\",\n                border: \"1px solid\",\n                borderRadius: \"20px\",\n              }}\n            />\n          </div>\n          <Card className=\"brand-list-container\">\n            <Table heading={heading} body={brandData}/>\n          </Card>\n        </PageTitleContainer>\n      );\n\n}\n\nexport default BrandList;","/Users/rahuljain/Downloads/royalInventory/src/pages/CategoryList/CategoryList.js",["333"],"import { useEffect,useState } from \"react\";\nimport Card from \"../../components/Card/Card\";\nimport PageTitleContainer from \"../../components/PageTitleContainer/PageTitleContainer\";\nimport Table from \"../../components/Table/Table\";\nimport { getCall } from \"../../helper/ApiHelper\";\nimport './CategoryList.css'\nimport { useHistory } from \"react-router-dom\";\n\nconst CategoryList = () => {\n\n    let history = useHistory();\n\n    const [category, setCategory] = useState([]);\n\n    const [filteredCategory, setFilteredCategory] = useState([]);\n\n    const getCategory = () => {\n        getCall('categories').then(function (responseArr) {\n            setCategory(responseArr)\n            setFilteredCategory(responseArr)\n            console.log('SUCCESS!!');\n          })\n          .catch(function (reason) {\n            console.log('FAILURE!!');\n            alert(reason)\n          });\n    }\n\n    useEffect(() => {\n        getCategory()\n      }, []);\n\n      function checkMatchesInCustomerList(item, value) {\n        var ifTrue = false;\n        Object.keys(item).forEach((key) => {\n            if (item[key] != null) {\n          if (\n              \n            item[key].toString().toLowerCase().indexOf(value.toLowerCase()) > -1\n          ) {\n            ifTrue = true;\n          }\n        }\n        });\n    \n        return ifTrue;\n      }\n\n      const handleSearchChange = (event) => {\n        var filteredList = category.filter(function (item) {\n          return checkMatchesInCustomerList(item, event.target.value);\n        });\n        setFilteredCategory(filteredList);\n      };\n\n    const categoryData = filteredCategory.map( (category) => (\n        [category.categoryId, category.categoryName]\n      ))\n\n    const heading = ['Category Id', 'Name']\n\n    const onEditClick = (index) => {\n        history.push({ pathname: \"/addCategory\", state: filteredCategory[index] });\n        console.log('edit clicked for index: ' + index)\n      }\n\n    return (\n        <PageTitleContainer title=\"Category List\">\n    \n          <div className='category-search-container'>\n            <input\n              id=\"invoiceSearchKey\"\n              name=\"invoiceSearchKey\"\n              type=\"text\"\n              placeholder=\"   Search\"\n              onChange={handleSearchChange}\n              style={{\n                margin: \"0rem 0rem 1rem 0px\",\n                width: \"60%\",\n                height: \"40px\",\n                border: \"1px solid\",\n                borderRadius: \"20px\",\n              }}\n            />\n          </div>\n          <Card className=\"category-list-container\">\n            <Table heading={heading} body={categoryData}/>\n          </Card>\n        </PageTitleContainer>\n      );\n\n}\n\nexport default CategoryList;","/Users/rahuljain/Downloads/royalInventory/src/components/Alert/AlertPopup.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/Button/LinkButton/LinkButton.js",[],["334","335"],"/Users/rahuljain/Downloads/royalInventory/src/components/Dashboard/SalesSummary.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/Button/EditButton/EditButton.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/Button/DeleteButton/DeleteButton.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/Login/Login.js",[],"/Users/rahuljain/Downloads/royalInventory/src/store/auth-api.js",["336"],"/Users/rahuljain/Downloads/royalInventory/src/store/auth-header.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/SubMenuButton.js",[],"/Users/rahuljain/Downloads/royalInventory/src/pages/Dashboard/Dashboard.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/PrivateRoute.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/Invoice/InvoiceTable.js",[],"/Users/rahuljain/Downloads/royalInventory/src/components/Invoice/InvoiceRow.js",["337","338"],"/Users/rahuljain/Downloads/royalInventory/src/components/Date/DateHelper/DateHelper.js",[],{"ruleId":"339","severity":1,"message":"340","line":5,"column":8,"nodeType":"341","messageId":"342","endLine":5,"endColumn":19},{"ruleId":"339","severity":1,"message":"343","line":6,"column":8,"nodeType":"341","messageId":"342","endLine":6,"endColumn":13},{"ruleId":"339","severity":1,"message":"344","line":8,"column":8,"nodeType":"341","messageId":"342","endLine":8,"endColumn":24},{"ruleId":"339","severity":1,"message":"345","line":11,"column":8,"nodeType":"341","messageId":"342","endLine":11,"endColumn":20},{"ruleId":"339","severity":1,"message":"346","line":18,"column":10,"nodeType":"341","messageId":"342","endLine":18,"endColumn":16},{"ruleId":"339","severity":1,"message":"347","line":20,"column":7,"nodeType":"341","messageId":"342","endLine":20,"endColumn":16},{"ruleId":"339","severity":1,"message":"348","line":28,"column":7,"nodeType":"341","messageId":"342","endLine":28,"endColumn":16},{"ruleId":"349","severity":1,"message":"350","line":43,"column":23,"nodeType":"351","messageId":"352","endLine":43,"endColumn":25},{"ruleId":"349","severity":1,"message":"350","line":55,"column":33,"nodeType":"351","messageId":"352","endLine":55,"endColumn":35},{"ruleId":"349","severity":1,"message":"350","line":66,"column":27,"nodeType":"351","messageId":"352","endLine":66,"endColumn":29},{"ruleId":"339","severity":1,"message":"353","line":99,"column":7,"nodeType":"341","messageId":"342","endLine":99,"endColumn":14},{"ruleId":"354","severity":1,"message":"355","line":281,"column":53,"nodeType":"356","messageId":"357","endLine":281,"endColumn":55},{"ruleId":"339","severity":1,"message":"358","line":293,"column":27,"nodeType":"341","messageId":"342","endLine":293,"endColumn":39},{"ruleId":"339","severity":1,"message":"359","line":295,"column":27,"nodeType":"341","messageId":"342","endLine":295,"endColumn":40},{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","replacedBy":"363"},{"ruleId":"360","replacedBy":"364"},{"ruleId":"362","replacedBy":"365"},{"ruleId":"360","replacedBy":"366"},{"ruleId":"362","replacedBy":"367"},{"ruleId":"368","severity":1,"message":"369","line":40,"column":6,"nodeType":"370","endLine":40,"endColumn":8,"suggestions":"371"},{"ruleId":"354","severity":1,"message":"355","line":107,"column":31,"nodeType":"356","messageId":"357","endLine":107,"endColumn":33},{"ruleId":"354","severity":1,"message":"355","line":107,"column":78,"nodeType":"356","messageId":"357","endLine":107,"endColumn":80},{"ruleId":"354","severity":1,"message":"355","line":107,"column":126,"nodeType":"356","messageId":"357","endLine":107,"endColumn":128},{"ruleId":"360","replacedBy":"372"},{"ruleId":"362","replacedBy":"373"},{"ruleId":"339","severity":1,"message":"374","line":1,"column":17,"nodeType":"341","messageId":"342","endLine":1,"endColumn":26},{"ruleId":"339","severity":1,"message":"375","line":2,"column":8,"nodeType":"341","messageId":"342","endLine":2,"endColumn":14},{"ruleId":"339","severity":1,"message":"376","line":20,"column":10,"nodeType":"341","messageId":"342","endLine":20,"endColumn":21},{"ruleId":"339","severity":1,"message":"377","line":22,"column":12,"nodeType":"341","messageId":"342","endLine":22,"endColumn":21},{"ruleId":"360","replacedBy":"378"},{"ruleId":"362","replacedBy":"379"},{"ruleId":"354","severity":1,"message":"355","line":59,"column":24,"nodeType":"356","messageId":"357","endLine":59,"endColumn":26},{"ruleId":"368","severity":1,"message":"380","line":67,"column":6,"nodeType":"370","endLine":67,"endColumn":8,"suggestions":"381"},{"ruleId":"339","severity":1,"message":"382","line":3,"column":10,"nodeType":"341","messageId":"342","endLine":3,"endColumn":15},{"ruleId":"339","severity":1,"message":"383","line":13,"column":12,"nodeType":"341","messageId":"342","endLine":13,"endColumn":25},{"ruleId":"339","severity":1,"message":"384","line":29,"column":12,"nodeType":"341","messageId":"342","endLine":29,"endColumn":29},{"ruleId":"360","replacedBy":"385"},{"ruleId":"362","replacedBy":"386"},{"ruleId":"349","severity":1,"message":"350","line":34,"column":23,"nodeType":"351","messageId":"352","endLine":34,"endColumn":25},{"ruleId":"349","severity":1,"message":"350","line":46,"column":24,"nodeType":"351","messageId":"352","endLine":46,"endColumn":26},{"ruleId":"339","severity":1,"message":"387","line":78,"column":10,"nodeType":"341","messageId":"342","endLine":78,"endColumn":23},{"ruleId":"339","severity":1,"message":"388","line":85,"column":10,"nodeType":"341","messageId":"342","endLine":85,"endColumn":28},{"ruleId":"368","severity":1,"message":"389","line":97,"column":6,"nodeType":"370","endLine":97,"endColumn":8,"suggestions":"390"},{"ruleId":"354","severity":1,"message":"355","line":123,"column":33,"nodeType":"356","messageId":"357","endLine":123,"endColumn":35},{"ruleId":"339","severity":1,"message":"391","line":243,"column":12,"nodeType":"341","messageId":"342","endLine":243,"endColumn":31},{"ruleId":"354","severity":1,"message":"392","line":331,"column":43,"nodeType":"356","messageId":"357","endLine":331,"endColumn":45},{"ruleId":"339","severity":1,"message":"358","line":440,"column":27,"nodeType":"341","messageId":"342","endLine":440,"endColumn":39},{"ruleId":"339","severity":1,"message":"359","line":442,"column":27,"nodeType":"341","messageId":"342","endLine":442,"endColumn":40},{"ruleId":"360","replacedBy":"393"},{"ruleId":"362","replacedBy":"394"},{"ruleId":"360","replacedBy":"395"},{"ruleId":"362","replacedBy":"396"},{"ruleId":"339","severity":1,"message":"397","line":25,"column":10,"nodeType":"341","messageId":"342","endLine":25,"endColumn":24},{"ruleId":"360","replacedBy":"398"},{"ruleId":"362","replacedBy":"399"},{"ruleId":"339","severity":1,"message":"343","line":1,"column":8,"nodeType":"341","messageId":"342","endLine":1,"endColumn":13},{"ruleId":"339","severity":1,"message":"400","line":3,"column":10,"nodeType":"341","messageId":"342","endLine":3,"endColumn":14},{"ruleId":"339","severity":1,"message":"401","line":47,"column":7,"nodeType":"341","messageId":"342","endLine":47,"endColumn":14},{"ruleId":"354","severity":1,"message":"355","line":68,"column":42,"nodeType":"356","messageId":"357","endLine":68,"endColumn":44},{"ruleId":"354","severity":1,"message":"355","line":71,"column":45,"nodeType":"356","messageId":"357","endLine":71,"endColumn":47},{"ruleId":"354","severity":1,"message":"355","line":85,"column":40,"nodeType":"356","messageId":"357","endLine":85,"endColumn":42},{"ruleId":"354","severity":1,"message":"355","line":118,"column":72,"nodeType":"356","messageId":"357","endLine":118,"endColumn":74},{"ruleId":"339","severity":1,"message":"402","line":141,"column":10,"nodeType":"341","messageId":"342","endLine":141,"endColumn":14},{"ruleId":"368","severity":1,"message":"403","line":152,"column":6,"nodeType":"370","endLine":152,"endColumn":8,"suggestions":"404"},{"ruleId":"349","severity":1,"message":"350","line":189,"column":28,"nodeType":"351","messageId":"352","endLine":189,"endColumn":30},{"ruleId":"349","severity":1,"message":"350","line":198,"column":28,"nodeType":"351","messageId":"352","endLine":198,"endColumn":30},{"ruleId":"349","severity":1,"message":"350","line":207,"column":28,"nodeType":"351","messageId":"352","endLine":207,"endColumn":30},{"ruleId":"354","severity":1,"message":"392","line":277,"column":23,"nodeType":"356","messageId":"357","endLine":277,"endColumn":25},{"ruleId":"405","severity":1,"message":"406","line":277,"column":31,"nodeType":"407","endLine":277,"endColumn":80},{"ruleId":"339","severity":1,"message":"408","line":374,"column":7,"nodeType":"341","messageId":"342","endLine":374,"endColumn":15},{"ruleId":"360","replacedBy":"409"},{"ruleId":"362","replacedBy":"410"},{"ruleId":"360","replacedBy":"411"},{"ruleId":"362","replacedBy":"412"},{"ruleId":"339","severity":1,"message":"382","line":1,"column":10,"nodeType":"341","messageId":"342","endLine":1,"endColumn":15},{"ruleId":"339","severity":1,"message":"413","line":1,"column":23,"nodeType":"341","messageId":"342","endLine":1,"endColumn":30},{"ruleId":"360","replacedBy":"414"},{"ruleId":"362","replacedBy":"415"},{"ruleId":"416","severity":2,"message":"417","line":19,"column":12,"nodeType":"418","endLine":19,"endColumn":24},{"ruleId":"368","severity":1,"message":"419","line":62,"column":6,"nodeType":"370","endLine":62,"endColumn":8,"suggestions":"420"},{"ruleId":"360","replacedBy":"421"},{"ruleId":"362","replacedBy":"422"},{"ruleId":"339","severity":1,"message":"423","line":13,"column":21,"nodeType":"341","messageId":"342","endLine":13,"endColumn":33},{"ruleId":"354","severity":1,"message":"355","line":77,"column":31,"nodeType":"356","messageId":"357","endLine":77,"endColumn":33},{"ruleId":"354","severity":1,"message":"355","line":77,"column":78,"nodeType":"356","messageId":"357","endLine":77,"endColumn":80},{"ruleId":"354","severity":1,"message":"355","line":77,"column":126,"nodeType":"356","messageId":"357","endLine":77,"endColumn":128},{"ruleId":"339","severity":1,"message":"424","line":61,"column":11,"nodeType":"341","messageId":"342","endLine":61,"endColumn":22},{"ruleId":"339","severity":1,"message":"424","line":62,"column":11,"nodeType":"341","messageId":"342","endLine":62,"endColumn":22},{"ruleId":"360","replacedBy":"425"},{"ruleId":"362","replacedBy":"426"},{"ruleId":"427","severity":1,"message":"428","line":44,"column":1,"nodeType":"429","endLine":49,"endColumn":3},{"ruleId":"339","severity":1,"message":"430","line":2,"column":8,"nodeType":"341","messageId":"342","endLine":2,"endColumn":20},{"ruleId":"354","severity":1,"message":"355","line":42,"column":23,"nodeType":"356","messageId":"357","endLine":42,"endColumn":25},"no-unused-vars","'AddCustomer' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'ItemListDropdown' is defined but never used.","'AddItemModal' is defined but never used.","'config' is defined but never used.","'StyledDiv' is assigned a value but never used.","'companies' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ticketErrors' is assigned a value but never used.","'ticketTouched' is assigned a value but never used.","no-native-reassign",["431"],"no-negated-in-lhs",["432"],["431"],["432"],["431"],["432"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'invoices'. Either include it or remove the dependency array. You can also do a functional update 'setInvoices(i => ...)' if you only need 'invoices' in the 'setInvoices' call.","ArrayExpression",["433"],["431"],["432"],"'Component' is defined but never used.","'styled' is defined but never used.","'modalIsOpen' is assigned a value but never used.","'openModal' is defined but never used.",["431"],["432"],"React Hook useEffect has missing dependencies: 'props.customer', 'props.isInvoice', and 'props.location'. Either include them or remove the dependency array.",["434"],"'Image' is defined but never used.","'handleOnClick' is defined but never used.","'isItemInSelection' is defined but never used.",["431"],["432"],"'warehouseDict' is assigned a value but never used.","'isOrderItemChanged' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getOrderDetails' and 'props.match.params.orderId'. Either include them or remove the dependency array.",["435"],"'getWarehouseForItem' is defined but never used.","Expected '!==' and instead saw '!='.",["431"],["432"],["431"],["432"],"'getCurrentUser' is defined but never used.",["431"],["432"],"'Item' is defined but never used.","'baseUrl' is assigned a value but never used.","'file' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllParentItems', 'getBrands', and 'getCategories'. Either include them or remove the dependency array.",["436"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'validate' is assigned a value but never used.",["431"],["432"],["431"],["432"],"'Divider' is defined but never used.",["431"],["432"],"react/jsx-no-undef","'DeleteButton' is not defined.","JSXIdentifier","React Hook useEffect has a missing dependency: 'props.match.params.orderId'. Either include it or remove the dependency array.",["437"],["431"],["432"],"'setIsEditing' is assigned a value but never used.","'onEditClick' is assigned a value but never used.",["431"],["432"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'DeleteButton' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},"Update the dependencies array to be: [invoices]",{"range":"448","text":"449"},"Update the dependencies array to be: [props.customer, props.isInvoice, props.location]",{"range":"450","text":"451"},"Update the dependencies array to be: [getOrderDetails, props.match.params.orderId]",{"range":"452","text":"453"},"Update the dependencies array to be: [getAllParentItems, getBrands, getCategories]",{"range":"454","text":"455"},"Update the dependencies array to be: [props.match.params.orderId]",{"range":"456","text":"457"},[1429,1431],"[invoices]",[1689,1691],"[props.customer, props.isInvoice, props.location]",[2581,2583],"[getOrderDetails, props.match.params.orderId]",[4090,4092],"[getAllParentItems, getBrands, getCategories]",[1275,1277],"[props.match.params.orderId]"]